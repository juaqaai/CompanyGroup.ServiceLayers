// -- Sammy.js -- /plugins/sammy.cache.js
// http://sammyjs.org
// Version: 0.7.2
// Built: 2012-10-19 23:50:26 -0400
// deprecated
(function(e){Sammy=Sammy||{},Sammy.MemoryCacheProxy=function(e){this._cache=e||{}},e.extend(Sammy.MemoryCacheProxy.prototype,{exists:function(e){return typeof this._cache[e]!="undefined"},set:function(e,t){return this._cache[e]=t},get:function(e){return this._cache[e]},clear:function(e){delete this._cache[e]}}),Sammy.DataCacheProxy=function(t,n){t=t||{},this.$element=n,e.each(t,function(e,t){n.data("cache."+e,t)})},e.extend(Sammy.DataCacheProxy.prototype,{exists:function(e){return typeof this.$element.data("cache."+e)!="undefined"},set:function(e,t){return this.$element.data("cache."+e,t)},get:function(e){return this.$element.data("cache."+e)},clear:function(e){this.$element.removeData("cache."+e)}}),Sammy.Cache=function(t,n){t.log("**WARNING:** This version of Sammy.Cache has been deprecated in favor of using the version in Sammy.Storage and will be removed in 1.0"),n=="data"?this.cache_proxy=new Sammy.DataCacheProxy({},this.$element()):this.cache_proxy=new Sammy.MemoryCacheProxy({}),t.cache_partials=!0,e.extend(t,{cache:function(t,n){return typeof n=="undefined"?this.cache_proxy.get(t):e.isFunction(n)&&!this.cache_proxy.exists(t)?this.cache_proxy.set(t,n.apply(this)):this.cache_proxy.set(t,n)},clearCache:function(e){return this.cache_proxy.clear(e)}}),t.helpers({cache:function(e,t){return this.app.cache(e,t)}})}})(jQuery);
