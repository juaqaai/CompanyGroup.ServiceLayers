Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: JOB

; Microsoft Dynamics Job: a(z) TestDataAreaIdJob eltávolítva
; --------------------------------------------------------------------------------
  JOBVERSION 1
  
  SOURCE #TestDataAreaIdJob
    #static void TestDataAreaIdJob(Args _args)
    #{
    #    str ret = '';
    #    ;
    #    ret = (curext() == 'bsc') ? '7000' : "KULSO";
    #
    #    info(strFmt('InventLocationId: %1', ret));
    #}
  ENDSOURCE

***Element: CLS

; Microsoft Dynamics Class: a(z) WebSyncBarCodeEntity eltávolítva
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #WebSyncBarCodeEntity
    PROPERTIES
      Name                #WebSyncBarCodeEntity
      Extends             #WebSyncBaseEntity
      RunOn               #Called from
    ENDPROPERTIES
    
    METHODS
      Version: 3
      SOURCE #classDeclaration
        #public class WebSyncBarCodeEntity extends WebSyncBaseEntity
        #{
        #    ItemBarCode barCode;
        #}
      ENDSOURCE
      SOURCE #getBarCode
        #public ItemBarCode getBarCode()
        #{
        #    ;
        #    return barCode;
        #}
        #
      ENDSOURCE
      SOURCE #setBarCode
        #public void setBarCode( ItemBarCode _barCode )
        #{
        #    ;
        #    barCode = _barCode;
        #}
        #
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics Class: a(z) WebSyncStockEntity eltávolítva
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #WebSyncStockEntity
    PROPERTIES
      Name                #WebSyncStockEntity
      Extends             #WebSyncBaseEntity
      RunOn               #Called from
    ENDPROPERTIES
    
    METHODS
      Version: 3
      SOURCE #classDeclaration
        #public class WebSyncStockEntity extends WebSyncBaseEntity
        #{
        #    InventLocationId inventLocationId;
        #
        #    ConfigId configId;
        #}
      ENDSOURCE
      SOURCE #getConfigId
        #public ConfigId getConfigId()
        #{
        #    ;
        #    return configId;
        #}
      ENDSOURCE
      SOURCE #getInventLocationId
        #public InventLocationId getInventLocationId()
        #{
        #    ;
        #    return inventLocationId;
        #}
      ENDSOURCE
      SOURCE #setConfigId
        #public void setConfigId( ConfigId _configId )
        #{
        #    ;
        #    configId = _configId;
        #}
      ENDSOURCE
      SOURCE #setInventLocationId
        #public void  setInventLocationId( InventLocationId _inventLocationId )
        #{
        #    ;
        #    inventLocationId = _inventLocationId;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics Class: a(z) WebSyncPriceEntity eltávolítva
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #WebSyncPriceEntity
    PROPERTIES
      Name                #WebSyncPriceEntity
      Extends             #WebSyncBaseEntity
      RunOn               #Called from
    ENDPROPERTIES
    
    METHODS
      Version: 3
      SOURCE #classDeclaration
        #public class WebSyncPriceEntity extends WebSyncBaseEntity
        #{
        #    AmountCur price;
        #}
      ENDSOURCE
      SOURCE #getPrice
        #public AmountCur getPrice()
        #{
        #    ;
        #    return price;
        #}
      ENDSOURCE
      SOURCE #setPrice
        #public void setPrice( AmountCur _price )
        #{
        #    ;
        #    price = _price;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics Class: a(z) WebSyncPictureEntity eltávolítva
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #WebSyncPictureEntity
    PROPERTIES
      Name                #WebSyncPictureEntity
      Extends             #WebSyncBaseEntity
      RunOn               #Called from
    ENDPROPERTIES
    
    METHODS
      Version: 3
      SOURCE #classDeclaration
        #public class WebSyncPictureEntity extends WebSyncBaseEntity
        #{
        #    FileName fileName;
        #}
      ENDSOURCE
      SOURCE #getFileName
        #public FileName getFileName()
        #{
        #    ;
        #    return fileName;
        #}
      ENDSOURCE
      SOURCE #setFileName
        #public void setFileName( FileName _fileName )
        #{
        #    ;
        #    fileName = _fileName;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics Class: a(z) WebSyncInventTxtEntity eltávolítva
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #WebSyncInventTxtEntity
    PROPERTIES
      Name                #WebSyncInventTxtEntity
      Extends             #WebSyncBaseEntity
      RunOn               #Called from
    ENDPROPERTIES
    
    METHODS
      Version: 3
      SOURCE #classDeclaration
        #public class WebSyncInventTxtEntity extends WebSyncBaseEntity
        #{
        #    ItemFreeTxt text;
        #}
      ENDSOURCE
      SOURCE #getText
        #public ItemFreeTxt getText()
        #{
        #    ;
        #    return text;
        #}
      ENDSOURCE
      SOURCE #setText
        #public void setText( ItemFreeTxt _text )
        #{
        #    ;
        #    text = _text;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics Class: a(z) WebSyncInventEntity eltávolítva
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #WebSyncInventEntity
    PROPERTIES
      Name                #WebSyncInventEntity
      Extends             #WebSyncBaseEntity
      RunOn               #Called from
    ENDPROPERTIES
    
    METHODS
      Version: 3
      SOURCE #classDeclaration
        #public class WebSyncInventEntity extends WebSyncBaseEntity
        #{
        #    AxStruktKod axStructCode;
        #
        #    ItemName itemName;
        #
        #    GyartoiCikkszam partNumber;
        #
        #    GyartoId manufacturerID;
        #
        #    GyartoNevArcsoport manufacturerName;
        #
        #    Jelleg1Id category1Id;
        #    JellegNevArcsoport category1Name;
        #
        #    Jelleg2Id category2Id;
        #    JellegNev2Arcsoport category2Name;
        #
        #    Jelleg3Id category3Id;
        #    JellegNev3Arcsoport category3Name;
        #
        #    updJotallasIdejeID garantyTimeId;
        #
        #    updJotallasModjaID garantyModeId;
        #
        #    ItemState itemState;
        #
        #    ItemNetWeight weight;
        #
        #    IntrastatItemCodeId intraCode;
        #
        #    Amount price1;
        #    Amount price2;
        #    Amount price3;
        #    Amount price4;
        #    Amount price5;
        #    Amount price6;
        #
        #    NoYes actionState;
        #    NoYes bargainState;
        #    NoYes top10State;
        #    NoYes focusWeekState;
        #    NoYes newState;
        #    NoYes booklineState;
        #
        #    TermekmenedzserID employeeId;
        #
        #    ConfigIdStandard standardConfigId;
        #
        #}
      ENDSOURCE
      SOURCE #getActionState
        #public NoYes getActionState()
        #{
        #    ;
        #    return actionState;
        #}
        #
      ENDSOURCE
      SOURCE #getAxStructCode
        #public AxStruktKod getAxStructCode()
        #{
        #    ;
        #    return axStructCode;
        #}
      ENDSOURCE
      SOURCE #getBargainState
        #public NoYes getBargainState()
        #{
        #    ;
        #    return bargainState;
        #}
      ENDSOURCE
      SOURCE #getBooklineState
        #public NoYes getBooklineState()
        #{
        #    ;
        #    return booklineState;
        #}
      ENDSOURCE
      SOURCE #getCategory1Id
        #public Jelleg1Id getCategory1Id()
        #{
        #    ;
        #    return category1Id;
        #}
        #
      ENDSOURCE
      SOURCE #getCategory1Name
        #public JellegNevArcsoport getCategory1Name()
        #{
        #    ;
        #    return category1Name;
        #}
        #
      ENDSOURCE
      SOURCE #getCategory2Id
        #public Jelleg2Id getCategory2Id()
        #{
        #    ;
        #    return category2Id;
        #}
        #
      ENDSOURCE
      SOURCE #getCategory2Name
        #public JellegNev2Arcsoport getCategory2Name()
        #{
        #    ;
        #    return category2Name;
        #}
        #
      ENDSOURCE
      SOURCE #getCategory3Id
        #public Jelleg3Id getCategory3Id()
        #{
        #    ;
        #    return category3Id;
        #}
        #
      ENDSOURCE
      SOURCE #getCategory3Name
        #public JellegNev3Arcsoport getCategory3Name()
        #{
        #    ;
        #    return category3Name;
        #}
        #
      ENDSOURCE
      SOURCE #getEmployeeId
        #public TermekmenedzserID getEmployeeId()
        #{
        #    ;
        #    return employeeId;
        #}
        #
      ENDSOURCE
      SOURCE #getFocusWeekState
        #public NoYes getFocusWeekState()
        #{
        #    ;
        #    return focusWeekState;
        #}
      ENDSOURCE
      SOURCE #getGarantyModeId
        #public updJotallasModjaID getGarantyModeId()
        #{
        #    ;
        #    return garantyModeId;
        #}
        #
      ENDSOURCE
      SOURCE #getGarantyTimeId
        #public updJotallasIdejeID getGarantyTimeId()
        #{
        #    ;
        #    return garantyTimeId;
        #}
        #
        #
      ENDSOURCE
      SOURCE #getIntraCode
        #public IntrastatItemCodeId getIntraCode()
        #{
        #    ;
        #    return intraCode;
        #}
      ENDSOURCE
      SOURCE #getItemName
        #public ItemName getItemName()
        #{
        #    ;
        #    return itemName;
        #}
      ENDSOURCE
      SOURCE #getItemState
        #public ItemState getItemState()
        #{
        #    ;
        #    return itemState;
        #}
        #
      ENDSOURCE
      SOURCE #getManufacturerId
        #public GyartoId getManufacturerId()
        #{
        #    ;
        #    return manufacturerId;
        #}
      ENDSOURCE
      SOURCE #getManufacturerName
        #public GyartoNevArcsoport getManufacturerName()
        #{
        #    ;
        #    return manufacturerName;
        #}
      ENDSOURCE
      SOURCE #getNewState
        #public NoYes getNewState()
        #{
        #    ;
        #    return newState;
        #}
      ENDSOURCE
      SOURCE #getPartNumber
        #public GyartoiCikkszam getPartNumber()
        #{
        #    ;
        #    return partNumber;
        #}
      ENDSOURCE
      SOURCE #getPrice1
        #public Amount getPrice1()
        #{
        #    ;
        #    return  price1;
        #}
      ENDSOURCE
      SOURCE #getPrice2
        #public Amount getPrice2()
        #{
        #    ;
        #    return  price2;
        #}
      ENDSOURCE
      SOURCE #getPrice3
        #public Amount getPrice3()
        #{
        #    ;
        #    return  price3;
        #}
      ENDSOURCE
      SOURCE #getPrice4
        #public Amount getPrice4()
        #{
        #    ;
        #    return  price4;
        #}
      ENDSOURCE
      SOURCE #getPrice5
        #public Amount getPrice5()
        #{
        #    ;
        #    return  price5;
        #}
      ENDSOURCE
      SOURCE #getPrice6
        #public Amount getPrice6()
        #{
        #    ;
        #    return  price6;
        #}
      ENDSOURCE
      SOURCE #getStandardConfigId
        #public ConfigIdStandard getStandardConfigId()
        #{
        #    ;
        #    return standardConfigId;
        #}
      ENDSOURCE
      SOURCE #getTop10State
        #public NoYes getTop10State()
        #{
        #    ;
        #    return top10State;
        #}
      ENDSOURCE
      SOURCE #getWeight
        #public ItemNetWeight getWeight()
        #{
        #    ;
        #    return weight;
        #}
      ENDSOURCE
      SOURCE #setActionState
        #public void setActionState( NoYes _actionState )
        #{
        #    ;
        #    actionState = _actionState;
        #}
      ENDSOURCE
      SOURCE #setAxStructCode
        #public void setAxStructCode( AxStruktKod _axStructCode )
        #{
        #    ;
        #    axStructCode = _axStructCode;
        #}
        #
      ENDSOURCE
      SOURCE #setBargainState
        #public void setBargainState( NoYes _bargainState )
        #{
        #    ;
        #    bargainState = _bargainState;
        #}
      ENDSOURCE
      SOURCE #setBooklineState
        #public void setBooklineState( NoYes _booklineState )
        #{
        #    ;
        #    booklineState = _booklineState;
        #}
      ENDSOURCE
      SOURCE #setCategory1Id
        #public void setCategory1Id( Jelleg1Id _category1Id )
        #{
        #    ;
        #    category1Id = _category1Id;
        #}
      ENDSOURCE
      SOURCE #setCategory1Name
        #public void setCategory1Name( JellegNevArcsoport _category1Name )
        #{
        #    ;
        #    category1Name = _category1Name;
        #}
      ENDSOURCE
      SOURCE #setCategory2Id
        #public void setCategory2Id( Jelleg2Id _category2Id )
        #{
        #    ;
        #    category2Id = _category2Id;
        #}
      ENDSOURCE
      SOURCE #setCategory2Name
        #public void setCategory2Name( JellegNev2Arcsoport _category2Name )
        #{
        #    ;
        #    category2Name = _category2Name;
        #}
      ENDSOURCE
      SOURCE #setCategory3Id
        #public void setCategory3Id( Jelleg3Id _category3Id )
        #{
        #    ;
        #    category3Id = _category3Id;
        #}
      ENDSOURCE
      SOURCE #setCategory3Name
        #public void setCategory3Name( JellegNev3Arcsoport _category3Name )
        #{
        #    ;
        #    category3Name = _category3Name;
        #}
        #
      ENDSOURCE
      SOURCE #setEmployeeId
        #public void setEmployeeId( TermekmenedzserID _employeeId )
        #{
        #    ;
        #    employeeId = _employeeId;
        #}
        #
      ENDSOURCE
      SOURCE #setFocusWeekState
        #public void setFocusWeekState( NoYes _focusWeekState )
        #{
        #    ;
        #    focusWeekState = _focusWeekState;
        #}
      ENDSOURCE
      SOURCE #setGarantyModeId
        #public void setGarantyModeId( updJotallasModjaID _garantyModeId  )
        #{
        #    ;
        #    garantyModeId = _garantyModeId;
        #}
        #
        #
      ENDSOURCE
      SOURCE #setGarantyTimeId
        #public void setGarantyTimeId( updJotallasIdejeID _garantyTimeId )
        #{
        #    ;
        #    garantyTimeId = _garantyTimeId;
        #}
      ENDSOURCE
      SOURCE #setIntraCode
        #public void setIntraCode( IntrastatItemCodeId _intraCode)
        #{
        #    ;
        #    intraCode = _intraCode;
        #}
        #
      ENDSOURCE
      SOURCE #setItemName
        #public void setItemName( ItemName _itemName )
        #{
        #    ;
        #    itemName = _itemName;
        #}
      ENDSOURCE
      SOURCE #setItemState
        #public void setItemState( ItemState _itemState )
        #{
        #    ;
        #    itemState = _itemState;
        #}
      ENDSOURCE
      SOURCE #setManufacturerId
        #public void setManufacturerId( GyartoId _manufacturerId )
        #{
        #    ;
        #    manufacturerId = _manufacturerId;
        #}
      ENDSOURCE
      SOURCE #setManufacturerName
        #public void setManufacturerName( GyartoNevArcsoport _manufacturerName )
        #{
        #    ;
        #    manufacturerName = _manufacturerName;
        #}
      ENDSOURCE
      SOURCE #setNewState
        #public void setNewState( NoYes _newState )
        #{
        #    ;
        #    newState = _newState;
        #}
      ENDSOURCE
      SOURCE #setPartNumber
        #public void setPartNumber( GyartoiCikkszam _partNumber )
        #{
        #    ;
        #    partNumber = _partNumber;
        #}
      ENDSOURCE
      SOURCE #setPrice1
        #public void setPrice1( Amount _price1 )
        #{
        #    ;
        #    price1 = _price1;
        #
        #}
        #
      ENDSOURCE
      SOURCE #setPrice2
        #public void setPrice2( Amount _price2 )
        #{
        #    ;
        #    price2 = _price2;
        #
        #}
      ENDSOURCE
      SOURCE #setPrice3
        #public void setPrice3( Amount _price3 )
        #{
        #    ;
        #    price3 = _price3;
        #
        #}
      ENDSOURCE
      SOURCE #setPrice4
        #public void setPrice4( Amount _price4 )
        #{
        #    ;
        #    price4 = _price4;
        #
        #}
      ENDSOURCE
      SOURCE #setPrice5
        #public void setPrice5( Amount _price5 )
        #{
        #    ;
        #    price5 = _price5;
        #
        #}
      ENDSOURCE
      SOURCE #setPrice6
        #public void setPrice6( Amount _price6 )
        #{
        #    ;
        #    price6 = _price6;
        #
        #}
      ENDSOURCE
      SOURCE #setStandardConfigId
        #public void setStandardConfigId( ConfigIdStandard _standardConfigId )
        #{
        #    ;
        #    standardConfigId = _standardConfigId;
        #}
      ENDSOURCE
      SOURCE #setTop10State
        #public void setTop10State( NoYes _top10State )
        #{
        #    ;
        #    top10State = _top10State;
        #}
      ENDSOURCE
      SOURCE #setWeight
        #public void setWeight( ItemNetWeight _weight)
        #{
        #    ;
        #    weight = _weight;
        #}
        #
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics Class: a(z) WebSyncGarantyEntity eltávolítva
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #WebSyncGarantyEntity
    PROPERTIES
      Name                #WebSyncGarantyEntity
      Extends             #WebSyncBaseEntity
      RunOn               #Called from
    ENDPROPERTIES
    
    METHODS
      Version: 3
      SOURCE #classDeclaration
        #public class WebSyncGarantyEntity extends WebSyncBaseEntity
        #{
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics Class: a(z) WebSyncBaseEntity eltávolítva
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #WebSyncBaseEntity
    PROPERTIES
      Name                #WebSyncBaseEntity
      Extends             #
      RunOn               #Called from
    ENDPROPERTIES
    
    METHODS
      Version: 3
      SOURCE #classDeclaration
        #public abstract class WebSyncBaseEntity
        #{
        #    ItemId itemId;
        #
        #    DataAreaId dataAreaId;
        #}
      ENDSOURCE
      SOURCE #getDataAreaId
        #public DataAreaId getDataAreaId()
        #{
        #    ;
        #    return dataAreaId;
        #}
      ENDSOURCE
      SOURCE #getItemId
        #public ItemId getItemId()
        #{
        #    ;
        #    return itemId;
        #}
      ENDSOURCE
      SOURCE #setDataAreaId
        #public void setDataAreaId( DataAreaId _dataAreaId )
        #{
        #    ;
        #    dataAreaId = _dataAreaId;
        #}
      ENDSOURCE
      SOURCE #setItemId
        #public void setItemId( ItemId _ItemId )
        #{
        #    ;
        #    itemId = _ItemId;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics Class: a(z) WebSync eltávolítva
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #WebSync
    PROPERTIES
      Name                #WebSync
      Extends             #
      RunOn               #Called from
    ENDPROPERTIES
    
    METHODS
      Version: 3
      SOURCE #classDeclaration
        #/*
        #    webes adatok frissítése
        #*/
        #public class WebSync
        #{
        #        System.Exception clrException;
        #}
      ENDSOURCE
      SOURCE #deleteCatalogueBarCode
        #/*
        #InternetUser.web_DeleteCatalogueBarCode(
        #@sProductID nvarchar(20),        -- termekazonosito
        #@sDataAreaID nvarchar(3),        -- hrp / bsc / srv
        #@sBarCode nvarchar(80) )
        #*/
        #public int deleteCatalogueBarCode( WebSyncBarCodeEntity entity )
        #{
        #    CCADORecordSet recordSet;
        #    CCADOFields fields;
        #
        #    AdoDbHelper helper;
        #    int ret = 0;
        #    ;
        #    try
        #    {
        #        if ( this.isInSyncList( entity.getItemId() ) )
        #        {
        #            helper = new AdoDbHelper( 'InternetUser.web_DeleteCatalogueBarCode' );
        #            helper.addInputStringParameter( '@sProductID', 20, entity.getItemId() );
        #            helper.addInputStringParameter( '@sDataAreaID', 3, entity.getDataAreaId() );
        #            helper.addInputStringParameter( '@sBarCode', 80, entity.getBarCode() );
        #
        #            recordSet = helper.executeRecordSet();
        #
        #            if ( !recordSet.EOF() )
        #            {
        #                fields = recordSet.fields();
        #                ret = AdoDbHelper::getIntValueFromFields( fields, 'Ret' );
        #            }
        #
        #            recordSet.close();
        #            helper.closeConnection();
        #        }
        #    }
        #    catch(Exception::CLRError)
        #    {
        #        clrException = ClrInterop::getLastException();
        #        info( "Hiba a deleteCatalogueBarCode metódusban!\n" + clrException.get_InnerException() );
        #        return ret;
        #    }
        #    catch
        #    {
        #        info( "Hiba a deleteCatalogueBarCode metódusban!\n" );
        #        return ret;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #deleteCatalogueInventTxt
        #/*
        #InternetUser.web_DeleteCatalogueFromInventTxt(
        #@sProductID nvarchar(20) = '',        -- termekazonosito
        #@sDataAreaID nvarchar(3) = ''        -- hrp / bsc / srv
        #)
        #*/
        #public int deleteCatalogueInventTxt( WebSyncInventTxtEntity entity )
        #{
        #    CCADORecordSet recordSet;
        #    CCADOFields fields;
        #
        #    AdoDbHelper helper;
        #    int ret = 0;
        #    ;
        #    try
        #    {
        #        if ( this.isInSyncList( entity.getItemId() ) )
        #        {
        #            helper = new AdoDbHelper( 'InternetUser.web_DeleteCatalogueInventTxt' );
        #            helper.addInputStringParameter( '@sProductID', 20, entity.getItemId() );
        #            helper.addInputStringParameter( '@sDataAreaID', 3, entity.getDataAreaId() );
        #
        #            recordSet = helper.executeRecordSet();
        #
        #            if ( !recordSet.EOF() )
        #            {
        #                fields = recordSet.fields();
        #                ret = AdoDbHelper::getIntValueFromFields( fields, 'Ret' );
        #            }
        #
        #            recordSet.close();
        #            helper.closeConnection();
        #        }
        #    }
        #    catch(Exception::CLRError)
        #    {
        #        clrException = ClrInterop::getLastException();
        #        info( "Hiba a deleteCatalogueInventTxt metódusban!\n" + clrException.get_InnerException() );
        #        return ret;
        #    }
        #    catch
        #    {
        #        info( "Hiba a deleteCatalogueInventTxt metódusban!\n" );
        #        return ret;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #deleteCataloguePicture
        #/*
        #InternetUser.web_DeleteCataloguePicture(
        #@sProductID nvarchar(20),        -- termekazonosito
        #@sDataAreaID nvarchar(3),        -- hrp / bsc / srv
        #@sPictureFile nvarchar(256)
        #)
        #*/
        #public int deleteCataloguePicture( WebSyncPictureEntity entity )
        #{
        #    CCADORecordSet recordSet;
        #    CCADOFields fields;
        #
        #    AdoDbHelper helper;
        #    int ret = 0;
        #    ;
        #    try
        #    {
        #        if ( this.isInSyncList( entity.getItemId() ) )
        #        {
        #            helper = new AdoDbHelper( 'InternetUser.web_DeleteCataloguePicture' );
        #            helper.addInputStringParameter( '@sProductID', 20, entity.getItemId() );
        #            helper.addInputStringParameter( '@sDataAreaID', 3, entity.getDataAreaId() );
        #            helper.addInputStringParameter( '@sPictureFile', 256, entity.getFileName() );
        #
        #            recordSet = helper.executeRecordSet();
        #
        #            if ( !recordSet.EOF() )
        #            {
        #                fields = recordSet.fields();
        #                ret = AdoDbHelper::getIntValueFromFields( fields, 'Ret' );
        #            }
        #
        #            recordSet.close();
        #            helper.closeConnection();
        #        }
        #    }
        #    catch(Exception::CLRError)
        #    {
        #        clrException = ClrInterop::getLastException();
        #        info( "Hiba a deleteCataloguePicture metódusban!\n" + clrException.get_InnerException() );
        #        return ret;
        #    }
        #    catch
        #    {
        #        info( "Hiba a deleteCataloguePicture metódusban!\n" );
        #        return ret;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #isInSyncList
        #/* szinkronizalando elemek: bookline-os cikk, vagy webaruhaz-as cikk
        #   es ha a vallalat nem a szerviz vallalat
        # */
        #private boolean isInSyncList( ItemId _ItemId )
        #{
        #    InventTable inventTable;
        #    boolean ret = false;
        #    ;
        #
        #    try
        #    {
        #        if ( ( _ItemId != '' ) && ( curext() != 'srv' ) )
        #        {
        #            select firstonly inventTable
        #            index hint ItemIdx
        #            where ( inventTable.ItemId == _ItemId ) && ( inventTable.BookLine == NoYes::Yes || inventTable.Webaruhaz == NoYes::Yes );
        #
        #            if ( inventTable )
        #            {
        #                ret = true;
        #            }
        #        }
        #    }
        #    catch
        #    {
        #        return ret;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #setCatalogueBarCode
        #/*
        #InternetUser.web_UpdateCatalogueBarCode(
        #@sProductID nvarchar(20),        -- termekazonosito
        #@sDataAreaID nvarchar(3),        -- hrp / bsc / srv
        #@sBarCode nvarchar(80) )
        #*/
        #public int setCatalogueBarCode( WebSyncBarCodeEntity entity )
        #{
        #    CCADORecordSet recordSet;
        #    CCADOFields fields;
        #
        #    AdoDbHelper helper;
        #    int ret = 0;
        #    ;
        #    try
        #    {
        #        if ( this.isInSyncList( entity.getItemId() ) )
        #        {
        #            helper = new AdoDbHelper( 'InternetUser.web_UpdateCatalogueBarCode' );
        #            helper.addInputStringParameter( '@sProductID', 20, entity.getItemId() );
        #            helper.addInputStringParameter( '@sDataAreaID', 3, entity.getDataAreaId() );
        #            helper.addInputStringParameter( '@sBarCode', 80, entity.getBarCode() );
        #
        #            recordSet = helper.executeRecordSet();
        #
        #            if ( !recordSet.EOF() )
        #            {
        #                fields = recordSet.fields();
        #                ret = AdoDbHelper::getIntValueFromFields( fields, 'Ret' );
        #            }
        #
        #            recordSet.close();
        #            helper.closeConnection();
        #        }
        #    }
        #    catch(Exception::CLRError)
        #    {
        #        clrException = ClrInterop::getLastException();
        #        info( "Hiba a setCatalogueBarCode metódusban!\n" + clrException.get_InnerException() );
        #        return ret;
        #    }
        #    catch
        #    {
        #        info( "Hiba a setCatalogueBarCode metódusban!\n" );
        #        return ret;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #setCatalogueBooklinePrice
        #/*
        #InternetUser.web_SetCatalogueBooklinePrice
        #(
        #  @sProductID nvarchar(20) = '',        -- termekazonosito
        #  @sDataAreaID nvarchar(3) = '',        -- hrp / bsc / srv
        #  @iPrice INT = 0
        #)
        #*/
        #public int setCatalogueBooklinePrice( WebSyncPriceEntity entity )
        #{
        #    CCADORecordSet recordSet;
        #    CCADOFields fields;
        #
        #    AdoDbHelper helper;
        #    int ret = 0;
        #    ;
        #
        #    try
        #    {
        #        if ( this.isInSyncList( entity.getItemId() ) )
        #        {
        #            helper = new AdoDbHelper( 'web_SetCatalogueBooklinePrice' );
        #            helper.addInputStringParameter( '@sProductID', 20, entity.getItemId() );
        #            helper.addInputStringParameter( '@sDataAreaID', 3, entity.getDataAreaId() );
        #            helper.addInputIntParameter( '@iPrice', real2int( entity.getPrice() ) );
        #
        #            recordSet = helper.executeRecordSet();
        #
        #            if ( !recordSet.EOF() )
        #            {
        #                fields = recordSet.fields();
        #                ret = AdoDbHelper::getIntValueFromFields( fields, 'Ret' );
        #            }
        #
        #            recordSet.close();
        #            helper.closeConnection();
        #        }
        #    }
        #    catch(Exception::CLRError)
        #    {
        #        clrException = ClrInterop::getLastException();
        #        info( "Hiba a setCatalogueBooklinePrice metódusban!\n" + clrException.get_InnerException() );
        #        return ret;
        #    }
        #    catch
        #    {
        #        info( "Hiba a setCatalogueBooklinePrice metódusban!\n" );
        #        return ret;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #setCatalogueInvent
        #/*
        #InternetUser.web_SetCatalogue(
        #@sProductID nvarchar(20) = '',        -- termekazonosito
        #@sAxStructCode nvarchar(20) = '',
        #@sStandardConfigID nvarchar(10) = '',
        #@sDataAreaID nvarchar(3) = '',        -- hrp / bsc / srv
        #@sName nvarchar(80) = '',                -- itemname
        #@sPartNumber nvarchar(20) = '',        -- gyartoicikkszam
        #@sManufacturerID nvarchar(4) = '',    -- gyarto id
        #@sManufacturerName nvarchar(64) = '',    -- gyarto nev
        #@sCategory1ID nvarchar(4) = '',        -- kategória 1 id
        #@sCategory1Name nvarchar(64) = '',    -- kategória 1 nev
        #@sCategory2ID nvarchar(4) = '',        -- kategória 1 id
        #@sCategory2Name nvarchar(64) = '',    -- kategória 1 nev
        #@sCategory3ID nvarchar(4) = '',        -- kategória 1 id
        #@sCategory3Name nvarchar(64) = '',    -- kategória 1 nev
        #@iPrice1 int = 0,                        -- ár 1
        #@iPrice2 int = 0,                        -- ár 2
        #@iPrice3 int = 0,                        -- ár 3
        #@iPrice4 int = 0,                        -- ár 4
        #@iPrice5 int = 0,                        -- ár 5
        #@iPrice6 int = 0,                        -- ár 6
        #@sGarantyTimeId nvarchar(10) = '',    -- garancia
        #@sGarantyModeId nvarchar(10) = '',    -- garancia
        #@iAction int = 0,
        #@iBargain int = 0,
        #@iTop10 int = 0,
        #@iFocusWeek int = 0,
        #@iNew int = 0,
        #@iItemState int = 0,                    -- ItemState mezo 0 : aktiv, 1 : kifuto, 2 : passziv
        #@sEmployeeId nvarchar(16) = '',
        #@iWeight real = 0,                    -- NetWeight + TaraWeight
        #@sIntraCode nvarchar(16) = '',        -- vámtarifa
        #@iBookline int = 0
        #)
        #*/
        #public int setCatalogueInvent( WebSyncInventEntity entity )
        #{
        #    CCADORecordSet recordSet;
        #    CCADOFields fields;
        #
        #    AdoDbHelper helper;
        #    int ret = 0;
        #    ;
        #    try
        #    {
        #
        # /**/
        #        if ( this.isInSyncList( entity.getItemId() ) )
        #        {
        #            helper = new AdoDbHelper( 'InternetUser.web_SetCatalogue' );
        #            helper.addInputStringParameter( '@sProductID', 20, entity.getItemId() );
        #            helper.addInputStringParameter( '@sAxStructCode', 20, entity.getAxStructCode() );
        #            helper.addInputStringParameter( '@sStandardConfigID', 10, entity.getStandardConfigId() );
        #            helper.addInputStringParameter( '@sDataAreaID', 3, entity.getDataAreaId() );
        #            helper.addInputStringParameter( '@sName', 80, entity.getItemName() );
        #            helper.addInputStringParameter( '@sPartNumber', 20, entity.getPartNumber() );
        #            helper.addInputStringParameter( '@sManufacturerID', 4, entity.getManufacturerId() );
        #            helper.addInputStringParameter( '@sManufacturerName', 64, entity.getManufacturerName() );
        #            helper.addInputStringParameter( '@sCategory1ID', 4, entity.getCategory1Id() );
        #            helper.addInputStringParameter( '@sCategory1Name', 64, entity.getCategory1Name() );
        #            helper.addInputStringParameter( '@sCategory2ID', 4, entity.getCategory2Id() );
        #            helper.addInputStringParameter( '@sCategory2Name', 64, entity.getCategory2Name() );
        #            helper.addInputStringParameter( '@sCategory3ID', 4, entity.getCategory3Id() );
        #            helper.addInputStringParameter( '@sCategory3Name', 64, entity.getCategory3Name() );
        #            helper.addInputIntParameter( '@iPrice1', real2int( entity.getPrice1() ) );
        #            helper.addInputIntParameter( '@iPrice2', real2int( entity.getPrice2() ) );
        #            helper.addInputIntParameter( '@iPrice3', real2int( entity.getPrice3() ) );
        #            helper.addInputIntParameter( '@iPrice4', real2int( entity.getPrice4() ) );
        #            helper.addInputIntParameter( '@iPrice5', real2int( entity.getPrice5() ) );
        #            helper.addInputIntParameter( '@iPrice6', real2int( entity.getPrice6() ) );
        #            helper.addInputStringParameter( '@sGarantyTimeId', 10, entity.getGarantyTimeId() );
        #            helper.addInputStringParameter( '@sGarantyModeId', 10, entity.getGarantyModeId() );
        #            helper.addInputIntParameter( '@iAction', entity.getActionState() );
        #            helper.addInputIntParameter( '@iBargain', entity.getBargainState() );
        #            helper.addInputIntParameter( '@iTop10', entity.getTop10State() );
        #            helper.addInputIntParameter( '@iFocusWeek', entity.getFocusWeekState() );
        #            helper.addInputIntParameter( '@iNew', entity.getNewState() );
        #            helper.addInputIntParameter( '@iItemState', entity.getItemState() );
        #            helper.addInputStringParameter( '@sEmployeID', 20, entity.getEmployeeId() );
        #            helper.addInputIntParameter( '@iWeight', real2int( entity.getWeight() ) );
        #            helper.addInputStringParameter( '@sIntraCode', 16, entity.getIntraCode() );
        #            helper.addInputIntParameter( '@iBookline', entity.getBooklineState() );
        #
        #            recordSet = helper.executeRecordSet();
        #
        #            if ( !recordSet.EOF() )
        #            {
        #                fields = recordSet.fields();
        #                ret = AdoDbHelper::getIntValueFromFields( fields, 'Ret' );
        #            }
        #
        #            recordSet.close();
        #            helper.closeConnection();
        #        }
        #
        #    }
        #    catch(Exception::CLRError)
        #    {
        #        clrException = ClrInterop::getLastException();
        #        info( "Hiba a setCatalogueInvent metódusban!\n" + clrException.get_InnerException() );
        #        return ret;
        #    }
        #    catch
        #    {
        #        info( "Hiba a setCatalogueInvent metódusban!\n" );
        #        return ret;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #setCatalogueInventTxt
        #/*
        #InternetUser.web_UpdateCatalogueInventTxt
        #(
        #    @sProductID nvarchar(20),        -- termekazonosito
        #    @sDataAreaID nvarchar(3),        -- hrp / bsc / srv
        #    @sDescription nvarchar(1024)
        #)
        #*/
        #public int setCatalogueInventTxt( WebSyncInventTxtEntity entity )
        #{
        #    CCADORecordSet recordSet;
        #    CCADOFields fields;
        #
        #    AdoDbHelper helper;
        #    int ret = 0;
        #    ;
        #    try
        #    {
        #        if ( this.isInSyncList( entity.getItemId() ) )
        #        {
        #            helper = new AdoDbHelper( 'InternetUser.web_UpdateCatalogueInventTxt' );
        #            helper.addInputStringParameter( '@sProductID', 20, entity.getItemId() );
        #            helper.addInputStringParameter( '@sDataAreaID', 3, entity.getDataAreaId() );
        #            helper.addInputStringParameter( '@sDescription', 1024, entity.getText() );
        #
        #            recordSet = helper.executeRecordSet();
        #
        #            if ( !recordSet.EOF() )
        #            {
        #                fields = recordSet.fields();
        #                ret = AdoDbHelper::getIntValueFromFields( fields, 'Ret' );
        #            }
        #
        #            recordSet.close();
        #            helper.closeConnection();
        #        }
        #    }
        #    catch(Exception::CLRError)
        #    {
        #        clrException = ClrInterop::getLastException();
        #        info( "Hiba a setCatalogueInventTxt metódusban!\n" + clrException.get_InnerException() );
        #        return ret;
        #    }
        #    catch
        #    {
        #        info( "Hiba a setCatalogueInventTxt metódusban!\n" );
        #        return ret;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #setCataloguePicture
        #/*
        #InternetUser.web_SetCataloguePicture
        #{
        #    @sProductID nvarchar(20),        -- termekazonosito
        #    @sDataAreaID nvarchar(3),        -- hrp / bsc / srv
        #    @sPictureFile nvarchar(256)
        #}
        #*/
        #public int setCataloguePicture( WebSyncPictureEntity entity )
        #{
        #    CCADORecordSet recordSet;
        #    CCADOFields fields;
        #
        #    AdoDbHelper helper;
        #    int ret = 0;
        #    ;
        #    try
        #    {
        #        if ( this.isInSyncList( entity.getItemId() ) )
        #        {
        #            helper = new AdoDbHelper( 'InternetUser.web_SetCataloguePicture' );
        #            helper.addInputStringParameter( '@sProductID', 20, entity.getItemId() );
        #            helper.addInputStringParameter( '@sDataAreaID', 3, entity.getDataAreaId() );
        #            helper.addInputStringParameter( '@sPictureFile', 256, entity.getFileName() );
        #
        #            recordSet = helper.executeRecordSet();
        #
        #            if ( !recordSet.EOF() )
        #            {
        #                fields = recordSet.fields();
        #                ret = AdoDbHelper::getIntValueFromFields( fields, 'Ret' );
        #            }
        #
        #            recordSet.close();
        #            helper.closeConnection();
        #        }
        #    }
        #    catch(Exception::CLRError)
        #    {
        #        clrException = ClrInterop::getLastException();
        #        info( "Hiba a setCataloguePicture metódusban!\n" + clrException.get_InnerException() );
        #        return ret;
        #    }
        #    catch
        #    {
        #        info( "Hiba a setCataloguePicture metódusban!\n" );
        #        return ret;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #setCatalogueStock
        #/*
        #InternetUser.web_SetCatalogueStock(
        #@sProductID nvarchar(20) = '',        -- termekazonosito
        #@sDataAreaID nvarchar(3) = '',        -- hrp / bsc / srv
        #@sConfigID nvarchar(10) = '',
        #@sInventLocationID nvarchar(10) = ''
        #)
        #*/
        #public int setCatalogueStock( WebSyncStockEntity entity )
        #{
        #    CCADORecordSet recordSet;
        #    CCADOFields fields;
        #
        #    AdoDbHelper helper;
        #    int ret = 0;
        #    ;
        #
        #    try
        #    {
        #        if ( this.isInSyncList( entity.getItemId() ) )
        #        {
        #            helper = new AdoDbHelper( 'InternetUser.web_SetCatalogueStock' );
        #            helper.addInputStringParameter( '@sProductID', 20, entity.getItemId() );
        #            helper.addInputStringParameter( '@sDataAreaID', 3, entity.getDataAreaId() );
        #            helper.addInputStringParameter( '@sConfigID', 10, entity.getConfigId() );
        #            helper.addInputStringParameter( '@sInventLocationID', 10, entity.getInventLocationID() );
        #
        #            recordSet = helper.executeRecordSet();
        #
        #            if ( !recordSet.EOF() )
        #            {
        #                fields = recordSet.fields();
        #                ret = AdoDbHelper::getIntValueFromFields( fields, 'Ret' );
        #            }
        #
        #            recordSet.close();
        #            helper.closeConnection();
        #        }
        #    }
        #    catch(Exception::CLRError)
        #    {
        #        clrException = ClrInterop::getLastException();
        #        info( "Hiba a setCatalogueStock metódusban!\n" + clrException.get_InnerException() );
        #        return ret;
        #    }
        #    catch
        #    {
        #        info( "Hiba a setCatalogueStock metódusban!\n" );
        #        return ret;
        #    }
        #    return ret;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: DBT

; Microsoft Dynamics Table : updKepek unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #updKepek
    PROPERTIES
      Name                #updKepek
      SaveDataPerCompany  #No
      CreatedDate         #Yes
      CreatedTime         #Yes
    ENDPROPERTIES
    
    FIELDS
      FIELD #RefTableId
        INT
        PROPERTIES
          Name                #RefTableId
          Table               #updKepek
          ExtendedDataType    
            ARRAY 
              #RefTableId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #RefRecId
        INT64
        PROPERTIES
          Name                #RefRecId
          Table               #updKepek
          ExtendedDataType    
            ARRAY 
              #RefRecId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #ItemId
        STRING
        PROPERTIES
          Name                #ItemId
          Table               #updKepek
          ExtendedDataType    
            ARRAY 
              #ItemId
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ElsodlegesKep
        ENUM
        PROPERTIES
          Name                #ElsodlegesKep
          Table               #updKepek
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #FileName
        STRING
        PROPERTIES
          Name                #FileName
          Table               #updKepek
          ExtendedDataType    
            ARRAY 
              #Filename
              #
            ENDARRAY
          StringSize          #259
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
    ENDGROUPS
    
    INDICES
      #IDX_1
      PROPERTIES
        Name                #IDX_1
      ENDPROPERTIES
      
      INDEXFIELDS
        #RefTableId
        #RefRecId
      ENDINDEXFIELDS
      
      #Idx_RecId
      PROPERTIES
        Name                #Idx_RecId
        AllowDuplicates     #No
      ENDPROPERTIES
      
      INDEXFIELDS
        #RecId
      ENDINDEXFIELDS
      
    ENDINDICES
    REFERENCES
      REFERENCE #InventTable
        PROPERTIES
          Name                #InventTable
          Table               #InventTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ItemId
            RelatedField        #ItemId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
    ENDDELETEACTIONS
    
    METHODS
      Version: 3
      SOURCE #constructPictureSyncEntity
        #private PictureSyncEntity constructPictureSyncEntity()
        #{
        #    PictureSyncEntity entity;
        #    ;
        #    try
        #    {
        #        entity = new PictureSyncEntity();
        #        entity.setItemId( this.ItemId );
        #        entity.setFileName( this.FileName );
        #        entity.setPrimary( this.ElsodlegesKep );
        #        entity.setRecId(this.RecId );
        #    }
        #    catch
        #    {
        #        return new PictureSyncEntity();
        #    }
        #    return entity;
        #}
      ENDSOURCE
      SOURCE #constructWebSyncPictureEntity
        #private WebSyncPictureEntity constructWebSyncPictureEntity()
        #{
        #    WebSyncPictureEntity entity;
        #    ;
        #    try
        #    {
        #        entity = new WebSyncPictureEntity();
        #        entity.setItemId( this.ItemId );
        #        entity.setFileName( this.FileName );
        #        entity.setDataAreaId( curext() );
        #    }
        #    catch
        #    {
        #        return new WebSyncPictureEntity();
        #    }
        #    return entity;
        #}
      ENDSOURCE
      SOURCE #delete
        #public void delete()
        #{
        #    SyncServiceProvider sync;
        #    ;
        #
        #    sync = new SyncServiceProvider(SyncServiceConfigKey::Msmq);
        #    sync.deletePicture( this.constructPictureSyncEntity() );
        #
        #    super();
        #}
      ENDSOURCE
      SOURCE #insert
        #public void insert()
        #{
        #    updKepek   updKepek;
        #    SyncServiceProvider sync;
        #    ;
        #    if (this.ElsodlegesKep == noyes::Yes)
        #    {
        #        ttsbegin;
        #        while select forupdate ElsodlegesKep from updKepek
        #               where updKepek.RefTableId == this.RefTableId &&
        #                     updKepek.RefRecId == this.RefRecId &&
        #                     updKepek.ElsodlegesKep == noyes::Yes
        #        {
        #            updKepek.ElsodlegesKep = noyes::No;
        #            updKepek.doupdate();
        #        }
        #
        #        ttscommit;
        #    }
        #
        #    sync = new SyncServiceProvider(SyncServiceConfigKey::Msmq);
        #    sync.insertPicture( this.constructPictureSyncEntity() );
        #
        #    super();
        #}
      ENDSOURCE
      SOURCE #update
        #public void update()
        #{
        #    updKepek   updKepek;
        #    SyncServiceProvider sync;
        #    ;
        #
        #    if (this.ElsodlegesKep == noyes::Yes)
        #    {
        #        ttsbegin;
        #        while select forupdate ElsodlegesKep from updKepek
        #            where updKepek.ItemId == this.ItemId
        #            && updKepek.ElsodlegesKep == noyes::Yes
        #        {
        #            updKepek.ElsodlegesKep = noyes::No;
        #            updKepek.doupdate();
        #        }
        #        ttscommit;
        #    }
        #
        #    sync = new SyncServiceProvider(SyncServiceConfigKey::Msmq);
        #    sync.setPrimaryPicture( this.constructPictureSyncEntity() );
        #
        #    super();
        #}
      ENDSOURCE
      SOURCE #newRecord
        #static void newRecord(RefTableId _reftableid, int64 _refRecid, ItemId _ItemId, FileName _FileName )
        #{
        #    updKepek    updKepek;
        #    WebSync    webSync;
        #    WebSyncPictureEntity entity;
        #    ;
        #
        #    updKepek.clear();
        #    updKepek.RefTableId = _reftableid;
        #    updKepek.RefRecId = _refRecid;
        #    updKepek.ItemId = _ItemId;
        #    updKepek.FileName = _FileName;
        #    updKepek.insert();
        #
        #    try
        #    {
        #        entity = new WebSyncPictureEntity();
        #        entity.setItemId( _ItemId );
        #        entity.setFileName( _FileName );
        #        entity.setDataAreaId( curext() );
        #        webSync = new WebSync();
        #        webSync.setCataloguePicture( entity );
        #    }
        #    catch
        #    {
        #    }
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics Table : PriceDiscTable unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #PriceDiscTable
    PROPERTIES
      Name                #PriceDiscTable
      Label               #@SYS5926
      FormRef             #PriceDiscTable_PriceSales
      TitleField1         #relation
      TitleField2         #ItemRelation
      ConfigurationKey    #PriceDisc
      SecurityKey         #BasicTables
      CacheLookup         #Found
      CreateRecIdIndex    #Yes
      TableGroup          #Group
      PrimaryIndex        #RecId
      ClusterIndex        #PriceDiscIdx
      ModifiedDate        #Yes
      ModifiedTime        #Yes
      ModifiedBy          #Yes
      CreatedDate         #Yes
      CreatedTime         #Yes
      CreatedBy           #Yes
    ENDPROPERTIES
    
    FIELDS
      FIELD #InventDimId
        STRING
        PROPERTIES
          Name                #InventDimId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PriceDiscTable
          ExtendedDataType    
            ARRAY 
              #InventDimId
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Akciokod
        STRING
        PROPERTIES
          Name                #Akciokod
          Label               #Akciókód
          Table               #PriceDiscTable
          ExtendedDataType    
            ARRAY 
              #updAkciokod
              #
            ENDARRAY
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
    ENDGROUPS
    
    INDICES
      #RetailPrices
      PROPERTIES
        Name                #RetailPrices
      ENDPROPERTIES
      
      INDEXFIELDS
        #relation
        #ItemRelation
        #ItemCode
        #AccountCode
        #FromDate
        #ToDate
        #AccountRelation
      ENDINDEXFIELDS
      
    ENDINDICES
    REFERENCES
    ENDREFERENCES
    
    DELETEACTIONS
    ENDDELETEACTIONS
    
    METHODS
      Version: 3
      SOURCE #constructWebSyncPriceEntity
        #private WebSyncPriceEntity constructWebSyncPriceEntity()
        #{
        #    WebSyncPriceEntity entity;
        #    ;
        #
        #    try
        #    {
        #        entity = new WebSyncPriceEntity();
        #        entity.setItemId( this.ItemRelation );
        #        entity.setPrice( this.Amount );
        #        entity.setDataAreaId( curext() );
        #    }
        #    catch
        #    {
        #        return new WebSyncPriceEntity();
        #    }
        #
        #    return entity;
        #}
      ENDSOURCE
      SOURCE #delete
        #public void delete()
        #{
        #    WebSync webSync;
        #    WebSyncPriceEntity entity;
        #    ;
        #
        #    if ( this.AccountRelation == 'B' )
        #    {
        #        entity = this.constructWebSyncPriceEntity();
        #        entity.setPrice( 0 );
        #        webSync = new WebSync();
        #        webSync.setCatalogueBooklinePrice( entity );
        #    }
        #    super();
        #}
      ENDSOURCE
      SOURCE #getItemName
        #display ItemName getItemName()
        #{
        #    InventTable it;
        #    ;
        #    select ItemName from it where it.ItemId==this.ItemRelation;
        #
        #    return it.ItemName;
        #}
      ENDSOURCE
      SOURCE #getVendName
        #// Szállító nevének megjelenítése - "PriceDiscTable" form (Zs.E. 2007.11.23)
        #display VendName getVendName()
        #{
        #    VendTable   vendTable;
        #    VendName    ret = '';
        #
        #    if (this.Module == ModuleInventCustVend::Vend)
        #    {
        #        select firstonly Name from vendTable
        #                             where vendTable.AccountNum == this.AccountRelation;
        #        ret = vendTable.Name;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #Insert
        #/*
        #    AOSRunMode::Server
        #*/
        #void  insert()
        #{
        #    WebSync    webSync;
        #    ;
        #
        #    if (this.AccountCode == TableGroupAll::All)
        #    {
        #        this.AccountRelation = '';
        #    }
        #
        #    if (this.ItemCode == TableGroupAll::All)
        #    {
        #        this.ItemRelation   = '';
        #        this.UnitId         = '';
        #        this.InventDimId    = InventDim::inventDimIdBlank();
        #    }
        #
        #    if (this.ItemCode != TableGroupAll::Table)
        #    {
        #        this.UnitId         = '';
        #        this.InventDimId    = InventDim::inventDimIdBlank();
        #    }
        #
        #    if ( this.AccountRelation == 'B' )
        #    {
        #        webSync = new WebSync();
        #        webSync.setCatalogueBooklinePrice( this.constructWebSyncPriceEntity() );
        #    }
        #
        #    super();
        #}
        #
      ENDSOURCE
      SOURCE #Update
        #/*
        #    AOSRunMode::Server
        #*/
        #void  update()
        #{
        #    WebSync    webSync;
        #    ;
        #
        #    if (this.AccountCode == TableGroupAll::All)
        #    {
        #        this.AccountRelation = '';
        #    }
        #
        #    if (this.ItemCode == TableGroupAll::All)
        #    {
        #        this.ItemRelation   = '';
        #        this.UnitId         = '';
        #        this.InventDimId    = InventDim::inventDimIdBlank();
        #    }
        #
        #    if (this.ItemCode != TableGroupAll::Table)
        #    {
        #        this.UnitId         = '';
        #        this.InventDimId    = InventDim::inventDimIdBlank();
        #    }
        #
        #    if ( this.AccountRelation == 'B' )
        #    {
        #        webSync = new WebSync();
        #        webSync.setCatalogueBooklinePrice( this.constructWebSyncPriceEntity() );
        #    }
        #    super();
        #}
        #
      ENDSOURCE
      SOURCE #webLookupAccoujuntRelatonion
        #client static void webLookupAccoujuntRelatonion(PriceType _relation, TableGroupAll _AccountCode )
        #{
        #    webTableLookup          webTableLookup;
        #    Query                   query;
        #;
        #
        #    if (_relation == PriceType::PriceSales && _AccountCode == TableGroupAll::GroupId)
        #    {
        #        webTableLookup = webTableLookup::newParameters(tablenum(PriceDiscGroup));
        #        webTableLookup.addLookupfield(fieldnum(PriceDiscGroup, GroupId),true);
        #        webTableLookup.addLookupfield(fieldnum(PriceDiscGroup, Name));
        #
        #        query = new Query();
        #        query.addDataSource(tablenum(PriceDiscGroup));
        #        webTableLookup.parmQuery(query);
        #    }
        #    else if (_relation == PriceType::PriceSales && _AccountCode == TableGroupAll::Table)
        #    {
        #        webTableLookup = webTableLookup::newParameters(tablenum(CustTable));
        #        webTableLookup.addLookupfield(fieldnum(CustTable, AccountNum),true);
        #        webTableLookup.addLookupfield(fieldnum(CustTable, Name));
        #
        #        query = new Query();
        #        query.addDataSource(tablenum(CustTable));
        #        webTableLookup.parmQuery(query);
        #    }
        #
        #    webTableLookup.run();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics Table : InventTxt unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #InventTxt
    PROPERTIES
      Name                #InventTxt
      Label               #@SYS24221
      TitleField1         #ItemId
      TitleField2         #LanguageId
      ConfigurationKey    #LogisticsBasic
      SecurityKey         #InventTables
      CacheLookup         #FoundAndEmpty
      TableGroup          #Group
      PrimaryIndex        #ItemLanguageIdx
      ClusterIndex        #ItemLanguageIdx
    ENDPROPERTIES
    
    FIELDS
    ENDFIELDS
    GROUPS
    ENDGROUPS
    
    INDICES
    ENDINDICES
    REFERENCES
    ENDREFERENCES
    
    DELETEACTIONS
    ENDDELETEACTIONS
    
    METHODS
      Version: 3
      SOURCE #constructDescriptionSyncEntity
        #private DescriptionSyncEntity constructDescriptionSyncEntity()
        #{
        #    DescriptionSyncEntity entity;
        #    ;
        #
        #    try
        #    {
        #        entity = new DescriptionSyncEntity();
        #        entity.setItemId( this.ItemId );
        #        entity.setText( this.Txt );
        #    }
        #    catch
        #    {
        #        return new DescriptionSyncEntity();
        #    }
        #    return entity;
        #}
      ENDSOURCE
      SOURCE #constructWebSyncInventTxtEntity
        #private WebSyncInventTxtEntity constructWebSyncInventTxtEntity()
        #{
        #    WebSyncInventTxtEntity entity;
        #    ;
        #
        #    try
        #    {
        #        entity = new WebSyncInventTxtEntity();
        #        entity.setItemId( this.ItemId );
        #        entity.setText( this.Txt );
        #        entity.setDataAreaId( curext() );
        #    }
        #    catch
        #    {
        #        return new WebSyncInventTxtEntity();
        #    }
        #    return entity;
        #}
      ENDSOURCE
      SOURCE #delete
        #public void delete()
        #{
        #    SyncServiceProvider sync;
        #    ;
        #
        #    sync = new SyncServiceProvider(SyncServiceConfigKey::Msmq);
        #
        #    sync.deleteDescription( this.constructDescriptionSyncEntity() );
        #
        #    super();
        #}
      ENDSOURCE
      SOURCE #insert
        #public void insert()
        #{
        #    SyncServiceProvider sync;
        #    ;
        #
        #    if (!this.InventDimId)
        #    {
        #        this.InventDimId = InventDim::inventDimIdBlank();
        #    }
        #
        #    sync = new SyncServiceProvider(SyncServiceConfigKey::Msmq);
        #
        #    sync.insertDescription( this.constructDescriptionSyncEntity() );
        #
        #    super();
        #}
      ENDSOURCE
      SOURCE #update
        #public void update()
        #{
        #    SyncServiceProvider sync;
        #    ;
        #
        #    sync = new SyncServiceProvider(SyncServiceConfigKey::Msmq);
        #
        #    sync.updateDescription( this.constructDescriptionSyncEntity() );
        #
        #    super();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics Table : InventTable unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #InventTable
    PROPERTIES
      Name                #InventTable
      Label               #@SYS15649
      FormRef             #InventTable
      SearchLinkRefType   #Action
      SearchLinkRefName   #EPInventTableSearchItem
      TitleField1         #ItemId
      TitleField2         #ItemName
      ConfigurationKey    #LogisticsBasic
      SecurityKey         #InventTables
      CacheLookup         #Found
      CreateRecIdIndex    #Yes
      TableGroup          #Main
      PrimaryIndex        #ItemIdx
      ClusterIndex        #ItemIdx
      AnalysisVisibility  #High
      ModifiedDate        #Yes
      ModifiedTime        #Yes
      ModifiedBy          #Yes
      CreatedDate         #Yes
      CreatedTime         #Yes
      CreatedBy           #Yes
    ENDPROPERTIES
    
    FIELDS
      FIELD #GyartoNev
        STRING
        PROPERTIES
          Name                #GyartoNev
          Label               #Gyártó név
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #GyartoNevArcsoport
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #JellegNev1
        STRING
        PROPERTIES
          Name                #JellegNev1
          Label               #Jelleg 1
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #JellegNevArcsoport
              #
            ENDARRAY
          StringSize          #25
        ENDPROPERTIES
        
      FIELD #JellegNev2
        STRING
        PROPERTIES
          Name                #JellegNev2
          Label               #Jelleg 2
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #JellegNev2Arcsoport
              #
            ENDARRAY
          StringSize          #35
        ENDPROPERTIES
        
      FIELD #JellegNev3
        STRING
        PROPERTIES
          Name                #JellegNev3
          Label               #Jelleg 3
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #JellegNev3Arcsoport
              #
            ENDARRAY
          StringSize          #30
        ENDPROPERTIES
        
      FIELD #Strukturakod
        STRING
        PROPERTIES
          Name                #Strukturakod
          Label               #UNI Struktúrakód
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #updStrukturaKod
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #Garancia
        STRING
        PROPERTIES
          Name                #Garancia
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #Garancia
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #Arsav
        REAL
        PROPERTIES
          Name                #Arsav
          Label               #Ársáv
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #Arsav
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #ServiceType
        ENUM
        PROPERTIES
          Name                #ServiceType
          Table               #InventTable
          EnumType            #ServiceType
        ENDPROPERTIES
        
      FIELD #DobozRaklap
        INT
        PROPERTIES
          Name                #DobozRaklap
          Label               #Doboz / raklap
          Table               #InventTable
        ENDPROPERTIES
        
      FIELD #ItemState
        ENUM
        PROPERTIES
          Name                #ItemState
          Table               #InventTable
          EnumType            #ItemState
        ENDPROPERTIES
        
      FIELD #Akcios
        ENUM
        PROPERTIES
          Name                #Akcios
          Label               #Akciós
          Table               #InventTable
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #Webaruhaz
        ENUM
        PROPERTIES
          Name                #Webaruhaz
          Label               #Webáruház
          Table               #InventTable
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #RetailSzamolando
        ENUM
        PROPERTIES
          Name                #RetailSzamolando
          Label               #Retail számolandó
          Table               #InventTable
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #HetiTop10
        ENUM
        PROPERTIES
          Name                #HetiTop10
          Label               #Heti Top 10
          Table               #InventTable
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #Fokuszhet
        ENUM
        PROPERTIES
          Name                #Fokuszhet
          Label               #Fókuszhét
          Table               #InventTable
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #Leertekelt
        ENUM
        PROPERTIES
          Name                #Leertekelt
          Label               #Leértékelt
          Table               #InventTable
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #RotalasiIdo
        STRING
        PROPERTIES
          Name                #RotalasiIdo
          Label               #Rotálási idő
          Table               #InventTable
        ENDPROPERTIES
        
      FIELD #EUVamtarifaszam
        STRING
        PROPERTIES
          Name                #EUVamtarifaszam
          Label               #EU vámtarifaszám
          Table               #InventTable
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #GyariszamosCikk
        INT
        PROPERTIES
          Name                #GyariszamosCikk
          Label               #Gyáriszámos cikk
          Table               #InventTable
        ENDPROPERTIES
        
      FIELD #TermekmenedzserID
        STRING
        PROPERTIES
          Name                #TermekmenedzserID
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #TermekmenedzserID
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #AxStruktKod
        STRING
        PROPERTIES
          Name                #AxStruktKod
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #AxStruktKod
              #
            ENDARRAY
          StringSize          #16
        ENDPROPERTIES
        
      FIELD #GyartoId
        STRING
        PROPERTIES
          Name                #GyartoId
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #GyartoId
              #
            ENDARRAY
          StringSize          #4
        ENDPROPERTIES
        
      FIELD #Jelleg1Id
        STRING
        PROPERTIES
          Name                #Jelleg1Id
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #Jelleg1Id
              #
            ENDARRAY
          StringSize          #4
        ENDPROPERTIES
        
      FIELD #Jelleg2Id
        STRING
        PROPERTIES
          Name                #Jelleg2Id
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #Jelleg2Id
              #
            ENDARRAY
          StringSize          #4
        ENDPROPERTIES
        
      FIELD #Jelleg3Id
        STRING
        PROPERTIES
          Name                #Jelleg3Id
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #Jelleg3Id
              #
            ENDARRAY
          StringSize          #4
        ENDPROPERTIES
        
      FIELD #Szerviz
        ENUM
        PROPERTIES
          Name                #Szerviz
          Label               #Szerviz cikk
          Table               #InventTable
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #SorozatszamKotelezo
        ENUM
        PROPERTIES
          Name                #SorozatszamKotelezo
          Label               #Kiadásnál sorozatszám kötelező
          Table               #InventTable
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #TervezettKeszletNap
        REAL
        PROPERTIES
          Name                #TervezettKeszletNap
          Label               #Tervezett készletnap
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #Qty
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #Amount1
        REAL
        PROPERTIES
          Name                #Amount1
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #Amount
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #Amount2
        REAL
        PROPERTIES
          Name                #Amount2
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #Amount
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #Amount3
        REAL
        PROPERTIES
          Name                #Amount3
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #Amount
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #Amount4
        REAL
        PROPERTIES
          Name                #Amount4
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #Amount
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #Amount5
        REAL
        PROPERTIES
          Name                #Amount5
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #Amount
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #Amount6
        REAL
        PROPERTIES
          Name                #Amount6
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #Amount
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #updJotallasIdejeID
        STRING
        PROPERTIES
          Name                #updJotallasIdejeID
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #updJotallasIdejeID
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #updJotallasModjaID
        STRING
        PROPERTIES
          Name                #updJotallasModjaID
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #updJotallasModjaID
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #updEltarthatosagID
        STRING
        PROPERTIES
          Name                #updEltarthatosagID
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #updEltarthatosagID
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #Kuszobaralatt
        ENUM
        PROPERTIES
          Name                #Kuszobaralatt
          Label               #Küszöbár alatt 
          HelpText            #Küszöbár alatt eladható
          Table               #InventTable
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #tmpWebQty
        REAL
        PROPERTIES
          Name                #tmpWebQty
          Table               #InventTable
        ENDPROPERTIES
        
      FIELD #FolyamatosFogyas
        INT
        PROPERTIES
          Name                #FolyamatosFogyas
          Label               #Folyamatos fogyás
          Table               #InventTable
        ENDPROPERTIES
        
      FIELD #GyartoiCikkszam
        STRING
        PROPERTIES
          Name                #GyartoiCikkszam
          Label               #Gyártói cikkszám
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #GyartoiCikkszam
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #AtlagosKeszletKor
        INT
        PROPERTIES
          Name                #AtlagosKeszletKor
          Label               #UNI Készletkor
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #InventTable
        ENDPROPERTIES
        
      FIELD #Nyitokeszlet
        INT
        PROPERTIES
          Name                #Nyitokeszlet
          Label               #Nyitókészlet
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #InventTable
        ENDPROPERTIES
        
      FIELD #FolyamatosFogyasReal
        REAL
        PROPERTIES
          Name                #FolyamatosFogyasReal
          Label               #Folyamatos fogyás
          Table               #InventTable
        ENDPROPERTIES
        
      FIELD #AtlagosKeszletkor_Szamitott
        INT
        PROPERTIES
          Name                #AtlagosKeszletkor_Szamitott
          Label               #Készlet életkor
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #InventTable
        ENDPROPERTIES
        
      FIELD #Reproid
        STRING
        PROPERTIES
          Name                #Reproid
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #ReproId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #HRPGarjegy
        ENUM
        PROPERTIES
          Name                #HRPGarjegy
          Label               #HRP garanciajegy
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #NoYesId
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #Akkutype
        STRING
        PROPERTIES
          Name                #Akkutype
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #AkkuType
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #Akkusuly
        REAL
        PROPERTIES
          Name                #Akkusuly
          Label               #Akkumulator súly gramm
          Table               #InventTable
        ENDPROPERTIES
        
      FIELD #BookLine
        ENUM
        PROPERTIES
          Name                #BookLine
          Table               #InventTable
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #VanKeszlet
        ENUM
        PROPERTIES
          Name                #VanKeszlet
          Table               #InventTable
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #SER
        ENUM
        PROPERTIES
          Name                #SER
          Label               #Serbia
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #NoYesId
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CT2
        ENUM
        PROPERTIES
          Name                #CT2
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #NoYesId
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CT3
        ENUM
        PROPERTIES
          Name                #CT3
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #NoYesId
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CT4
        ENUM
        PROPERTIES
          Name                #CT4
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #NoYesId
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CT5
        ENUM
        PROPERTIES
          Name                #CT5
          Table               #InventTable
          ExtendedDataType    
            ARRAY 
              #NoYesId
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #Serbia
        ENUM
        PROPERTIES
          Name                #Serbia
          Label               #Szerbia
          Table               #InventTable
          EnumType            #NoYes
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #ForeignTrade
        PROPERTIES
          Name                #ForeignTrade
          Label               #@SYS27650
        ENDPROPERTIES
        
        GROUPFIELDS
          #Intracode
          #EUVamtarifaszam
          #IntraUnit
          #StatisticsFactor
          #OrigCountryRegionId
          #OrigStateId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Groups
        PROPERTIES
          Name                #Groups
          Label               #@SYS1177
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemGroupId
          #ModelGroupId
          #DimGroupId
          #ReqGroupId
          #CommissionGroupId
          #BatchNumGroupId
          #SerialNumGroupId
          #ItemBuyerGroupId
          #TermekmenedzserID
          #PackagingGroupId
          #PBAInventItemGroupId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemId
          #Strukturakod
          #ServiceType
          #AxStruktKod
          #Szerviz
          #Kuszobaralatt
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Measurement
        PROPERTIES
          Name                #Measurement
          Label               #Méret / Akku
        ENDPROPERTIES
        
        GROUPFIELDS
          #Height
          #Width
          #Depth
          #Akkutype
          #Akkusuly
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #WarehouseManagement
        PROPERTIES
          Name                #WarehouseManagement
          Label               #@SYS50169
        ENDPROPERTIES
        
        GROUPFIELDS
          #WMSPalletTypeId
          #standardPalletQuantity
          #qtyPerLayer
          #sortCode
          #WMSPickingQtyTime
          #DobozRaklap
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #Strukturakod
      PROPERTIES
        Name                #Strukturakod
      ENDPROPERTIES
      
      INDEXFIELDS
        #Strukturakod
      ENDINDEXFIELDS
      
      #AxStruktKod
      PROPERTIES
        Name                #AxStruktKod
      ENDPROPERTIES
      
      INDEXFIELDS
        #AxStruktKod
      ENDINDEXFIELDS
      
    ENDINDICES
    REFERENCES
      REFERENCE #Gyartok
        PROPERTIES
          Name                #Gyartok
          Table               #updGyartok
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #GyartoNev
            RelatedField        #GyartoNev
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Jelleg1
        PROPERTIES
          Name                #Jelleg1
          Table               #updJelleg1
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #JellegNev1
            RelatedField        #JellegNev
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Jelleg2
        PROPERTIES
          Name                #Jelleg2
          Table               #updJelleg2
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #JellegNev2
            RelatedField        #JellegNev
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Jelleg3
        PROPERTIES
          Name                #Jelleg3
          Table               #updJelleg3
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #JellegNev3
            RelatedField        #JellegNev
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
      #InventProdcomSetup
      PROPERTIES
        Table               #InventProdcomSetup
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #RouteOpr
      PROPERTIES
        Table               #RouteOpr
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #ReqItemTable
      PROPERTIES
        Table               #ReqItemTable
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #CustVendExternalItem
      PROPERTIES
        Table               #CustVendExternalItem
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #InventPosting
      PROPERTIES
        Table               #InventPosting
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #DocuRef
      PROPERTIES
        Table               #DocuRef
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #InventItemLocation
      PROPERTIES
        Table               #InventItemLocation
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #ReqTrans
      PROPERTIES
        Table               #ReqTrans
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #BOM
      PROPERTIES
        Table               #BOM
        DeleteAction        #Restricted
      ENDPROPERTIES
      
      #InventJournalTrans
      PROPERTIES
        Table               #InventJournalTrans
        DeleteAction        #Restricted
      ENDPROPERTIES
      
      #ProdTable
      PROPERTIES
        Table               #ProdTable
        DeleteAction        #Restricted
      ENDPROPERTIES
      
      #PurchLine
      PROPERTIES
        Table               #PurchLine
        DeleteAction        #Restricted
      ENDPROPERTIES
      
      #SalesLine
      PROPERTIES
        Table               #SalesLine
        DeleteAction        #Restricted
      ENDPROPERTIES
      
      #ProdBOM
      PROPERTIES
        Table               #ProdBOM
        DeleteAction        #Restricted
      ENDPROPERTIES
      
      #InventTxt
      PROPERTIES
        Table               #InventTxt
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PriceDiscTable
      PROPERTIES
        Table               #PriceDiscTable
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #SuppItemTable
      PROPERTIES
        Table               #SuppItemTable
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #InventTrans
      PROPERTIES
        Table               #InventTrans
        DeleteAction        #Restricted
      ENDPROPERTIES
      
      #InventTableModule
      PROPERTIES
        Table               #InventTableModule
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #CommissionCalc
      PROPERTIES
        Table               #CommissionCalc
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #ConfigTable
      PROPERTIES
        Table               #ConfigTable
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #InventSum
      PROPERTIES
        Table               #InventSum
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #ForecastPurch
      PROPERTIES
        Table               #ForecastPurch
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #ForecastSales
      PROPERTIES
        Table               #ForecastSales
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #UnitConvert
      PROPERTIES
        Table               #UnitConvert
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #RouteVersion
      PROPERTIES
        Table               #RouteVersion
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #BOMVersion
      PROPERTIES
        Table               #BOMVersion
        DeleteAction        #Cascade
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      Version: 3
      SOURCE #batchActive
        #display boolean batchActive()
        #{
        #    InventDimSearch dimSearch = new InventDimSearch();
        #    ;
        #    if (dimSearch.find(this.DimGroupId,fieldnum(InventDim,InventBatchId)))
        #        return dimSearch.dimActive();
        #    return false;
        #}
      ENDSOURCE
      SOURCE #constructCatalogueSyncEntity
        #private CatalogueSyncEntity constructCatalogueSyncEntity()
        #{
        #    CatalogueSyncEntity entity;
        #
        #    NoYes isNew = NoYes::No;
        #    ;
        #
        #    try
        #    {
        #        entity = new CatalogueSyncEntity();
        #        entity.setActionFilter( this.Akcios );
        #        entity.setAxStructCode( this.AxStruktKod );
        #        entity.setBargainFilter( this.Leertekelt );
        #        entity.setCategory1Id( this.Jelleg1Id );
        #        entity.setCategory1Name( this.JellegNev1 );
        #        entity.setCategory2Id( this.Jelleg2Id );
        #        entity.setCategory2Name( this.JellegNev2 );
        #        entity.setCategory3Id( this.Jelleg3Id );
        #        entity.setCategory3Name( this.JellegNev3 );
        #        entity.setEmployeeId( this.TermekmenedzserId );
        #        entity.setFocusWeekFilter( this.Fokuszhet );
        #        entity.setGarantyModeId( this.UpdJotallasModjaId );
        #        entity.setGarantyTimeId( this.UpdJotallasIdejeId );
        #        entity.setItemName( this.ItemName );
        #        entity.setItemState( this.ItemState );
        #        entity.setManufacturerId( this.GyartoId );
        #        entity.setManufacturerName( this.GyartoNev );
        #        isNew = (today() - this.CreatedDate) > 0 ? NoYes::Yes : NoYes::No;
        #        entity.setNewFilter( isNew );
        #        entity.setPartNumber( this.GyartoiCikkszam );
        #        entity.setPrice1( this.Amount1 );
        #        entity.setPrice2( this.Amount2 );
        #        entity.setPrice3( this.Amount3 );
        #        entity.setPrice4( this.Amount4 );
        #        entity.setPrice5( this.Amount5 );
        #        entity.setPrice6( this.Amount6 );
        #        entity.setTop10Filter( this.HetiTop10 );
        #        entity.setItemId( this.ItemId );
        #    }
        #    catch
        #    {
        #        return new CatalogueSyncEntity();
        #    }
        #    return entity;
        #}
      ENDSOURCE
      SOURCE #constructWebSyncInventEntity
        #private WebSyncInventEntity constructWebSyncInventEntity()
        #{
        #    WebSyncInventEntity entity;
        #    ;
        #
        #    try
        #    {
        #        entity = new WebSyncInventEntity();
        #        entity.setActionState( this.Akcios );
        #        entity.setAxStructCode( this.AxStruktKod );
        #        entity.setBargainState( this.Leertekelt );
        #        entity.setBooklineState( this.Bookline );
        #        entity.setCategory1Id( this.Jelleg1Id );
        #        entity.setCategory1Name( this.JellegNev1 );
        #        entity.setCategory2Id( this.Jelleg2Id );
        #        entity.setCategory2Name( this.JellegNev2 );
        #        entity.setCategory3Id( this.Jelleg3Id );
        #        entity.setCategory3Name( this.JellegNev3 );
        #        entity.setEmployeeId( this.TermekmenedzserID );
        #        entity.setFocusWeekState( this.Fokuszhet );
        #        entity.setGarantyModeId( this.UpdJotallasModjaId );
        #        entity.setGarantyTimeId( this.UpdJotallasIdejeId );
        #        entity.setIntraCode( this.Intracode );
        #        entity.setItemName( this.ItemName );
        #        entity.setItemState( this.ItemState );
        #        entity.setManufacturerId( this.GyartoId );
        #        entity.setManufacturerName( this.GyartoNev );
        #        entity.setNewState( NoYes::No );
        #        entity.setPartNumber( this.GyartoiCikkszam );
        #        entity.setPrice1( this.Amount1 );
        #        entity.setPrice2( this.Amount2 );
        #        entity.setPrice3( this.Amount3 );
        #        entity.setPrice4( this.Amount4 );
        #        entity.setPrice5( this.Amount5 );
        #        entity.setPrice6( this.Amount6 );
        #        entity.setTop10State( this.HetiTop10 );
        #        entity.setWeight( this.NetWeight );
        #        entity.setItemId( this.ItemId );
        #        entity.setDataAreaId( curext() );
        #    }
        #    catch
        #    {
        #        return new WebSyncInventEntity();
        #    }
        #    return entity;
        #}
      ENDSOURCE
      SOURCE #copyInvent2SRV
        #void copyInvent2SRV()
        #{
        #    InventTable         iInventTable, sInventTable;
        #    InventTableModule   sInventTableModule, iInventTableModule;
        #    InventItemLocation  sInventItemLocation, srvsInventItemLocation, iInventItemLocation;
        #    Dataareaid          dataareaid;
        #    ;
        #
        #    if  (curExt() != 'SRV')
        #    {
        #        dataareaid = curExt();
        #        ChangeCompany('SRV')
        #        {
        #            ttsBegin;
        #
        #            select * from sInventTable where sInventTable.ItemId == this.ItemId;
        #
        #            if (!sInventTable)
        #            {
        #                iInventTable.clear();
        #                iInventTable = this.data();
        #                iInventTable.DimGroupId = 'SZERVGYSZ';
        #                iInventTable.doInsert();
        #
        #                ChangeCompany(dataareaid)
        #                {
        #                    while select * from sInventTableModule
        #                                  where sInventTableModule.ItemId == this.ItemId
        #                    {
        #                        sInventTableModule.Price = 0;
        #
        #                        ChangeCompany('SRV')
        #                        {
        #                            iInventTableModule.clear();
        #                            iInventTableModule = sInventTableModule.data();
        #                            iInventTableModule.doInsert();
        #                        }
        #                    }
        #
        #                    select * from sInventItemLocation where sInventItemLocation.ItemId == this.ItemId;
        #
        #                    if (sInventItemLocation)
        #                    {
        #                        ChangeCompany('SRV')
        #                        {
        #                            select recid from srvsInventItemLocation where srvsInventItemLocation.ItemId == this.ItemId;
        #
        #                            if (!srvsInventItemLocation)
        #                            {
        #                                iInventItemLocation.clear();
        #                                iInventItemLocation = sInventItemLocation.data();
        #                                iInventItemLocation.doInsert();
        #                            }
        #                        }
        #                    }
        #                }
        #            }
        #            ttsCommit;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #CopyOfgetNettoForgalomErtek
        #qty CopyOfgetNettoForgalomErtek()
        #{
        #    custinvoicetrans    _custinvoicetrans;
        #    ;
        #    select _custinvoicetrans where _custinvoicetrans.ItemId == this.ItemId
        #        && _custinvoicetrans.DlvDate == systemdateget();
        #    return _custinvoicetrans.Qty;
        #}
      ENDSOURCE
      SOURCE #dimActive
        #// SzF 2007.oct.24
        #boolean dimActive(FieldId _fieldId)
        #{
        #    InventDimSearch dimSearch = new InventDimSearch();
        #    ;
        #
        #
        #    if (!_fieldId)
        #        return false;
        #
        #    if (dimSearch.find(this.DimGroupId, _fieldId))
        #        return dimSearch.dimActive();
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #displayGyaricikkszam
        #display str displayGyaricikkszam()
        #{
        #    gyartoicikkszamok   _gyartoicikkszamok, tmpgyartoicikkszamok;
        #    ;
        #
        #    select _gyartoicikkszamok where _gyartoicikkszamok.ItemID == this.ItemId
        #        && _gyartoicikkszamok.SzallitoID == this.PrimaryVendorId
        #        && _gyartoicikkszamok.Aktiv == noyes::Yes;
        #
        #    if (_gyartoicikkszamok)
        #        return _gyartoicikkszamok.GyartoiCikkszam;
        #    else
        #    {
        #        select tmpgyartoicikkszamok where tmpgyartoicikkszamok.ItemID == this.ItemId
        #            && tmpgyartoicikkszamok.Aktiv == noyes::Yes;
        #        if (tmpgyartoicikkszamok)
        #            return tmpgyartoicikkszamok.GyartoiCikkszam;
        #        else
        #        return "";
        #}
        #}
        #
      ENDSOURCE
      SOURCE #Fogyas
        #real Fogyas(date Firstdate, date LastDate, InventLocationId InventLocationId )
        #{
        #CustInvoiceTrans CustInvoiceTrans;
        #InventDim    CustInventDim;
        #UpdFogyasUni  UpdFogyasUni;
        #Real          UniFogyas;
        #
        #IF (Firstdate< 01\01\2008)
        #    {
        #    Select Sum(fogyas) from UpdFogyasUni where
        #        UpdFogyasUni.ItemId == this.ItemId &&
        #        UpdFogyasUni.InventLocationId == InventLocationId;
        #    UniFogyas =  UpdFogyasUni.Fogyas * (str2DateDMY("31122007") - Firstdate)/10  ;
        #    }
        #
        #select Sum(qty) from  CustInvoiceTrans
        #        where
        #            CustInvoiceTrans.invoicedate >= Firstdate &&
        #            CustInvoiceTrans.invoicedate <= LastDate  &&
        #            CustInvoiceTrans.ItemId == this.itemid
        #        Join CustInventDim
        #            Where CustInventDim.inventDimId == CustInvoiceTrans.inventdimId &&
        #                   CustInventDim.InventLocationId == InventLocationId;
        #Return Max(0,CustInvoiceTrans.qty+UniFogyas);
        #}
      ENDSOURCE
      SOURCE #FogyasSzukseglet
        #Real  FogyasSzukseglet(date Firstdate, date LastDate, InventLocationId InventLocationId)
        #{
        #Return this.MaxFogyasNap()*this.Fogyas( Firstdate,  LastDate,  InventLocationId)/(LastDate-Firstdate+5);
        #}
      ENDSOURCE
      SOURCE #get6Date
        #display transdate get6Date()
        #{
        #    PriceDiscTable      PriceDiscTable;
        #
        #    ;
        #
        #    select recid, fromdate from PriceDiscTable order by QuantityAmount desc, Amount asc
        #                         where PriceDiscTable.relation      == PriceType::PriceSales &&
        #                               PriceDiscTable.ItemRelation  == this.ItemId &&
        #                               PriceDiscTable.ItemCode      == TableGroupAll::Table &&
        #                               PriceDiscTable.AccountCode   == TableGroupAll::GroupId &&
        #                             ( PriceDiscTable.FromDate      <= systemdateget() ||
        #                                PriceDiscTable.FromDate     == datenull() ) &&
        #                             ( PriceDiscTable.ToDate        >= systemdateget() ||
        #                                PriceDiscTable.ToDate     == datenull() ) &&
        #                                PriceDiscTable.AccountRelation == "6";
        #
        #
        #    return PriceDiscTable.FromDate;
        #}
      ENDSOURCE
      SOURCE #get6price
        #display real get6price()
        #{
        #    PriceDiscTable      PriceDiscTable;
        #
        #    ;
        #
        #    select recid, Amount from PriceDiscTable order by QuantityAmount desc, Amount asc
        #                         where PriceDiscTable.relation      == PriceType::PriceSales &&
        #                               PriceDiscTable.ItemRelation  == this.ItemId &&
        #                               PriceDiscTable.ItemCode      == TableGroupAll::Table &&
        #                               PriceDiscTable.AccountCode   == TableGroupAll::GroupId &&
        #                             ( PriceDiscTable.FromDate      <= systemdateget() ||
        #                                PriceDiscTable.FromDate     == datenull() ) &&
        #                             ( PriceDiscTable.ToDate        >= systemdateget() ||
        #                                PriceDiscTable.ToDate     == datenull() ) &&
        #                                PriceDiscTable.AccountRelation == "6";
        #
        #
        #    return PriceDiscTable.Amount;
        #}
      ENDSOURCE
      SOURCE #getAtlagosKeszletKor
        #display real getAtlagosKeszletKor()
        #{
        #    inventtrans _inventtrans;
        #    real        ossznap;
        #    container   keszletek, napok;
        #    qty         aktkeszlet, tmpkeszlet;
        #    date        aktdate, tmptransdate, tdate;
        #    int         i, napdb;
        #    inventdim   inventdim;
        #    ;
        #
        #
        #
        #
        #
        #    return inventtable::getAtlagosKeszletKorCfg(this.ItemId, this.StandardConfigId);
        #
        #//-------------------------------------------------------------------------------
        #
        #
        #    aktdate = systemdateget();
        #    aktkeszlet = this.getOsszkeszlet();
        #    tmpkeszlet = 0;
        #    while select _inventtrans
        #        order by DatePhysical desc
        #        where ((_inventtrans.TransType == inventtranstype::Purch)
        #        || (_inventtrans.TransType == inventtranstype::BOMLine)
        #        || (_inventtrans.TransType == inventtranstype::BOMMain)
        #        || (_inventtrans.TransType == inventtranstype::InventCounting))
        #//        || (_inventtrans.TransType == inventtranstype::InventTransaction))
        #        && _inventtrans.ItemId == this.ItemId
        #        && _inventtrans.Qty > 0
        #//        && _inventtrans.DatePhysical > 31\12\2007
        #        join InventDim
        #            where InventDim.inventDimId==_inventtrans.inventDimId
        #                && InventDim.configId==this.StandardConfigId
        #
        #    {
        #      //  info("DatePhysical: "+date2strusr(_inventtrans.DatePhysical)+" qty: "+num2str(_inventtrans.Qty,10,0,1,2)+" TransID: "+_inventtrans.InventTransId);
        #        tmpkeszlet += _inventtrans.Qty;
        #        if (tmpkeszlet <= aktkeszlet)
        #        {
        #            if (_inventtrans.DatePhysical)
        #            {
        #                    //info("DatePhysical: "+date2strusr(_inventtrans.DatePhysical)+" qty: "+num2str(_inventtrans.Qty,10,0,1,2)+" TransID: "+_inventtrans.InventTransId);
        #                    keszletek = conins(keszletek,conlen(keszletek)+1,_inventtrans.Qty);
        #                    napok = conins(napok,conlen(napok)+1,aktdate-_inventtrans.DatePhysical);
        #            }
        #        }
        #        else
        #        {
        #            if (_inventtrans.DatePhysical)
        #            {
        #                    //info("DatePhysical: "+date2strusr(_inventtrans.DatePhysical)+" qty: "+num2str(_inventtrans.Qty,10,0,1,2)+" TransID: "+_inventtrans.InventTransId);
        #                    keszletek = conins(keszletek,conlen(keszletek)+1,aktkeszlet - (tmpkeszlet - _inventtrans.Qty));
        #                    napok = conins(napok,conlen(napok)+1,aktdate-_inventtrans.DatePhysical);
        #            }
        #            break;
        #        }
        #    }
        #
        #
        #    tmpkeszlet = 0;
        #    while select _inventtrans
        #        order by DatePhysical
        #        where (_inventtrans.TransType == inventtranstype::Sales
        #        || _inventtrans.TransType == inventtranstype::BOMLine
        #        || _inventtrans.TransType == inventtranstype::BOMMain
        #        || _inventtrans.TransType == inventtranstype::InventCounting
        #        || _inventtrans.TransType == inventtranstype::InventTransaction)
        #        && _inventtrans.ItemId == this.ItemId
        #        && _inventtrans.DatePhysical > 01\01\2008
        #        && _inventtrans.Qty < 0
        #        join InventDim
        #            where InventDim.inventDimId==_inventtrans.inventDimId
        #                && InventDim.configId==this.StandardConfigId
        #
        #    {
        #        tmpkeszlet += _inventtrans.Qty;
        #    }
        #
        #    if (this.Nyitokeszlet > abs(tmpkeszlet))
        #    {
        #
        #
        #        tdate = 31\12\2007;
        #        keszletek = conins(keszletek,conlen(keszletek)+1,this.Nyitokeszlet - abs(tmpkeszlet));
        #//    if (this.AtlagosKeszletKor)
        #        napok = conins(napok,conlen(napok)+1,aktdate - (tdate - this.AtlagosKeszletKor));
        #//    else
        #//        napok = conins(napok,conlen(napok)+1,aktdate - 31\12\2007);
        #
        #    }
        #
        #    ossznap = 0;
        #    if (aktkeszlet > 0) {
        #        for(i=1;i<=conlen(keszletek);i++) {
        #            ossznap += conpeek(keszletek,i) * conpeek(napok,i);
        #        }
        #
        #        ossznap = ossznap / aktkeszlet;
        #    }
        #
        #    if (ossznap)
        #        return ossznap;
        #    else
        #        return 0;
        #}
      ENDSOURCE
      SOURCE #getAtlagosKeszletKor_20080218
        #display real getAtlagosKeszletKor_20080218()
        #{
        #    inventtrans _inventtrans;
        #    real        ossznap;
        #    container   keszletek, napok;
        #    qty         aktkeszlet, tmpkeszlet;
        #    date        aktdate, tmptransdate, tdate;
        #    int         i, napdb;
        #    ;
        #    aktdate = systemdateget();
        #    aktkeszlet = this.getOsszkeszlet() + this.getOtherCfgOsszkeszlet();
        #    tmpkeszlet = 0;
        #    while select _inventtrans
        #        order by DatePhysical desc
        #        where ((_inventtrans.TransType == inventtranstype::Purch)
        #        || (_inventtrans.TransType == inventtranstype::BOMLine)
        #        || (_inventtrans.TransType == inventtranstype::BOMMain)
        #        || (_inventtrans.TransType == inventtranstype::InventCounting)
        #        || (_inventtrans.TransType == inventtranstype::InventTransaction))
        #        && _inventtrans.ItemId == this.ItemId
        #        && _inventtrans.Qty > 0
        #        && _inventtrans.DatePhysical > 31\12\2007
        #    {
        #      //  info("DatePhysical: "+date2strusr(_inventtrans.DatePhysical)+" qty: "+num2str(_inventtrans.Qty,10,0,1,2)+" TransID: "+_inventtrans.InventTransId);
        #        tmpkeszlet += _inventtrans.Qty;
        #        if (tmpkeszlet <= aktkeszlet)
        #        {
        #            if (_inventtrans.DatePhysical)
        #            {
        #                    //info("DatePhysical: "+date2strusr(_inventtrans.DatePhysical)+" qty: "+num2str(_inventtrans.Qty,10,0,1,2)+" TransID: "+_inventtrans.InventTransId);
        #                    keszletek = conins(keszletek,conlen(keszletek)+1,_inventtrans.Qty);
        #                    napok = conins(napok,conlen(napok)+1,aktdate-_inventtrans.DatePhysical);
        #            }
        #        }
        #        else
        #        {
        #            if (_inventtrans.DatePhysical)
        #            {
        #                    //info("DatePhysical: "+date2strusr(_inventtrans.DatePhysical)+" qty: "+num2str(_inventtrans.Qty,10,0,1,2)+" TransID: "+_inventtrans.InventTransId);
        #                    keszletek = conins(keszletek,conlen(keszletek)+1,aktkeszlet - (tmpkeszlet - _inventtrans.Qty));
        #                    napok = conins(napok,conlen(napok)+1,aktdate-_inventtrans.DatePhysical);
        #            }
        #            break;
        #        }
        #    }
        #
        #
        #    tmpkeszlet = 0;
        #    while select _inventtrans
        #        order by DatePhysical
        #        where (_inventtrans.TransType == inventtranstype::Sales
        #        || _inventtrans.TransType == inventtranstype::BOMLine
        #        || _inventtrans.TransType == inventtranstype::BOMMain
        #        || _inventtrans.TransType == inventtranstype::InventCounting
        #        || _inventtrans.TransType == inventtranstype::InventTransaction)
        #        && _inventtrans.ItemId == this.ItemId
        #        && _inventtrans.DatePhysical > 01\01\2008
        #        && _inventtrans.Qty < 0
        #    {
        #        tmpkeszlet += _inventtrans.Qty;
        #    }
        #
        #    if (this.Nyitokeszlet > abs(tmpkeszlet))
        #    {
        #
        #
        #        tdate = 31\12\2007;
        #        keszletek = conins(keszletek,conlen(keszletek)+1,this.Nyitokeszlet - abs(tmpkeszlet));
        #//    if (this.AtlagosKeszletKor)
        #        napok = conins(napok,conlen(napok)+1,aktdate - (tdate - this.AtlagosKeszletKor));
        #//    else
        #//        napok = conins(napok,conlen(napok)+1,aktdate - 31\12\2007);
        #
        #    }
        #
        #    ossznap = 0;
        #    if (aktkeszlet > 0) {
        #        for(i=1;i<=conlen(keszletek);i++) {
        #            ossznap += conpeek(keszletek,i) * conpeek(napok,i);
        #        }
        #
        #        ossznap = ossznap / aktkeszlet;
        #    }
        #
        #    if (ossznap)
        #        return ossznap;
        #    else
        #        return 0;
        #}
      ENDSOURCE
      SOURCE #getDefaultGroupPrice
        #display real getDefaultGroupPrice()
        #{
        #    PriceDiscTable      PriceDiscTable;
        #    InventParameters    InventParameters;
        #    ;
        #
        #
        #    select DefaultPriceGroupId from InventParameters;
        #
        #    select recid, Amount from PriceDiscTable order by QuantityAmount desc, Amount asc
        #                         where PriceDiscTable.relation      == PriceType::PriceSales &&
        #                               PriceDiscTable.ItemRelation  == this.ItemId &&
        #                               PriceDiscTable.ItemCode      == TableGroupAll::Table &&
        #                               PriceDiscTable.AccountCode   == TableGroupAll::GroupId &&
        #                             ( PriceDiscTable.FromDate      <= systemdateget() ||
        #                                PriceDiscTable.FromDate     == datenull() ) &&
        #                             ( PriceDiscTable.ToDate        >= systemdateget() ||
        #                                PriceDiscTable.ToDate     == datenull() ) &&
        #                                PriceDiscTable.AccountRelation == InventParameters.DefaultPriceGroupId;
        #
        #
        #    return PriceDiscTable.Amount;
        #}
      ENDSOURCE
      SOURCE #getElofoglaltkeszlet
        #display real getElofoglaltkeszlet()
        #{
        #    InventSum   InventSum;
        #    InventDim   InventDim;
        #    InventItemUnitConvert       inventItemUnitConvert;
        #    UnitID                      unitIdInvent;
        #    UnitID                      unitIdSecondary;
        #
        #    ;
        #    inventItemUnitConvert = InventItemUnitConvert::newNoParameters();
        #    select sum(ReservOrdered) from InventSum
        #                              join InventDim
        #                              where InventDim.inventDimId==InventSum.inventDimId &&
        #                                    InventSum.Closed==NoYes::No &&  InventSum.ItemId==this.ItemId
        #                                     &&
        #                                    InventDim.configId==this.StandardConfigId;
        #//    unitidinvent = this.inventTableModuleInvent().UnitId;
        #//    unitIdSecondary = this.inventUnitId();
        #
        #    unitidinvent = "";
        #    unitIdSecondary = "";
        #
        #    return inventItemUnitConvert.qty(inventSum.ReservOrdered, unitIdInvent, unitIdSecondary, this.ItemId);
        #}
      ENDSOURCE
      SOURCE #getFedezetlenRendeles
        #display real getFedezetlenRendeles()
        #{
        #    inventtrans     _inventtrans;
        #    inventdim       _inventdim;
        #    real            vr, br;
        #
        #    ;
        #
        #    select forceliterals sum(qty) from _inventtrans
        #        where _inventtrans.ItemId == this.ItemId &&
        #            _inventtrans.TransType == inventtranstype::Sales &&
        #            _inventtrans.StatusIssue == statusissue::OnOrder
        #            join _InventDim
        #                 where _InventDim.inventDimId==_inventtrans.inventDimId &&
        #                       _InventDim.configId==this.StandardConfigId;
        #
        #
        #
        #    vr = abs(_inventtrans.Qty);
        #
        #    return vr;
        #}
      ENDSOURCE
      SOURCE #getFedezetlenRendelesFast
        #display real getFedezetlenRendelesFast()
        #{
        #    inventtrans     _inventtrans;
        #    inventdim       _inventdim;
        #    real            vr, br;
        #
        #    ;
        #
        #Select
        #       _InventDim
        #                 where _InventDim.configId==this.StandardConfigId
        #    Join  sum(qty) from _inventtrans
        #        where _inventtrans.ItemId == this.ItemId &&
        #            _inventtrans.TransType == inventtranstype::Sales &&
        #            _inventtrans.StatusIssue == statusissue::OnOrder &&
        #            _InventDim.inventDimId==_inventtrans.inventDimId ;
        #
        #
        #
        #    vr = abs(_inventtrans.Qty);
        #
        #    return vr;
        #}
      ENDSOURCE
      SOURCE #getFoglaltkeszlet
        #display real getFoglaltkeszlet()
        #{
        #    InventSum   InventSum;
        #    InventDim   InventDim;
        #    InventItemUnitConvert       inventItemUnitConvert;
        #    UnitID                      unitIdInvent;
        #    UnitID                      unitIdSecondary;
        #
        #    ;
        #    inventItemUnitConvert = InventItemUnitConvert::newNoParameters();
        #    select sum(ReservPhysical) from InventSum
        #                              join InventDim
        #                              where InventDim.inventDimId==InventSum.inventDimId &&
        #                                    InventSum.Closed==NoYes::No &&  InventSum.ItemId==this.ItemId
        #                                     &&
        #                                    InventDim.configId==this.StandardConfigId;
        #//    unitidinvent = this.inventTableModuleInvent().UnitId;
        #//    unitIdSecondary = this.inventUnitId();
        #
        #    unitidinvent = "";
        #    unitIdSecondary = "";
        #
        #    return inventItemUnitConvert.qty(inventSum.ReservPhysical, unitIdInvent, unitIdSecondary, this.ItemId);
        #}
      ENDSOURCE
      SOURCE #getHasznaltkeszlet
        #display real getHasznaltkeszlet()
        #{
        #    InventSum   InventSum;
        #    InventDim   InventDim;
        #    InventItemUnitConvert       inventItemUnitConvert;
        #    UnitID                      unitIdInvent;
        #    UnitID                      unitIdSecondary;
        #    InventLocation InventLocation; //IT 20080113
        #
        #    ;
        #    inventItemUnitConvert = InventItemUnitConvert::newNoParameters();
        #    select sum(PhysicalInvent) from InventSum
        #                              join InventDim
        #                              where InventDim.inventDimId==InventSum.inventDimId &&
        #                                    InventSum.Closed==NoYes::No &&  InventSum.ItemId==this.ItemId &&
        #                                    InventDim.configId like "xx*" ;
        #
        #//    unitidinvent = this.inventTableModuleInvent().UnitId;
        #//    unitIdSecondary = this.inventUnitId();
        #
        #    unitidinvent = "";
        #    unitIdSecondary = "";
        #
        #    return inventItemUnitConvert.qty(inventSum.physicalInvent, unitIdInvent, unitIdSecondary, this.ItemId);
        #}
      ENDSOURCE
      SOURCE #getMaxAvailBOM
        #Real getMaxAvailBOM(date _date)
        #{
        #BOMVersion BOMVersion;
        #BOM BOM;
        #IF (this.ItemType != ItemType::BOM)
        #    Return 0;
        #BomVersion = BomVersion::findActive(this.ItemId,_date,1);
        #IF (!BomVersion)
        #    Return 0;
        #Return Bomversion.GetMaxAvailBOMVersion(_date);
        #
        #}
      ENDSOURCE
      SOURCE #getNettoForgalomDb
        #display qty getNettoForgalomDb()
        #{
        #    custinvoicetrans    _custinvoicetrans;
        #     inventdim   inventdim;
        #    ;
        #    select sum(Qty) from _custinvoicetrans where _custinvoicetrans.ItemId == this.ItemId
        #        && _custinvoicetrans.DlvDate == systemdateget()
        #                        join InventDim
        #                              where InventDim.inventDimId==_custinvoicetrans.inventDimId &&
        #                                    InventDim.configId==this.StandardConfigId;
        #    return _custinvoicetrans.Qty;
        #}
      ENDSOURCE
      SOURCE #getNettoForgalomErtek
        #display LineAmount getNettoForgalomErtek()
        #{
        #    custinvoicetrans    _custinvoicetrans;
        #     inventdim   inventdim;
        #    ;
        #    select sum(LineAmount) from _custinvoicetrans where _custinvoicetrans.ItemId == this.ItemId
        #        && _custinvoicetrans.DlvDate == systemdateget()
        #                        join InventDim
        #                              where InventDim.inventDimId==_custinvoicetrans.inventDimId &&
        #                                    InventDim.configId==this.StandardConfigId;
        #    return _custinvoicetrans.LineAmount;
        #}
      ENDSOURCE
      SOURCE #getNyitottBeszerzesRendelesDb
        #display qty getNyitottBeszerzesRendelesDb()
        #{
        #    purchline    _purchline;
        #    inventdim   inventdim;
        #    ;
        #    select sum(QtyOrdered) from _purchline where _purchline.ItemId == this.ItemId
        #        && _purchline.PurchStatus == PurchStatus::Backorder
        #        && _purchline.PurchQty > 0
        #                join InventDim
        #                              where InventDim.inventDimId==_purchline.inventDimId &&
        #                                    InventDim.configId==this.StandardConfigId;
        #
        #    return _purchline.QtyOrdered;
        #}
      ENDSOURCE
      SOURCE #getNyitottBeszerzesRendelesErtek
        #display LineAmount getNyitottBeszerzesRendelesErtek()
        #{
        #    purchline    _purchline;
        #    inventdim   inventdim;
        #
        #    ;
        #    select sum(lineamount) from _purchline where _purchline.ItemId == this.ItemId
        #        && _purchline.PurchStatus == PurchStatus::Backorder
        #          join InventDim
        #                              where InventDim.inventDimId==_purchline.inventDimId &&
        #                                    InventDim.configId==this.StandardConfigId;
        #
        #    return _purchline.lineamount;
        #}
      ENDSOURCE
      SOURCE #getNyitottVevorendelesDb
        #display qty getNyitottVevorendelesDb()
        #{
        #    salesline    _salesline;
        #    inventdim    inventdim;
        #    InventLocation InventLocation;
        #    ;
        #    select sum(RemainSalesPhysical) from _salesline where _salesline.ItemId == this.ItemId
        #        && _salesline.SalesStatus == salesstatus::Backorder
        #        && _salesline.RemainSalesPhysical > 0
        #                join InventDim
        #                              where InventDim.inventDimId==_salesline.inventDimId &&
        #                                    InventDim.configId==this.StandardConfigId
        #
        #                                    Join UseOnSalesTable From  InventLocation where
        #                                    InventLocation.InventLocationId == InventDim.InventLocationId &&
        #                                    InventLocation.UseOnSalesTable;
        #
        #
        #    return _salesline.RemainSalesPhysical;
        #}
      ENDSOURCE
      SOURCE #getNyitottVevorendelesErtek
        #display LineAmount getNyitottVevorendelesErtek()
        #{
        #    salesline    _salesline;
        #      inventdim    inventdim;
        #
        #    ;
        #    select sum(LineAmount) from _salesline where _salesline.ItemId == this.ItemId
        #        && _salesline.SalesStatus == salesstatus::Backorder
        #        join InventDim
        #                              where InventDim.inventDimId==_salesline.inventDimId &&
        #                                    InventDim.configId==this.StandardConfigId;
        #
        #    return _salesline.LineAmount;
        #}
      ENDSOURCE
      SOURCE #getOsszkeszlet
        #display real getOsszkeszlet()
        #{
        #    return this.getRaktarkeszlet() + this.getRaktarkozikeszlet();
        #}
      ENDSOURCE
      SOURCE #getOsszkeszlet_2
        #display real getOsszkeszlet_2()
        #{
        #    return this.getRaktarkeszlet_2() + this.getRaktarkozikeszlet();
        #}
      ENDSOURCE
      SOURCE #getOtherCfgOsszkeszlet
        #display real getOtherCfgOsszkeszlet()
        #{
        #    return this.getOtherCfgRaktarkeszlet() + this.getOtherCfgRaktarkozikeszlet();
        #}
      ENDSOURCE
      SOURCE #getOtherCfgRaktarkeszlet
        #display real getOtherCfgRaktarkeszlet()
        #{
        #    InventSum   InventSum;
        #    InventDim   InventDim;
        #    InventItemUnitConvert       inventItemUnitConvert;
        #    UnitID                      unitIdInvent;
        #    UnitID                      unitIdSecondary;
        #    InventLocation InventLocation; //IT 20080113
        #
        #    ;
        #    inventItemUnitConvert = InventItemUnitConvert::newNoParameters();
        #    select sum(PhysicalInvent) from InventSum
        #                              join InventDim
        #                              where InventDim.inventDimId==InventSum.inventDimId &&
        #                                    InventSum.Closed==NoYes::No &&  InventSum.ItemId==this.ItemId &&
        #                                    InventDim.configId!=this.StandardConfigId
        #                              Join UseOnSalesTable From  InventLocation where
        #                                    InventLocation.InventLocationId == InventDim.InventLocationId &&
        #                                    InventLocation.UseOnSalesTable ;
        #
        #//    unitidinvent = this.inventTableModuleInvent().UnitId;
        #//    unitIdSecondary = this.inventUnitId();
        #
        #    unitidinvent = "";
        #    unitIdSecondary = "";
        #
        #    return inventItemUnitConvert.qty(inventSum.physicalInvent, unitIdInvent, unitIdSecondary, this.ItemId);
        #}
      ENDSOURCE
      SOURCE #getOtherCfgRaktarkozikeszlet
        #display real getOtherCfgRaktarkozikeszlet()
        #{
        #    InventSum                   InventSum;
        #    InventDim                   InventDim;
        #    InventItemUnitConvert       inventItemUnitConvert;
        #    UnitID                      unitIdInvent;
        #    UnitID                      unitIdSecondary;
        #    InventLocation              InventLocation;
        #    configtable                 _configtable;
        #    real                        rkk;
        #
        #    ;
        #
        #    rkk = 0;
        #
        #    while select _configtable where _configtable.ItemId == this.ItemId && _configtable.ConfigId != this.StandardConfigId
        #    {
        #        rkk += inventtrans::utonvanCfg(this.ItemId,inventparameters::find().InventLocationBelso,_configtable.ConfigId) + inventtrans::utonvanCfg(this.ItemId,inventparameters::find().InventLocationKulso,_configtable.ConfigId);
        #    }
        #
        #    return rkk;
        #/*
        #    inventItemUnitConvert = InventItemUnitConvert::newNoParameters();
        #    select sum(Picked) from InventSum
        #                              join InventDim
        #                              where InventDim.inventDimId==InventSum.inventDimId &&
        #                                    InventSum.Closed==NoYes::No &&  InventSum.ItemId==this.ItemId &&
        #                                    InventDim.configId!=this.StandardConfigId;
        #                             // Join UseOnSalesTable From  InventLocation where
        #                             //       InventLocation.InventLocationId == InventDim.InventLocationId &&
        #                              //      InventLocation.UseOnSalesTable ;
        #
        #//    unitidinvent = this.inventTableModuleInvent().UnitId;
        #//    unitIdSecondary = this.inventUnitId();
        #
        #    unitidinvent = "";
        #    unitIdSecondary = "";
        #
        #    return inventItemUnitConvert.qty(inventSum.Picked, unitIdInvent, unitIdSecondary, this.ItemId);
        #*/
        #}
      ENDSOURCE
      SOURCE #getRaktarkeszlet
        #display real getRaktarkeszlet()
        #{
        #    InventSum   InventSum;
        #    InventDim   InventDim;
        #    InventItemUnitConvert       inventItemUnitConvert;
        #    UnitID                      unitIdInvent;
        #    UnitID                      unitIdSecondary;
        #    InventLocation InventLocation; //IT 20080113
        #
        #    ;
        #    inventItemUnitConvert = InventItemUnitConvert::newNoParameters();
        #    select sum(PhysicalInvent) from InventSum
        #                              join InventDim
        #                              where InventDim.inventDimId==InventSum.inventDimId &&
        #                                    InventSum.Closed==NoYes::No &&  InventSum.ItemId==this.ItemId &&
        #                                    InventDim.configId==this.StandardConfigId
        #                              Join UseOnSalesTable From  InventLocation where
        #                                    InventLocation.InventLocationId == InventDim.InventLocationId &&
        #                                    InventLocation.UseOnSalesTable ;
        #
        #//    unitidinvent = this.inventTableModuleInvent().UnitId;
        #//    unitIdSecondary = this.inventUnitId();
        #
        #    unitidinvent = "";
        #    unitIdSecondary = "";
        #
        #    return inventItemUnitConvert.qty(inventSum.physicalInvent, unitIdInvent, unitIdSecondary, this.ItemId);
        #}
      ENDSOURCE
      SOURCE #getRaktarkeszlet_2
        #display real getRaktarkeszlet_2()
        #{
        #    InventSum   InventSum;
        #    InventDim   InventDim;
        #    InventItemUnitConvert       inventItemUnitConvert;
        #    UnitID                      unitIdInvent;
        #    UnitID                      unitIdSecondary;
        #    InventLocation InventLocation; //IT 20080113
        #
        #    ;
        #    inventItemUnitConvert = InventItemUnitConvert::newNoParameters();
        #    select sum(PhysicalInvent) from InventSum
        #                              join InventDim
        #                              where InventDim.inventDimId==InventSum.inventDimId &&
        #                                    InventSum.Closed==NoYes::No &&  InventSum.ItemId==this.ItemId &&
        #                                    InventDim.configId==this.StandardConfigId
        #/*                              Join UseOnSalesTable From  InventLocation where
        #                                    InventLocation.InventLocationId == InventDim.InventLocationId &&
        #                                    InventLocation.UseOnSalesTable */;
        #
        #//    unitidinvent = this.inventTableModuleInvent().UnitId;
        #//    unitIdSecondary = this.inventUnitId();
        #
        #    unitidinvent = "";
        #    unitIdSecondary = "";
        #
        #    return inventItemUnitConvert.qty(inventSum.physicalInvent, unitIdInvent, unitIdSecondary, this.ItemId);
        #}
      ENDSOURCE
      SOURCE #getRaktarkozikeszlet
        #display real getRaktarkozikeszlet()
        #{
        #    InventSum                   InventSum;
        #    InventDim                   InventDim;
        #    InventItemUnitConvert       inventItemUnitConvert;
        #    UnitID                      unitIdInvent;
        #    UnitID                      unitIdSecondary;
        #    InventLocation              InventLocation;
        #
        #    ;
        #
        #    return inventtrans::utonvanCfg(this.ItemId,inventparameters::find().InventLocationBelso,this.StandardConfigId)+inventtrans::utonvanCfg(this.ItemId,inventparameters::find().InventLocationKulso,this.StandardConfigId);
        #/*
        #    inventItemUnitConvert = InventItemUnitConvert::newNoParameters();
        #//    select sum(Transferorder) from InventSum
        #    select sum(Picked) from InventSum
        #                              join InventDim
        #                              where InventDim.inventDimId==InventSum.inventDimId &&
        #                                    InventSum.Closed==NoYes::No &&  InventSum.ItemId==this.ItemId &&
        #                                    InventDim.configId==this.StandardConfigId
        #                                    && inventsum.Transferorder > 0;
        #                             // Join UseOnSalesTable From  InventLocation where
        #                             //       InventLocation.InventLocationId == InventDim.InventLocationId &&
        #                              //      InventLocation.UseOnSalesTable ;
        #
        #//    unitidinvent = this.inventTableModuleInvent().UnitId;
        #//    unitIdSecondary = this.inventUnitId();
        #
        #    unitidinvent = "";
        #    unitIdSecondary = "";
        #
        #//    return inventItemUnitConvert.qty(inventSum.Transferorder, unitIdInvent, unitIdSecondary, this.ItemId);
        #    return inventItemUnitConvert.qty(inventSum.Picked, unitIdInvent, unitIdSecondary, this.ItemId);
        #*/
        #}
      ENDSOURCE
      SOURCE #getSumAvailPhysical
        #display real getSumAvailPhysical()
        #{
        #    InventSum   InventSum;
        #    InventDim   InventDim;
        #    InventLocation InventLocation; //IT 20080113
        #    ;
        #    select sum(AvailPhysical) from InventSum
        #                              join InventDim
        #                              where InventDim.inventDimId==InventSum.inventDimId &&
        #                                    InventSum.Closed==NoYes::No &&  InventSum.ItemId==this.ItemId &&
        #                                    InventDim.configId==this.StandardConfigId
        #                              Join UseOnSalesTable From  InventLocation where
        #                                    InventLocation.InventLocationId == InventDim.InventLocationId &&
        #                                    InventLocation.UseOnSalesTable ;
        #
        #    return InventSum.AvailPhysical;
        #}
      ENDSOURCE
      SOURCE #getSumReservPhysical
        #display real getSumReservPhysical()
        #{
        #    InventSum   InventSum;
        #    InventDim   InventDim;
        #    InventLocation InventLocation; //IT 20080113
        #
        #    ;
        #    select sum(ReservPhysical) from InventSum
        #                              join InventDim
        #                              where InventDim.inventDimId==InventSum.inventDimId &&
        #                                    InventSum.Closed==NoYes::No &&  InventSum.ItemId==this.ItemId &&
        #                                    InventDim.configId==this.StandardConfigID
        #                              Join UseOnSalesTable From  InventLocation where
        #                                    InventLocation.InventLocationId == InventDim.InventLocationId &&
        #                                    InventLocation.UseOnSalesTable ;
        #
        #    return InventSum.ReservPhysical;
        #}
      ENDSOURCE
      SOURCE #getSzallitoikeszlet
        #display real getSzallitoikeszlet()
        #{
        #    InventSum   InventSum;
        #    InventDim   InventDim;
        #    InventItemUnitConvert       inventItemUnitConvert;
        #    UnitID                      unitIdInvent;
        #    UnitID                      unitIdSecondary;
        #    InventTrans                 InventTrans;
        #
        #    ;
        #    inventItemUnitConvert = InventItemUnitConvert::newNoParameters();
        #//IT 20080113
        #/*    select sum(ReservOrdered) from InventSum
        #                              join InventDim
        #                              where InventDim.inventDimId==InventSum.inventDimId &&
        #                                    InventSum.Closed==NoYes::No &&  InventSum.ItemId==this.ItemId &&
        #                                    InventDim.configId==this.StandardConfigId;
        #*/
        #    Select sum(qty) From  InventTrans where
        #           InventTrans.ItemId == this.ItemId &&
        #           InventTrans.TransType     == InventTransType::Purch &&
        #           InventTrans.StatusReceipt == StatusReceipt::Ordered; //IT 20080113
        #
        #//    unitidinvent = this.inventTableModuleInvent().UnitId;
        #//    unitIdSecondary = this.inventUnitId();
        #
        #    unitidinvent = "";
        #    unitIdSecondary = "";
        #
        #    return inventItemUnitConvert.qty(InventTrans.Qty, unitIdInvent, unitIdSecondary, this.ItemId);
        #}
      ENDSOURCE
      SOURCE #getVisszavettMennyiseg
        #display real getVisszavettMennyiseg()
        #{
        #    updvisszaruline     _updvisszaruline;
        #    real                rqty = 0;
        #    ;
        #
        #    while select qty from _updvisszaruline where _updvisszaruline.ItemId == this.ItemId
        #    {
        #        if ((_updvisszaruline.UpdVisszaruTable().Status != visszarustatus::Lezart) && (_updvisszaruline.UpdVisszaruTable().Status != visszarustatus::Opened))
        #            rqty += _updvisszaruline.Qty;
        #    }
        #    return rqty;
        #}
      ENDSOURCE
      SOURCE #insert
        #void insert()
        #{
        #    #OCCRetryCount
        #    ;
        #    try
        #    {
        #        ttsbegin;
        #
        #        this.insertBOMTable();
        #        this.insertRouteTable();
        #        this.setNameAlias();
        #
        #        super();
        #
        #        // Added on 2008.05.19 at 14:17:50 by Doszpod Roland
        #        this.copyInvent2SRV();
        #
        #        // Added on 2007.09.22 at 11:41:39 by Doszpod Roland
        #        if (this.configActive())
        #        {
        #            this.StandardConfigId = ConfigTable::insertDefConf(this.ItemId);
        #
        #            // Insert by Sonic - 2009.02.27. - [2550] - Begin //
        #            If (curExt() == 'SRV' && this.Szerviz)
        #            {
        #              ConfigTable::insertGarConf(this.ItemId);
        #            }
        #            // Insert by Sonic - 2009.02.27. - [2550] - End   //
        #        }
        #
        #
        #        // Added on 2007.09.15 at 17:38:51 by doszp
        #        this.setIDs();
        #
        #        if (this.SalesModel != SalesPriceModel::None)
        #        {
        #            InventTable::updateAutoSalesPrice(this.ItemId);
        #        }
        #
        #        ttscommit;
        #    }
        #    catch (Exception::Deadlock)
        #    {
        #        retry;
        #    }
        #    catch (Exception::UpdateConflict)
        #    {
        #        if (appl.ttsLevel() == 0)
        #        {
        #            if (xSession::currentRetryCount() >= #RetryNum)
        #            {
        #                throw Exception::UpdateConflictNotRecovered;
        #            }
        #            else
        #            {
        #                retry;
        #            }
        #        }
        #        else
        #        {
        #            throw Exception::UpdateConflict;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #Kedvezmeny
        #boolean Kedvezmeny()
        #{
        #    boolean ret = false;
        #
        #    if (this.ItemType == ItemType::Service)
        #        ret = true;
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #LastPurchDate
        #Display Date LastPurchDate()
        #{
        #    inventtrans _inventtrans;
        #     ;
        #
        #     select firstonly _inventtrans order by DatePhysical desc where _inventtrans.TransType == inventtranstype::Purch
        #        && _inventtrans.DatePhysical != datenull()
        #        && _inventtrans.ItemId == this.ItemId;
        #
        #    if (_inventtrans)
        #        return _inventtrans.DatePhysical;
        #    else
        #        Return datenull();
        #}
      ENDSOURCE
      SOURCE #MaxFogyasNap
        #Int MaxFogyasNap()
        #{
        #UpdMinimalSuly UpdMinimalSuly;
        #Select FirstOnly UpdMinimalSuly Order By suly asc
        #    Where UpdMinimalSuly.Suly >= this.Netweight;
        #Return Max(1,UpdMinimalSuly.Nap);
        #
        #}
      ENDSOURCE
      SOURCE #NapiFogyas
        #Real  NapiFogyas(date Firstdate, date LastDate, InventLocationId InventLocationId)
        #{
        #Return this.Fogyas( Firstdate,  LastDate,  InventLocationId)/(LastDate-Firstdate+1);
        #}
      ENDSOURCE
      SOURCE #NextPurchDate
        #Display Date NextPurchDate()
        #{
        #    purchline   _purchline;
        #
        #    ;
        #
        #    select firstonly _purchline order by confirmeddlv desc where _purchline.PurchStatus == purchstatus::Backorder
        #        && _purchline.ConfirmedDlv != datenull()
        #        && _purchline.ItemId == this.ItemId;
        #
        #    if (_purchline)
        #        return _purchline.ConfirmedDlv;
        #    else
        #        Return datenull();
        #}
      ENDSOURCE
      SOURCE #onHandQtyBelso
        #display InventQty onHandQtyBelso()
        #{
        #    InventDim       InventDim;
        #    InventDimParm   InventDimparm;
        #    InventSum       InventSum;
        #    InventLocation  InventLocation;
        #    Real            Qty;
        #;
        #While Select InventLocationId From InventLocation
        #    Where InventLocation.UseOnSalesTable
        #        {
        #            if (InventLocation.InventLocationId == Inventparameters::find().InventLocationBelso)
        #            {
        #                InventDim.InventLocationId = Inventparameters::find().InventLocationBelso;
        #                InventDimParm.InventLocationIdFlag = True;
        #                InventSum = InventSum::findSum(this.ItemId,InventDim,InventDimParm);
        #                Qty += Max(0,InventSum.AvailPhysical);
        #            }
        #        }
        #Return qty;
        #}
        #
        #
      ENDSOURCE
      SOURCE #onHandQtyInvent
        #InventQty onHandQtyInvent(InventLocationId InventLocationId, Boolean Config = FALSE )
        #{
        #    InventDim       InventDim;
        #    InventDimParm   InventDimparm;
        #    InventSum       InventSum;
        #    InventLocation  InventLocation;
        #    Real            Qty;
        #;
        #InventDim.InventLocationId = InventLocationId;
        #InventDimParm.InventLocationIdFlag = True;
        #IF (Config)
        #    {
        #    InventDimParm.ConfigIdFlag = True;
        #    InventDim.configId         = "ALAP";
        #    }
        #InventSum = InventSum::findSum(this.ItemId,InventDim,InventDimParm);
        #Qty += Max(0,InventSum.AvailPhysical);
        #return qty;
        #}
        #
        #
      ENDSOURCE
      SOURCE #onHandQtyInventConfig
        #InventQty onHandQtyInventConfig(InventLocationId InventLocationId, ConfigId ConfigId="ALAP")
        #{
        #    InventDim InventDim;
        #    InventDimParm InventDimparm;
        #    InventSum InventSum;
        #;
        #        InventDim.InventLocationId = InventLocationID;
        #        InventDim.configId         = ConfigId;
        #
        #        InventDimParm.InventLocationIdFlag = True;
        #        InventDimParm.ConfigIdFlag = True;
        #        InventSum = InventSum::findSum(this.ItemId,InventDim,InventDimParm);
        #        return  Max(0,InventSum.AvailPhysical);
        #}
      ENDSOURCE
      SOURCE #onHandQtyKulso
        #display InventQty onHandQtyKulso()
        #{
        #    InventDim InventDim;
        #    InventDimParm InventDimparm;
        #    InventSum InventSum;
        #;
        #        InventDim.InventLocationId = Inventparameters::find().InventLocationKulso;
        #        InventDimParm.InventLocationIdFlag = True;
        #        InventSum = InventSum::findSum(this.ItemId,InventDim,InventDimParm);
        #        return  Max(0,InventSum.AvailPhysical);
        #}
      ENDSOURCE
      SOURCE #onHandQtyMinimalAttar
        #InventQty onHandQtyMinimalAttar(InventLocationId InventLocationId, Boolean Config = FALSE )
        #{
        #    InventDim       InventDim;
        #    InventDimParm   InventDimparm;
        #    InventSum       InventSum;
        #    InventLocation  InventLocation;
        #    Real            Qty;
        #    InventTrans     InventTrans;
        #; // IT 2008.11.21.
        #Select sum(qty) From InventTrans
        #    Join InventDim
        #    Where
        #        InventTrans.ItemId          == This.ItemId &&
        #        InventDim.inventDimId       == InventTrans.inventDimId &&
        #        (!Config  || InventDim.configId == "ALAP") &&
        #        InventDim.InventLocationId  == "Q"+InventLocationId &&
        #        InventTrans.TransType       == InventTransType::InventTransfer &&
        #        InventTrans.StatusReceipt   == StatusReceipt::Ordered;
        #
        #return Max(InventTrans.Qty,0);
        #}
        #
        #
      ENDSOURCE
      SOURCE #OnhandSum
        #Display InventQty OnhandSum()
        #{
        #Return This.onHandQtyBelso()+ this.onHandQtyKulso();
        #
        #}
      ENDSOURCE
      SOURCE #SerialActive
        #display boolean SerialActive()
        #{
        #    InventDimSearch dimSearch = new InventDimSearch();
        #    ;
        #    if (dimSearch.find(this.DimGroupId,fieldnum(InventDim,InventSerialId)))
        #        return dimSearch.dimActive();
        #    return false;
        #}
      ENDSOURCE
      SOURCE #setIDs
        #void setIDs()
        #{
        #    updGyartok  updGyartok;
        #    updJelleg1  updJelleg1;
        #    updJelleg2  updJelleg2;
        #    updJelleg3  updJelleg3;
        #
        #    void setAxStruktKod()
        #    {
        #        AxStruktKod AxStruktKod;
        #
        #        if (this.GyartoId)
        #            AxStruktKod=this.GyartoId;
        #        else
        #            AxStruktKod='____';
        #
        #        if (this.Jelleg1Id)
        #            AxStruktKod+=this.Jelleg1Id;
        #        else
        #            AxStruktKod+='____';
        #
        #        if (this.Jelleg2Id)
        #            AxStruktKod+=this.Jelleg2Id;
        #        else
        #            AxStruktKod+='____';
        #
        #        if (this.Jelleg3Id)
        #            AxStruktKod+=this.Jelleg3Id;
        #        else
        #            AxStruktKod+='____';
        #
        #        if (AxStruktKod)
        #            this.AxStruktKod=AxStruktKod;
        #    }
        #
        #    if (this.GyartoNev)
        #    {
        #        select GyartoId from updGyartok where updGyartok.GyartoNev==this.GyartoNev;
        #        this.Gyartoid=updGyartok.GyartoId;
        #    }
        #    if (this.JellegNev1)
        #    {
        #        select Jelleg1Id from updJelleg1 where updJelleg1.JellegNev==this.JellegNev1;
        #        this.Jelleg1id=updJelleg1.Jelleg1Id;
        #    }
        #    if (this.JellegNev2)
        #    {
        #        select Jelleg2Id from updJelleg2 where updJelleg2.JellegNev==this.JellegNev2;
        #        this.Jelleg2id=updJelleg2.Jelleg2Id;
        #    }
        #    if (this.JellegNev3)
        #    {
        #        select Jelleg3Id from updJelleg3 where updJelleg3.JellegNev==this.JellegNev3;
        #        this.Jelleg3id=updJelleg3.Jelleg3Id;
        #    }
        #
        #    setAxStruktKod();
        #}
      ENDSOURCE
      SOURCE #showDocHanIcon
        #// Sonic
        #display smmDocIconNum showDocHanIcon()
        #{
        #    #macrolib.resource
        #    ;
        #
        #//    if (this.BusRelAccount && this.DataAreaId && (select firstonly docuRef where docuRef.RefCompanyId  == this.DataAreaId && docuRef.BusRelAccount == this.BusRelAccount).RecId)
        #
        #    if (this.RecId && this.DataAreaId &&
        #       (select firstonly docuRef
        #               where docuRef.RefCompanyId == this.DataAreaId &&
        #                     docuRef.RefRecId == this.RecId &&
        #                     docuRef.RefTableId == this.TableId
        #                     ).RecId)
        #    {
        #        return #RES_NODE_DOC;
        #    }
        #
        #    return #RES_AM_NEW;
        #}
      ENDSOURCE
      SOURCE #standardKuszob
        #display real standardKuszob()
        #{
        #    return updGetInventDimSum::getKuszobar(this.ItemId,this.standardconfigId);
        #}
      ENDSOURCE
      SOURCE #Update
        #void update()
        #{
        #    InventTable         this_Orig       = this.orig();
        #    ItemGroupId         itemGroup_Orig  = this_Orig.ItemGroupId;
        #
        #    ForecastSales   forecastSales;
        #    ForecastPurch   forecastPurch;
        #
        #    boolean syncCondition1 = false;
        #    boolean syncCondition2 = false;
        #    SyncServiceProvider sync;
        #    ;
        #
        #    ttsbegin;
        #
        #    this.setNameAlias();
        #
        #    this.setIDs();
        #
        #    super();
        #
        #    if (itemGroup_Orig != this.ItemGroupId)
        #    {
        #
        #        while select forupdate forecastSales
        #            where forecastSales.ItemId        == this.ItemId                 &&
        #                  forecastSales.ItemGroupId   == itemGroup_Orig              &&
        #                  forecastSales.ExpandId      == 0
        #        {
        #
        #            forecastSales.ItemGroupId = this.ItemGroupId;
        #            forecastSales.update();
        #        }
        #
        #        while select forupdate forecastPurch
        #            where forecastPurch.ItemId      == this.ItemId                 &&
        #                  forecastPurch.ItemGroupId == itemGroup_Orig              &&
        #                  forecastPurch.ExpandId    == 0
        #        {
        #
        #            forecastPurch.ItemGroupId = this.ItemGroupId;
        #            forecastPurch.update();
        #        }
        #
        #    }
        #
        #    if (this_Orig.SalesModel                != this.SalesModel              ||
        #        this_Orig.SalesPriceModelBasic      != this.SalesPriceModelBasic    ||
        #        this_Orig.SalesContributionRatio    != this.SalesContributionRatio  ||
        #        this_Orig.SalesPercentMarkup        != this.SalesPercentMarkup)
        #    {
        #        InventTable::updateAutoSalesPrice(this.ItemId);
        #    }
        #
        #    this.insertBOMTable();
        #    this.insertRouteTable();
        #
        #    ttscommit;
        #
        #    if (this_Orig.Webaruhaz == NoYes::Yes || this.Webaruhaz == NoYes::Yes)
        #    {
        #        syncCondition1 = ( this_Orig.Akcios != this.Akcios ) ||
        #                        ( this_Orig.AxStruktKod != this.AxStruktKod ) ||
        #                        ( this_Orig.Fokuszhet != this.Fokuszhet ) ||
        #                        ( this_Orig.Garancia != this.Garancia ) ||
        #                        ( this_Orig.GyartoiCikkszam != this.GyartoiCikkszam ) ||
        #                        ( this_Orig.GyartoId != this.GyartoId ) ||
        #                        ( this_Orig.HetiTop10 != this.HetiTop10 ) ||
        #                        ( this_Orig.ItemId != this.ItemId ) ||
        #                        ( this_Orig.ItemState != this.ItemState ) ||
        #                        ( this_Orig.ItemName != this.ItemName ) ||
        #                        ( this_Orig.Jelleg1Id != this.Jelleg1Id ) ||
        #                        ( this_Orig.Jelleg2Id != this.Jelleg2Id ) ||
        #                        ( this_Orig.Jelleg3Id != this.Jelleg3Id ) ||
        #                        ( this_Orig.Leertekelt != this.Leertekelt ) ||
        #                        ( this_Orig.StandardConfigId != this.StandardConfigId ) ||
        #                        ( this_Orig.Webaruhaz != this.Webaruhaz );
        #
        #        syncCondition2 = ( this.AxStruktKod != '' ) &&
        #                        ( this.Garancia != '' ) &&
        #                        ( this.GyartoiCikkszam != '' ) &&
        #                        ( this.GyartoId != '' ) &&
        #                        ( this.ItemId != '' ) &&
        #                        ( this.ItemName != '' ) &&
        #                        ( this.Jelleg1Id != '' ) &&
        #                        ( this.StandardConfigId != '' );
        #
        #        if (syncCondition1 && syncCondition2)
        #        {
        #            sync = new SyncServiceProvider(SyncServiceConfigKey::Msmq);
        #            sync.updateCatalogue( this.constructCatalogueSyncEntity() );
        #        }
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #validateWrite
        #public boolean validateWrite()
        #{
        #    boolean ret;
        #
        #    ret = super();
        #
        #    ret = ret && this.checkProjCategoryId();
        #
        #    if (ret)
        #    {
        #        ret = appl.dimensionSetValidation().checkDimension(this, fieldnum(InventTable, Dimension), true);
        #    }
        #
        #    //BB 20071130
        #    if (!this.TervezettKeszletNap)
        #        this.TervezettKeszletNap = 28;
        #    //endBB
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #BOMGarIdo
        #// Sonic - 2008.08.22. //
        #static str BOMGarIdo(ItemID ItemID)
        #{
        #  Str              RetStr;
        #  InventTable      InventTable;
        #  InventTable      InventTableTemp;
        #  BOMVersion       BOMVersion;
        #  BOM              BOM;
        #  updJotallasIdeje updJotallasIdeje;
        #  ;
        #  RetStr = '';
        #
        #  SELECT FIRSTONLY ItemID, ItemType
        #         FROM InventTable
        #         WHERE InventTable.ItemId == ItemID;
        #
        #  If (InventTable.ItemType == ItemType::BOM)
        #  {
        #    SELECT FIRSTONLY BOMVersion
        #           WHERE BOMVersion.ItemId == ItemID
        #                                   &&
        #                           BOMVersion.Active
        #                                   &&
        #                          BOMVersion.Approved;
        #
        #    If (BOMVersion)
        #    {
        #      WHILE SELECT BOM
        #            WHERE BOM.BOMId == BOMVersion.BOMId
        #        JOIN InventTableTemp
        #             WHERE InventTableTemp.ItemId == BOM.ItemId
        #                                          &&
        #       InventTableTemp.updJotallasIdejeID != InventTable.updJotallasIdejeID
        #                                          &&
        #                           InventTableTemp.updJotallasIdejeID
        #      {
        #        SELECT FIRSTONLY updJotallasIdeje
        #               WHERE updJotallasIdeje.updJotallasIdejeID == InventTableTemp.updJotallasIdejeID;
        #
        #//        Info(InventTableTemp.ItemId+";"+InventTableTemp.ItemName+";"+updJotallasIdeje.Megjegyzes);
        #        RetStr += InventTableTemp.ItemId+";"+InventTableTemp.ItemName+";"+updJotallasIdeje.Megjegyzes+"\n";
        #      }
        #    }
        #  }
        #
        #  Return RetStr;
        #}
      ENDSOURCE
      SOURCE #ElteroGarido
        #// Sonic - 2008.09.09. //
        #// Sonic - 2008.11.06. kiegészítés sorszámmal, anyagjegyzék figyeléssel //
        #static str ElteroGarido(ItemID ItemID)
        #{
        #  Str                RetStr;
        #  UpdMasGaridoItem   UpdMasGaridoItem;
        #  UpdMasGaridoMegnev UpdMasGaridoMegnev;
        #
        #  InventTable      InventTable;
        #  InventTable      InventTableBelso;
        #  updJotallasIdeje updJotallasIdeje;
        #  updJotallasIdeje updJotallasIdejeItem;
        #
        #  BOM                BOM;
        #  BOMVersion         BOMVersion;
        #
        #  Int                I;
        #
        #str GetDescription(ItemID _ItemID)
        #{
        #  InventTable _InventTable;
        #  updJotallasIdeje _updJotallasIdeje;
        #  UpdMasGaridoMegnev _UpdMasGaridoMegnev;
        #  ;
        #  SELECT FIRSTONLY _InventTable
        #         WHERE _InventTable.ItemId == _ItemID;
        #
        #  SELECT FIRSTONLY _updJotallasIdeje
        #         WHERE _updJotallasIdeje.updJotallasIdejeID == _InventTable.updJotallasIdejeID;
        #
        #  If (_updJotallasIdeje)
        #  {
        #    Return "\n"+_ItemId+" összeszerelt termék garanciája "+_updJotallasIdeje.Megjegyzes+". "+
        #           "A termékben az alábbi alkatrészek eltérő garanciával rendelkeznek:\n";
        #  }
        #}
        #
        #  ;
        #  RetStr = '';
        #
        #  SELECT FIRSTONLY InventTable
        #         WHERE InventTable.ItemId == ItemID;
        #
        #  SELECT FIRSTONLY updJotallasIdeje
        #         WHERE updJotallasIdeje.updJotallasIdejeID == InventTable.updJotallasIdejeID;
        #
        #  // Anyagjegyzék típusú cikknél
        #  If (InventTable.ItemType == ItemType::BOM)
        #  {
        #    I = 0;
        #    SELECT FIRSTONLY BOMVersion
        #           WHERE BOMVersion.Name == InventTable.ItemId;
        #
        #    WHILE SELECT BOM
        #          WHERE BOM.BOMId == BOMVersion.BOMId
        #    {
        #      SELECT FIRSTONLY InventTableBelso
        #             WHERE InventTableBelso.ItemId == BOM.ItemId;
        #
        #      SELECT FIRSTONLY updJotallasIdejeItem
        #             WHERE updJotallasIdejeItem.updJotallasIdejeID == InventTableBelso.updJotallasIdejeID;
        #
        #      If (updJotallasIdejeItem.Sorszam > updJotallasIdeje.Sorszam)
        #      {
        #//        WHILE SELECT UpdMasGaridoItem
        #//              WHERE UpdMasGaridoItem.ItemId == BOM.ItemId
        #        {
        #          I++;
        #          If (I == 1)
        #          {
        #            RetStr += GetDescription(ItemID);
        #          }
        #
        #          SELECT FIRSTONLY UpdMasGaridoMegnev
        #                 WHERE UpdMasGaridoMegnev.Name == InventTableBelso.updJotallasIdejeID;
        #//                 WHERE UpdMasGaridoMegnev.Name == UpdMasGaridoItem.Name;
        #
        #//          RetStr += InventTableBelso.ItemId+";  "+updJotallasIdejeItem.Megjegyzes+"\n";
        #          RetStr += InventTableBelso.ItemId+" alkatrész garanciája  "+updJotallasIdejeItem.Megjegyzes+".\n";
        #        }
        #      }
        #    }
        #  } Else
        #  // NEM Anyagjegyzék típusú cikknél
        #  {
        #    SELECT FIRSTONLY updJotallasIdejeItem
        #//    WHILE SELECT updJotallasIdejeItem
        #           WHERE updJotallasIdejeItem.updJotallasIdejeID == InventTable.updJotallasIdejeID;
        #
        #    WHILE SELECT UpdMasGaridoItem
        #          WHERE UpdMasGaridoItem.ItemId == ItemID
        #    {
        #      SELECT FIRSTONLY UpdMasGaridoMegnev
        #             WHERE UpdMasGaridoMegnev.Name == UpdMasGaridoItem.Name;
        #      {
        #
        #      SELECT FIRSTONLY updJotallasIdeje
        #             WHERE updJotallasIdeje.updJotallasIdejeID == UpdMasGaridoItem.GarIdo;
        #
        #      // anyagjegyzék típus esetén (ItemType::BOM) csak akkor írjuk ki,
        #      // ha a jótállás ideje nagyobb a hozzá tartozó cikk jótállási idejénél
        #//      If (updJotallasIdeje.Sorszam > updJotallasIdejeItem.Sorszam)
        #      {
        #//        RetStr += ItemId+";  "+UpdMasGaridoMegnev.Description+";  "+updJotallasIdeje.Megjegyzes+"\n";
        #        RetStr += "\n"+ItemId+" termékben a(z) "+UpdMasGaridoMegnev.Description+" garanciája "+updJotallasIdeje.Megjegyzes+".\n";
        #      }
        #      }
        #    }
        #  }
        #
        #  Return RetStr;
        #}
      ENDSOURCE
      SOURCE #GaridoKiegeszites
        #static Boolean GaridoKiegeszites(ItemID ItemID)
        #{
        #  Str S;
        #  ;
        #  S = InventTable::ElteroGarido(ItemID) + InventTable::BOMGarIdo(ItemID);
        #
        #  Return (S != '');
        #}
      ENDSOURCE
      SOURCE #getAtlagosKeszletKorCfg
        #static real getAtlagosKeszletKorCfg(itemid _itemid, configid _configid)
        #{
        #    inventtrans _inventtrans;
        #    real        ossznap;
        #    container   keszletek, napok;
        #    qty         aktkeszlet, tmpkeszlet;
        #    date        aktdate, tmptransdate, tdate, fromdate;
        #    int         i, napdb;
        #    inventdim   inventdim;
        #//    ReportInventTrans   ReportInventTrans;
        #    ReportInventTransConfig   ReportInventTrans;
        #    ;
        #
        #    aktdate = systemdateget();
        #    aktkeszlet = inventtable::getOsszkeszletCfg(_itemid, _configid);
        #    tmpkeszlet = 0;
        #
        #    if (curext() == "HRP")
        #    {
        #        fromdate = 01\01\2008;
        #        tdate = 31\12\2007;
        #    }
        #
        #    if (curext() == "BSC")
        #    {
        #        fromdate = 03\06\2008;
        #        tdate = 29\06\2008;
        #    }
        #
        #  while select ReportInventTrans
        #        group by phdate desc
        #//        order by phdate desc
        #        where ReportInventTrans.Beszerezve == noyes::Yes
        #                ||
        #              ReportInventTrans.Visszaru == noyes::Yes
        #                ||
        #              ReportInventTrans.Anyagjegyzek == noyes::Yes
        #                ||
        #              ReportInventTrans.AttarolasBe == noyes::Yes
        #        join Datereport, sum(qty) from _inventtrans
        #//        join _inventtrans
        #            group by datereport desc
        #            where _inventtrans.RecId == ReportInventTrans.RefID
        #                  && _inventtrans.ItemId == _ItemId
        #                  && _inventtrans.Qty > 0
        #        join InventDim
        #            group by inventlocationid, configid
        #            where InventDim.inventDimId==_inventtrans.inventDimId
        #                && InventDim.configId==_configid
        #    {
        #        tmpkeszlet += _inventtrans.Qty;
        #        if (tmpkeszlet <= aktkeszlet)
        #        {
        #            if (_inventtrans.DateReport)
        #            {
        #                    //info("DatePhysical: "+date2strusr(_inventtrans.DatePhysical)+" qty: "+num2str(_inventtrans.Qty,10,0,1,2)+" TransID: "+_inventtrans.InventTransId);
        #                    keszletek = conins(keszletek,conlen(keszletek)+1,_inventtrans.Qty);
        #                    napok = conins(napok,conlen(napok)+1,aktdate-_inventtrans.DateReport);
        #            }
        #        }
        #        else
        #        {
        #            if (_inventtrans.DateReport)
        #            {
        #                    //info("DatePhysical: "+date2strusr(_inventtrans.DatePhysical)+" qty: "+num2str(_inventtrans.Qty,10,0,1,2)+" TransID: "+_inventtrans.InventTransId);
        #                    keszletek = conins(keszletek,conlen(keszletek)+1,aktkeszlet - (tmpkeszlet - _inventtrans.Qty));
        #                    napok = conins(napok,conlen(napok)+1,aktdate-_inventtrans.DateReport);
        #            }
        #            break;
        #        }
        #
        #    }
        #
        #
        #    tmpkeszlet = 0;
        #    while select ReportInventTrans
        #        order by phdate
        #        where (ReportInventTrans.Eladva == noyes::Yes
        #                    ||
        #              ReportInventTrans.Anyagjegyzek == noyes::Yes
        #                    ||
        #              ReportInventTrans.AttarolasKi == noyes::Yes
        #                            )
        #                    &&
        #              ReportInventTrans.PhDate > fromdate
        #        join _inventtrans
        #            where _inventtrans.RecId == ReportInventTrans.RefID
        #                  && _inventtrans.ItemId == _ItemId
        #                  && _inventtrans.Qty < 0
        #        join InventDim
        #            where InventDim.inventDimId==_inventtrans.inventDimId
        #                && InventDim.configId==_configid
        #
        #    {
        #        tmpkeszlet += _inventtrans.Qty;
        #    }
        #
        #    if (inventtable::find(_itemid).Nyitokeszlet > abs(tmpkeszlet) && _configid == "ALAP")
        #    {
        #
        #
        #       // tdate = 31\12\2007;
        #        keszletek = conins(keszletek,conlen(keszletek)+1,inventtable::find(_itemid).Nyitokeszlet - abs(tmpkeszlet));
        #//    if (this.AtlagosKeszletKor)
        #        napok = conins(napok,conlen(napok)+1,aktdate - (tdate - inventtable::find(_itemid).AtlagosKeszletKor));
        #//    else
        #//        napok = conins(napok,conlen(napok)+1,aktdate - 31\12\2007);
        #
        #    }
        #
        #    ossznap = 0;
        #    if (aktkeszlet > 0) {
        #        for(i=1;i<=conlen(keszletek);i++) {
        #            ossznap += conpeek(keszletek,i) * conpeek(napok,i);
        #        }
        #
        #        ossznap = ossznap / aktkeszlet;
        #    }
        #
        #    if (ossznap)
        #        return ossznap;
        #    else
        #        return 0;
        #
        #
        #
        #
        #
        #
        #
        #
        #
        #
        #//----------------------------------------------------------------
        #
        #
        #
        #
        #
        #
        #
        #
        #
        #
        #    while select _inventtrans
        #        order by DatePhysical desc
        #        where ((_inventtrans.TransType == inventtranstype::Purch)
        #        || (_inventtrans.TransType == inventtranstype::BOMLine)
        #        || (_inventtrans.TransType == inventtranstype::BOMMain)
        #        || (_inventtrans.TransType == inventtranstype::InventCounting))
        #      //  || (_inventtrans.TransType == inventtranstype::InventTransaction))
        #        && _inventtrans.ItemId == _ItemId
        #        && _inventtrans.Qty > 0
        #//        && _inventtrans.DatePhysical > 31\12\2007
        #        join InventDim
        #            where InventDim.inventDimId==_inventtrans.inventDimId
        #                && InventDim.configId==_configid
        #
        #    {
        #      //  info("DatePhysical: "+date2strusr(_inventtrans.DatePhysical)+" qty: "+num2str(_inventtrans.Qty,10,0,1,2)+" TransID: "+_inventtrans.InventTransId);
        #        tmpkeszlet += _inventtrans.Qty;
        #        if (tmpkeszlet <= aktkeszlet)
        #        {
        #            if (_inventtrans.DatePhysical)
        #            {
        #                    //info("DatePhysical: "+date2strusr(_inventtrans.DatePhysical)+" qty: "+num2str(_inventtrans.Qty,10,0,1,2)+" TransID: "+_inventtrans.InventTransId);
        #                    keszletek = conins(keszletek,conlen(keszletek)+1,_inventtrans.Qty);
        #                    napok = conins(napok,conlen(napok)+1,aktdate-_inventtrans.DatePhysical);
        #            }
        #        }
        #        else
        #        {
        #            if (_inventtrans.DatePhysical)
        #            {
        #                    //info("DatePhysical: "+date2strusr(_inventtrans.DatePhysical)+" qty: "+num2str(_inventtrans.Qty,10,0,1,2)+" TransID: "+_inventtrans.InventTransId);
        #                    keszletek = conins(keszletek,conlen(keszletek)+1,aktkeszlet - (tmpkeszlet - _inventtrans.Qty));
        #                    napok = conins(napok,conlen(napok)+1,aktdate-_inventtrans.DatePhysical);
        #            }
        #            break;
        #        }
        #    }
        #
        #
        #    tmpkeszlet = 0;
        #    while select _inventtrans
        #        order by DatePhysical
        #        where (_inventtrans.TransType == inventtranstype::Sales
        #        || _inventtrans.TransType == inventtranstype::BOMLine
        #        || _inventtrans.TransType == inventtranstype::BOMMain
        #        || _inventtrans.TransType == inventtranstype::InventCounting
        #        || _inventtrans.TransType == inventtranstype::InventTransaction)
        #        && _inventtrans.ItemId == _ItemId
        #        && _inventtrans.DatePhysical > 01\01\2008
        #        && _inventtrans.Qty < 0
        #        join InventDim
        #            where InventDim.inventDimId==_inventtrans.inventDimId
        #                && InventDim.configId==_configid
        #
        #    {
        #        tmpkeszlet += _inventtrans.Qty;
        #    }
        #
        #    if (inventtable::find(_itemid).Nyitokeszlet > abs(tmpkeszlet))
        #    {
        #
        #
        #        tdate = 31\12\2007;
        #        keszletek = conins(keszletek,conlen(keszletek)+1,inventtable::find(_itemid).Nyitokeszlet - abs(tmpkeszlet));
        #//    if (this.AtlagosKeszletKor)
        #        napok = conins(napok,conlen(napok)+1,aktdate - (tdate - inventtable::find(_itemid).AtlagosKeszletKor));
        #//    else
        #//        napok = conins(napok,conlen(napok)+1,aktdate - 31\12\2007);
        #
        #    }
        #
        #    ossznap = 0;
        #    if (aktkeszlet > 0) {
        #        for(i=1;i<=conlen(keszletek);i++) {
        #            ossznap += conpeek(keszletek,i) * conpeek(napok,i);
        #        }
        #
        #        ossznap = ossznap / aktkeszlet;
        #    }
        #
        #    if (ossznap)
        #        return ossznap;
        #    else
        #        return 0;
        #}
      ENDSOURCE
      SOURCE #GetDefaultWmsLocation
        #Static WmsLocationId  GetDefaultWmsLocation(ItemId _ItemId, InventLocationId _InventLocationId)
        #{
        #InventSum InventSum;
        #InventDim inventDim;
        #InventTrans InventTrans;
        #Select InventSum Order By AvailPhysical Desc, SortOrder Desc
        #    Join InventDim
        #    Where
        #        InventSum.ItemId == _ItemId &&
        #        Inventsum.InventDimId == InventDim.inventDimId &&
        #        InventDim.InventLocationId == _InventLocationId &&
        #        InventSum.PhysicalInvent;
        #IF (!InventSum)
        #    {
        #    Select FirstOnly InventTrans Order by DatePhysical desc
        #        Join InventDim
        #        Where
        #            InventTrans.ItemId      == _itemid &&
        #            InventTrans.inventDimId == InventDim.inventDimId &&
        #            InventDim.InventLocationId == _InventLocationId &&
        #            InventTrans.DatePhysical;
        #    If (InventDim)
        #        Return Inventdim.wMSLocationId;
        #    Else
        #        Return "";
        #    }
        #Else
        #   Return InventDim.wMSLocationId;
        #}
      ENDSOURCE
      SOURCE #getMinimalQtyTotal
        #static real getMinimalQtyTotal(itemid _itemid)
        #{
        #    ReqItemTable    _reqitemtable;
        #    inventdim       _inventdimBelso;
        #    inventdim       _inventdimKulso;
        #    real            minqtytotal = 0;
        #    ;
        #_InventDimBelso.InventLocationId = inventparameters::find().InventLocationBelso;
        #_inventdimBelso.configId         = "ALAP";
        #_inventdimBelso.inventdimid = InventDim::findOrCreate(_inventdimBelso).inventDimId;
        #
        #_inventdimKulso.InventLocationId = inventparameters::find().InventLocationKulso;
        #_inventdimKulso.configId         = "ALAP";
        #_inventdimKulso.inventdimid = InventDim::findOrCreate(_inventdimKulso).inventDimId;
        #
        #    select sum(MinInventOnhand) FROM  _reqitemtable where
        #        _reqitemtable.ItemId == _itemid &&
        #        (_reqitemtable.CovInventDimId == _inventdimBelso.inventdimid ||
        #        _reqitemtable.CovInventDimId == _inventdimKulso.inventdimid);
        #    return _reqitemtable.MinInventOnhand;
        #}
      ENDSOURCE
      SOURCE #getNyitottBeszerzesRendelesDbCfg
        #static qty getNyitottBeszerzesRendelesDbCfg(itemid _itemid, configid _configid)
        #{
        #    purchline    _purchline;
        #    InventDim                   InventDim;
        #    ;
        #    select sum(QtyOrdered) from _purchline where _purchline.ItemId == _ItemId
        #        && _purchline.PurchStatus == PurchStatus::Backorder
        #        && _purchline.PurchQty > 0
        #        join InventDim
        #                              where InventDim.inventDimId==_purchline.inventDimId &&
        #                                    InventDim.configId==_ConfigId;
        #    return _purchline.QtyOrdered;
        #}
      ENDSOURCE
      SOURCE #getNyitottVevorendelesDbCfg
        #static qty getNyitottVevorendelesDbCfg(itemid _itemid, configid _configid)
        #{
        #    salesline    _salesline;
        #    InventDim                   InventDim;
        #    ;
        #    select sum(RemainSalesPhysical) from _salesline where _salesline.ItemId == _ItemId
        #        && _salesline.SalesStatus == salesstatus::Backorder
        #        && _salesline.RemainSalesPhysical > 0
        #        join InventDim
        #                              where InventDim.inventDimId==_salesline.inventDimId &&
        #                                    InventDim.configId==_ConfigId;
        #
        #    return _salesline.RemainSalesPhysical;
        #}
      ENDSOURCE
      SOURCE #getOnkoltseg
        #static real getOnkoltseg(itemid _itemid, date _date)
        #{
        #    inventtrans     inventtrans;
        #    date            tdate;
        #
        #    ;
        #
        #    if (curext() == "HRP")
        #    {
        #
        #        tdate = 31\12\2007;
        #    }
        #
        #    if (curext() == "BSC")
        #    {
        #
        #        tdate = 29\06\2008;
        #    }
        #     Select firstonly InventTrans
        #        order by DatePhysical desc
        #        where
        #            InventTrans.DatePhysical <= _date &&
        #            ((inventtrans.TransType == inventtranstype::Purch)
        #            || (inventtrans.TransType == inventtranstype::BOMLine)
        #            || (inventtrans.TransType == inventtranstype::BOMMain)
        #            || (inventtrans.TransType == inventtranstype::InventCounting)) &&
        #            InventTrans.Direction == InventDirection::Receipt &&
        #            InventTrans.ItemId    == _ItemId &&
        #//            inventtrans.Qty > 0 &&
        #            inventtrans.CostAmountPosted > 0;
        #
        #    if (inventtrans)
        #        return inventtrans.CostAmountPosted / inventtrans.Qty;
        #    else
        #        if (inventtable::find(_itemid).inventTableModuleInvent().Kuszobar)
        #            return inventtable::find(_itemid).inventTableModuleInvent().Kuszobar;
        #        else
        #            if (updGetInventDimSum::getAtlagAr(_ItemId,inventtable::find(_itemid).StandardConfigId))
        #                return updGetInventDimSum::getAtlagAr(_ItemId,inventtable::find(_itemid).StandardConfigId);
        #            else
        #            {
        #                select firstonly inventtrans
        #                    where InventTrans.DatePhysical == tdate &&
        #                        InventTrans.ItemId    == _ItemId &&
        #                        inventtrans.TransType == inventtranstype::InventTransaction;
        #                if (inventtrans)
        #                    return inventtrans.CostAmountPosted / inventtrans.Qty;
        #                else
        #                    return 0;
        #            }
        #}
      ENDSOURCE
      SOURCE #getOnkoltsegcfg
        #static real getOnkoltsegcfg(itemid _itemid, date _date, configid _configid)
        #{
        #    inventtrans     inventtrans;
        #    InventDim   InventDim;
        #    date        tdate;
        #
        #    ;
        #
        #    if (curext() == "HRP")
        #    {
        #
        #        tdate = 31\12\2007;
        #    }
        #
        #    if (curext() == "BSC")
        #    {
        #
        #        tdate = 29\06\2008;
        #    }
        #
        #     Select firstonly InventTrans
        #        order by DatePhysical desc
        #        where
        #            InventTrans.DatePhysical <= _date &&
        #            ((inventtrans.TransType == inventtranstype::Purch)
        #            || (inventtrans.TransType == inventtranstype::BOMLine)
        #            || (inventtrans.TransType == inventtranstype::BOMMain)
        #            || (inventtrans.TransType == inventtranstype::InventCounting)) &&
        #            InventTrans.Direction == InventDirection::Receipt &&
        #            InventTrans.ItemId    == _ItemId &&
        #//            inventtrans.Qty > 0 &&
        #            inventtrans.CostAmountPosted > 0
        #              join InventDim
        #                              where InventDim.inventDimId==inventtrans.inventDimId &&
        #                                    InventDim.configId==_configid
        #    ;
        #
        #    if (inventtrans)
        #        return inventtrans.CostAmountPosted / inventtrans.Qty;
        #    else
        #        if (inventtable::find(_itemid).inventTableModuleInvent().Kuszobar)
        #            return inventtable::find(_itemid).inventTableModuleInvent().Kuszobar;
        #        else
        #            if (updGetInventDimSum::getAtlagAr(_ItemId,_ConfigId))
        #                return updGetInventDimSum::getAtlagAr(_ItemId,_ConfigId);
        #            else
        #            {
        #                select firstonly inventtrans
        #                    where InventTrans.DatePhysical == tdate &&
        #                        InventTrans.ItemId    == _ItemId &&
        #                        inventtrans.TransType == inventtranstype::InventTransaction;
        #                if (inventtrans)
        #                    return inventtrans.CostAmountPosted / inventtrans.Qty;
        #                else
        #                    return 0;
        #            }
        #}
      ENDSOURCE
      SOURCE #getOsszkeszletCfg
        #static real getOsszkeszletCfg(itemid _itemid, configid _configid, inventlocationid _inventlocationid = "")
        #{
        #    return inventtable::getRaktarkeszletcfg(_itemid, _configid, _inventlocationid) + inventtable::getRaktarkozikeszletCfg(_itemid, _configid, _inventlocationid);
        #}
        #
      ENDSOURCE
      SOURCE #getRaktarkeszletCfg
        #static real getRaktarkeszletCfg(itemid _itemid, configid _configid, inventlocationid _inventlocationid = "")
        #{
        #    InventSum   InventSum;
        #    InventDim   InventDim;
        #    InventItemUnitConvert       inventItemUnitConvert;
        #    UnitID                      unitIdInvent;
        #    UnitID                      unitIdSecondary;
        #    InventLocation InventLocation; //IT 20080113
        #
        #    ;
        #    inventItemUnitConvert = InventItemUnitConvert::newNoParameters();
        #
        #    if (!_inventlocationid)
        #    select sum(PhysicalInvent) from InventSum
        #                              join InventDim
        #                              where InventDim.inventDimId==InventSum.inventDimId &&
        #                                    InventSum.Closed==NoYes::No &&  InventSum.ItemId==_ItemId &&
        #                                    InventDim.configId==_configid
        #                              Join UseOnSalesTable From  InventLocation where
        #                                    InventLocation.InventLocationId == InventDim.InventLocationId &&
        #                                    InventLocation.UseOnSalesTable ;
        #    else
        #        select sum(PhysicalInvent) from InventSum
        #                              join InventDim
        #                              where InventDim.inventDimId==InventSum.inventDimId &&
        #                                    InventSum.Closed==NoYes::No &&  InventSum.ItemId==_ItemId &&
        #                                    InventDim.configId==_configid
        #                              Join UseOnSalesTable From  InventLocation where
        #                                    InventLocation.InventLocationId == InventDim.InventLocationId &&
        #                                    InventLocation.InventLocationId == _inventlocationid &&
        #                                    InventLocation.UseOnSalesTable ;
        #
        #//    unitidinvent = this.inventTableModuleInvent().UnitId;
        #//    unitIdSecondary = this.inventUnitId();
        #
        #    unitidinvent = "";
        #    unitIdSecondary = "";
        #
        #    return inventItemUnitConvert.qty(inventSum.physicalInvent, unitIdInvent, unitIdSecondary, _ItemId);
        #}
        #
      ENDSOURCE
      SOURCE #getRaktarkozikeszletCfg
        #static real getRaktarkozikeszletCfg(itemid _itemid, configid _configid, inventlocationid _inventlocationid = "")
        #{
        #    InventSum                   InventSum;
        #    InventDim                   InventDim;
        #    InventItemUnitConvert       inventItemUnitConvert;
        #    UnitID                      unitIdInvent;
        #    UnitID                      unitIdSecondary;
        #    InventLocation              InventLocation;
        #
        #    ;
        #
        #    if (_inventlocationid == inventparameters::find().InventLocationBelso)
        #        return inventtrans::utonvanCfg(_ItemId,inventparameters::find().InventLocationBelso,_ConfigId);
        #    if (_inventlocationid == inventparameters::find().InventLocationKulso)
        #        return inventtrans::utonvanCfg(_ItemId,inventparameters::find().InventLocationKulso,_ConfigId);
        #
        #    return inventtrans::utonvanCfg(_ItemId,inventparameters::find().InventLocationBelso,_ConfigId)+inventtrans::utonvanCfg(_ItemId,inventparameters::find().InventLocationKulso,_ConfigId);
        #/*
        #    inventItemUnitConvert = InventItemUnitConvert::newNoParameters();
        #//    select sum(Transferorder) from InventSum
        #    select sum(Picked) from InventSum
        #                              join InventDim
        #                              where InventDim.inventDimId==InventSum.inventDimId &&
        #                                    InventSum.Closed==NoYes::No &&  InventSum.ItemId==this.ItemId &&
        #                                    InventDim.configId==this.StandardConfigId
        #                                    && inventsum.Transferorder > 0;
        #                             // Join UseOnSalesTable From  InventLocation where
        #                             //       InventLocation.InventLocationId == InventDim.InventLocationId &&
        #                              //      InventLocation.UseOnSalesTable ;
        #
        #//    unitidinvent = this.inventTableModuleInvent().UnitId;
        #//    unitIdSecondary = this.inventUnitId();
        #
        #    unitidinvent = "";
        #    unitIdSecondary = "";
        #
        #//    return inventItemUnitConvert.qty(inventSum.Transferorder, unitIdInvent, unitIdSecondary, this.ItemId);
        #    return inventItemUnitConvert.qty(inventSum.Picked, unitIdInvent, unitIdSecondary, this.ItemId);
        #*/
        #}
        #
      ENDSOURCE
      SOURCE #getSorozatszamHiba
        #static str getSorozatszamHiba(ItemId _ItemId, UpdSerialNumber UpdSerialNumber)
        #{
        #    InventTable     InventTable;
        #    ;
        #    select SorozatszamKotelezo, Gyariszamoscikk from InventTable where InventTable.ItemId==_ItemId;
        #
        #    if (StrLen(UpdSerialNumber) != InventTable.Gyariszamoscikk)
        #        return ",a sorozatszámnak " + int2str(InventTable.Gyariszamoscikk) + " hosszúnak kell lennie!";
        #    else
        #        return "";
        #
        #}
      ENDSOURCE
      SOURCE #getSzallitasiNapok
        #static int getSzallitasiNapok(vendaccount _vendaccount)
        #{
        #    vendtable   _vendtable;
        #    ;
        #    select _vendtable where _vendtable.AccountNum == _vendaccount;
        #    return _vendtable.SzallitasiNapok;
        #}
      ENDSOURCE
      SOURCE #NetWeight
        #Static ItemNetWeight NetWeight(ItemId ItemId)
        #{
        #
        #Return (Select NetWeight from  InventTable Where InventTable.itemId == ItemId).netweight;
        #}
      ENDSOURCE
      SOURCE #purchPriceAgreementCur
        #static server container purchPriceAgreementCur(
        #                                        itemId             itemId,
        #                                        TransDate          priceDate,
        #                                        InventDim          inventDim,
        #                                        Qty                qty,
        #                                        UnitID             unit,
        #                                        VendAccount        accountNum  = inventTable::find(itemId).primaryVendorId,
        #                                        CurrencyCode       currencyCode = VendTable::find(accountNum).currency/*,
        #                                        PurchCostPrice     priceModelNoPriceDisc = PurchCostPrice::PurchPrice*/)
        #{
        #    PriceDisc           priceDisc;
        #
        #    InventTableModule   inventTableModule;
        #    InventPriceMap      inventPriceMap;
        #    VendTable           vendTable;
        #    ;
        #
        #    if (!currencyCode)
        #        currencyCode = CompanyInfo::standardCurrency();
        #
        #    inventTableModule= InventTableModule::find(itemId, ModuleInventPurchSales::Purch);
        #
        #    if (unit  != inventTableModule.unitId)
        #    {
        #        qty   = UnitConvert::qty(qty,
        #                                   unit,
        #                                   inventTableModule.unitId,
        #                                   itemId);
        #    }
        #
        #    vendTable= VendTable::find(accountNum);
        #
        #    priceDisc = new PriceDisc(ModuleInventPurchSales::Purch,
        #                              itemId,
        #                              inventDim,
        #                              inventTableModule.unitId,
        #                              priceDate,
        #                              qty,
        #                              vendTable.accountNum,
        #                              currencyCode);
        #
        #/*    if (priceModelNoPriceDisc == PurchCostPrice::CostPrice  &&  !priceDisc.priceAgreementHit(vendTable.priceGroup))
        #    {
        #        inventPriceMap = inventTable::find(ItemId).inventCostPriceMap(inventDim.inventDimId,inventDim);
        #
        #        return [inventPriceMap.price()/inventPriceMap.priceUnit(),companyInfo::standardCurrency()];
        #    }*/
        #
        #    if (! priceDisc.findPrice(vendTable.priceGroup))
        #    {
        #        priceDisc.findItemPrice();
        #    }
        #
        #    return [priceDisc.price()/priceDisc.priceUnit(),
        #            currencyCode];
        #}
      ENDSOURCE
      SOURCE #SerialnumAtLocation
        #static qty SerialnumAtLocation(inventlocationid _inventlocationid, itemid _itemid, UpdSerialNumber _serialnum)
        #{
        #    wmsordertrans   _wmsordertrans;
        #    inventtrans     _inventtrans;
        #    inventdim       _inventdim;
        #    qty             ret = 0;
        #
        #    ;
        #
        #    while select _wmsordertrans
        #        where
        #        _wmsordertrans.SerialNumber == _serialnum
        #        && _wmsordertrans.itemId == _itemid
        #    {
        #      While select _inventTrans
        #        Join _InventDim
        #        Where _InventTrans.InventTransId == _WmsOrderTrans.inventTransId &&
        #              _InventDim.inventDimId == _InventTrans.inventDimId &&
        #              _Inventdim.InventLocationId == _InventLocationId
        #              {
        #            if (_inventtrans.Qty > 0)
        #                ret += _inventtrans.Qty;
        #            if (_inventtrans.Qty < 0)
        #                ret -= _inventtrans.Qty;
        #              }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #SetVanKeszletTrans
        #Static void SetVanKeszletTrans(InventTrans _InventTrans)
        #{
        #Inventtable Inventtable ;
        #IF ((_InventTrans.TransType == InventTransType::Purch ||_InventTrans.TransType == InventTransType::Sales) &&
        #    _InventTrans.StatusReceipt <= StatusReceipt::Arrived )
        #    {
        #    Select forupdate  Vankeszlet  From Inventtable Where
        #        InventTable.ItemId == _InventTrans.ItemId;
        #    IF (!InventTable.VanKeszlet)
        #        {
        #        Inventtable.VanKeszlet = True;
        #        Inventtable.doUpdate();
        #        }
        #    }
        #
        #}
      ENDSOURCE
      SOURCE #SorozatszamKotelezo
        #static boolean SorozatszamKotelezo(ItemId _ItemId)
        #{
        #    InventTable     InventTable;
        #    ;
        #    select SorozatszamKotelezo from InventTable where InventTable.ItemId==_ItemId;
        #
        #    return InventTable.SorozatszamKotelezo;
        #}
      ENDSOURCE
      SOURCE #SorszamOK
        #static boolean SorszamOK(ItemId _ItemId, UpdSerialNumber UpdSerialNumber)
        #{
        #    InventTable     InventTable;
        #    ;
        #    select SorozatszamKotelezo, Gyariszamoscikk from InventTable where InventTable.ItemId==_ItemId;
        #    IF (InventTable.SorozatszamKotelezo && InventTable.Gyariszamoscikk)
        #     {
        #     Return StrLen(UpdSerialNumber) == InventTable.Gyariszamoscikk || InventTable.Gyariszamoscikk==1;
        #     }
        #    return True;
        #}
      ENDSOURCE
      SOURCE #structurecodeExists
        #static Boolean structurecodeExists(updStrukturaKod  _Strukturakod)
        #{
        #    InventTable InventTable;
        #
        #    select firstOnly Recid from InventTable where InventTable.Strukturakod==_Strukturakod;
        #
        #    return InventTable.RecId!=0;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics Table : InventItemBarcode unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #InventItemBarcode
    PROPERTIES
      Name                #InventItemBarcode
      Label               #@SYS63146
      TitleField1         #itemId
      TitleField2         #itemBarCode
      ConfigurationKey    #LogisticsBasic
      SecurityKey         #InventTables
      CacheLookup         #Found
      TableGroup          #Main
      PrimaryIndex        #ItemIdx
      ClusterIndex        #ItemIdx
      ModifiedDate        #Yes
      ModifiedTime        #Yes
      ModifiedBy          #Yes
      CreatedDate         #Yes
      CreatedTime         #Yes
    ENDPROPERTIES
    
    FIELDS
      FIELD #VonalkodTipus
        ENUM
        PROPERTIES
          Name                #VonalkodTipus
          Table               #InventItemBarcode
          EnumType            #VonalkodTipus
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #Barcode
        PROPERTIES
          Name                #Barcode
          Label               #@SYS24296
        ENDPROPERTIES
        
        GROUPFIELDS
          #itemBarCode
          #description
          #VonalkodTipus
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #BarcodeIdx
      PROPERTIES
        Name                #BarcodeIdx
        AllowDuplicates     #No
      ENDPROPERTIES
      
      INDEXFIELDS
        #itemBarCode
      ENDINDEXFIELDS
      
    ENDINDICES
    REFERENCES
      REFERENCE #UpdBevetLine
        PROPERTIES
          Name                #UpdBevetLine
          Table               #UpdBevetLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #itemId
            RelatedField        #ItemId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Wmstrans
        PROPERTIES
          Name                #Wmstrans
          Table               #WMSOrderTrans
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #itemId
            RelatedField        #itemId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
    ENDDELETEACTIONS
    
    METHODS
      Version: 3
      SOURCE #constructWebSyncBarCodeEntity
        #private WebSyncBarCodeEntity constructWebSyncBarCodeEntity()
        #{
        #    WebSyncBarCodeEntity entity;
        #    ;
        #
        #    try
        #    {
        #        entity = new WebSyncBarCodeEntity();
        #        entity.setItemId( this.ItemId );
        #        entity.setBarCode( this.itemBarCode );
        #        entity.setDataAreaId( curext() );
        #    }
        #    catch
        #    {
        #        return new WebSyncBarCodeEntity();
        #    }
        #    return entity;
        #}
      ENDSOURCE
      SOURCE #delete
        #public void delete()
        #{
        #    WebSync    webSync;
        #    ;
        #    webSync = new WebSync();
        #    webSync.deleteCatalogueBarCode( this.constructWebSyncBarCodeEntity() );
        #
        #    super();
        #}
      ENDSOURCE
      SOURCE #insert
        #public void insert()
        #{
        #    WebSync    webSync;
        #    ;
        #
        #    webSync = new WebSync();
        #    webSync.setCatalogueBarCode( this.constructWebSyncBarCodeEntity() );
        #    super();
        #}
      ENDSOURCE
      SOURCE #update
        #public void update()
        #{
        #    WebSync    webSync;
        #    ;
        #
        #    webSync = new WebSync();
        #    webSync.setCatalogueBarCode( this.constructWebSyncBarCodeEntity() );
        #    super();
        #}
      ENDSOURCE
      SOURCE #EanHozzarendel
        #Static Boolean EanHozzarendel(ItemId _itemid,ItemBarcode ItemBarcode,VonalkodTipus VonalkodTipus = VonalkodTipus::Kulso)
        #{
        #
        #  inventitembarcode   _inventitembarcode;
        #  InventDim           InventDim;
        #  Inventtable         Inventtable;
        #
        #    ;
        #    if (Itembarcode)
        #        {
        #        select _inventitembarcode
        #            where _inventitembarcode.itemBarCode == ItemBarcode;
        #        if (_inventitembarcode)
        #            {
        #            IF (_inventitembarcode.itemId !=_ItemId)
        #                {
        #                error("A "+_inventitembarcode.itemid +" cikkszámhoz a megadott vonalkód már rögzítve lett!");
        #                Return False;
        #                }
        #            Else
        #                {
        #                Return True;
        #                }
        #            }
        #         else
        #            {
        #            _inventitembarcode.itemBarCode = ItemBarcode;
        #            _inventitembarcode.itemId = _ItemId;
        #            _inventitembarcode.barcodeSetupId = "EAN13";
        #            _inventitembarcode.useForInput = noyes::Yes;
        #            _inventitembarcode.useForPrinting = noyes::Yes;
        #            _inventitembarcode.inventDimId = "AllBlank";
        #            _inventitembarcode.qty          = 1;
        #            _inventitembarcode.VonalkodTipus  = VonalkodTipus;
        #            Inventtable =Inventtable::find(_itemId);
        #            IF (Inventtable.configActive())
        #                {
        #                Inventdim.configId =Inventtable.StandardConfigId;
        #                _inventitembarcode.inventDimId = Inventdim::findOrCreate(Inventdim).inventDimId;
        #                }
        #            _inventitembarcode.insert();
        #            Return True;
        #            }
        #        }
        #     else
        #        {
        #        error("Töltse ki a vonalkód mezőt!");
        #        Return False;
        #        }
        #
        #}
      ENDSOURCE
      SOURCE #findOwnEan
        #public server static ownEan13 findOwnEan(ItemId itemId)
        #{
        #InventItemBarcode InventItemBarcode;
        #
        #Select InventItemBarcode where
        #    InventItemBarcode.itemId == itemId &&
        #    InventItemBarcode.VonalkodTipus == VonalkodTipus::Belso /* &&
        #    InventItemBarcode.inventDimId == "AllBalnk"*/;
        #Return InventItemBarcode.itemBarCode;
        #}
      ENDSOURCE
      SOURCE #SajatEanHazzarendel
        #Static OwnEan13 SajatEanHazzarendel(ItemId ItemId)
        #{
        #    NumberSeq       num;
        #    OwnEan13        OwnEan13;
        #    BarcodeEan13    BarcodeEan13;
        #    DataAreaId  dataAreaId;
        #
        #;
        #
        #       BarcodeEan13 = BarcodeEan13::construct();
        #       dataAreaId = curExt();
        #       if (dataAreaId != "HRP")
        #       {
        #           changecompany ("HRP")
        #           {
        #               num = NumberSeq::newGetNum(SalesParameters::numRefEan13());
        #       OwnEan13 = num.num();
        #       OwnEan13 = Barcode::insertModulo10CheckDigit(OwnEan13,13);
        #       //BarcodeEan13.encodeString(OwnEan13);
        #
        #        if (InventItemBarcode::findBarcode(OwnEan13,false,false))
        #        {
        #            num.abort();
        #            checkFailed(strfmt("Hibás saját eankod", OwnEan13));
        #            Return "";
        #        }
        #
        #           }
        #       }
        #       else
        #       {
        #            num = NumberSeq::newGetNum(SalesParameters::numRefEan13());
        #       OwnEan13 = num.num();
        #       OwnEan13 = Barcode::insertModulo10CheckDigit(OwnEan13,13);
        #       //BarcodeEan13.encodeString(OwnEan13);
        #
        #        if (InventItemBarcode::findBarcode(OwnEan13,false,false))
        #        {
        #            num.abort();
        #            checkFailed(strfmt("Hibás saját eankod", OwnEan13));
        #            Return "";
        #        }
        #
        #       }
        #
        #//UpdBevetLine_ItemBarCode.text(OwnEan13);
        #InventItemBarcode::EanHozzarendel(itemid, OwnEan13,VonalkodTipus::Belso);
        #Return OwnEan13;
        #
        #}
      ENDSOURCE
      SOURCE #SajatEanHazzarendelBSC
        #Static OwnEan13 SajatEanHazzarendelBSC(ItemId ItemId)
        #{
        #    NumberSeq       num;
        #    BSCEan13        BSCEan13;
        #    BarcodeEan13    BarcodeEan13;
        #    DataAreaId  dataAreaId;
        #;
        #
        #       BarcodeEan13 = BarcodeEan13::construct();
        #       dataAreaId = curExt();
        #       if (dataAreaId != "HRP")
        #       {
        #           changecompany ("HRP")
        #           {
        #                num = NumberSeq::newGetNum(SalesParameters::numRefEan13BSC());
        #       BSCEan13 = num.num();
        #       BSCEan13 = Barcode::insertModulo10CheckDigit(BSCEan13,13);
        #       //BarcodeEan13.encodeString(OwnEan13);
        #
        #        if (InventItemBarcode::findBarcode(BSCEan13,false,false))
        #        {
        #            num.abort();
        #            checkFailed(strfmt("Hibás saját eankod", BSCEan13));
        #            Return "";
        #        }
        #
        #           }
        #       }
        #       else
        #       {
        #            num = NumberSeq::newGetNum(SalesParameters::numRefEan13BSC());
        #       BSCEan13 = num.num();
        #       BSCEan13 = Barcode::insertModulo10CheckDigit(BSCEan13,13);
        #       //BarcodeEan13.encodeString(OwnEan13);
        #
        #        if (InventItemBarcode::findBarcode(BSCEan13,false,false))
        #        {
        #            num.abort();
        #            checkFailed(strfmt("Hibás saját eankod", BSCEan13));
        #            Return "";
        #        }
        #
        #       }
        #
        #//UpdBevetLine_ItemBarCode.text(OwnEan13);
        #InventItemBarcode::EanHozzarendel(itemid, BSCEan13,VonalkodTipus::Belso);
        #Return BSCEan13;
        #
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics Table : InventSum unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #InventSum
    PROPERTIES
      Name                #InventSum
      Label               #@SYS7092
      FormRef             #InventOnhandItem
      TitleField1         #ItemId
      TitleField2         #Closed
      ConfigurationKey    #LogisticsBasic
      SecurityKey         #InventTables
      CacheLookup         #NotInTTS
      TableGroup          #Transaction
      PrimaryIndex        #ItemDimIdx
      ClusterIndex        #ItemDimIdx
      OccEnabled          #No
    ENDPROPERTIES
    
    FIELDS
      FIELD #PostedValue
        REAL
        PROPERTIES
          Name                #PostedValue
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #InventSum
          ExtendedDataType    
            ARRAY 
              #CostAmountPosted
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #KuszobarPostedValue
        REAL
        PROPERTIES
          Name                #KuszobarPostedValue
          Label               #Küszöbár feladott összeg
          Table               #InventSum
          ExtendedDataType    
            ARRAY 
              #CostAmountPosted
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #KuszobarPostedQty
        REAL
        PROPERTIES
          Name                #KuszobarPostedQty
          Label               #Küszöbár feladott mennyiség
          Table               #InventSum
          ExtendedDataType    
            ARRAY 
              #InventQtyPosted
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #Transferorder
        REAL
        PROPERTIES
          Name                #Transferorder
          Table               #InventSum
          ExtendedDataType    
            ARRAY 
              #InventQtyTransferOrdered
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #TransferReservOrdered
        REAL
        PROPERTIES
          Name                #TransferReservOrdered
          Table               #InventSum
          ExtendedDataType    
            ARRAY 
              #InventQtyTransferReservOrdered
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #SortOrder
        INT
        PROPERTIES
          Name                #SortOrder
          Table               #InventSum
        ENDPROPERTIES
        
      FIELD #KuszobExchRate
        REAL
        PROPERTIES
          Name                #KuszobExchRate
          Table               #InventSum
          ExtendedDataType    
            ARRAY 
              #ExchRate
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #OnOrderSales
        REAL
        PROPERTIES
          Name                #OnOrderSales
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #InventSum
          ExtendedDataType    
            ARRAY 
              #InventQtyOnOrder
              #
            ENDARRAY
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemId
          #PostedValue
          #PostedQty
          #Deducted
          #Received
          #ReservOrdered
          #ReservPhysical
          #OnOrder
          #Ordered
          #KuszobarPostedValue
          #KuszobarPostedQty
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DeltaFields
        PROPERTIES
          Name                #DeltaFields
          Label               #@SYS98311
        ENDPROPERTIES
        
        GROUPFIELDS
          #PostedQty
          #KuszobarPostedQty
          #PostedValue
          #Deducted
          #Received
          #ReservOrdered
          #ReservPhysical
          #OnOrder
          #Ordered
          #QuotationIssue
          #QuotationReceipt
          #Registered
          #Picked
          #AvailOrdered
          #AvailPhysical
          #PhysicalValue
          #Arrived
          #PhysicalInvent
          #Transferorder
          #TransferReservOrdered
          #KuszobarPostedValue
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DeltaFieldsQty
        PROPERTIES
          Name                #DeltaFieldsQty
          Label               #@SYS98312
        ENDPROPERTIES
        
        GROUPFIELDS
          #PostedQty
          #KuszobarPostedQty
          #Deducted
          #Picked
          #Received
          #Registered
          #ReservPhysical
          #ReservOrdered
          #OnOrder
          #Ordered
          #Arrived
          #QuotationIssue
          #QuotationReceipt
          #Transferorder
          #TransferReservOrdered
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Kuszobar
        PROPERTIES
          Name                #Kuszobar
          Label               #Küszöbár
        ENDPROPERTIES
        
        GROUPFIELDS
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #TotalAvailable
        PROPERTIES
          Name                #TotalAvailable
          Label               #@SYS24243
        ENDPROPERTIES
        
        GROUPFIELDS
          #Arrived
          #PhysicalValue
          #Ordered
          #ReservOrdered
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Value
        PROPERTIES
          Name                #Value
          Label               #@SYS11762
        ENDPROPERTIES
        
        GROUPFIELDS
          #KuszobarPostedValue
          #PostedValue
          #PostedQty
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #Keszlet
      PROPERTIES
        Name                #Keszlet
      ENDPROPERTIES
      
      INDEXFIELDS
        #InventDimId
        #Closed
        #ItemId
      ENDINDEXFIELDS
      
    ENDINDICES
    REFERENCES
      REFERENCE #InventTableStruc
        PROPERTIES
          Name                #InventTableStruc
          Table               #InventTableStruc
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ItemId
            RelatedField        #ItemId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
    ENDDELETEACTIONS
    
    METHODS
      Version: 3
      SOURCE #addInventSumDelta
        #void addInventSumDelta(
        #    InventSumDelta _inventSumDelta
        #    )
        #{
        #    this.PostedQty        += _inventSumDelta.PostedQty;
        #    this.PostedValue      += _inventSumDelta.PostedValue;
        #    this.Deducted         += _inventSumDelta.Deducted;
        #    this.Received         += _inventSumDelta.Received;
        #    this.ReservPhysical   += _inventSumDelta.ReservPhysical;
        #    this.ReservOrdered    += _inventSumDelta.ReservOrdered;
        #    this.OnOrder          += _inventSumDelta.OnOrder;
        #    this.Ordered          += _inventSumDelta.Ordered;
        #    this.QuotationIssue   += _inventSumDelta.QuotationIssue;
        #    this.QuotationReceipt += _inventSumDelta.QuotationReceipt;
        #    this.Registered       += _inventSumDelta.Registered;
        #    this.Picked           += _inventSumDelta.Picked;
        #    this.AvailOrdered     += _inventSumDelta.AvailOrdered;
        #    this.AvailPhysical    += _inventSumDelta.AvailPhysical;
        #    this.PhysicalValue    += _inventSumDelta.PhysicalValue;
        #    this.Arrived          += _inventSumDelta.Arrived;
        #    this.PhysicalInvent   += _inventSumDelta.PhysicalInvent;
        #    this.Transferorder    += _inventSumDelta.TransferOrder;
        #    this.TransferReservOrdered    += _inventSumDelta.TransferReservOrdered;
        #    this.KuszobarPostedQty  +=_inventSumDelta.KuszobarpostedQty;
        #    this.KuszobarPostedValue += _inventSumDelta.KuszobarPostedValue;
        #    if (this.LastUpdDatePhysical < _inventSumDelta.LastUpdDatePhysical)
        #        this.LastUpdDatePhysical  = _inventSumDelta.LastUpdDatePhysical;
        #    if (this.LastUpdDateExpected < _inventSumDelta.LastUpdDateExpected)
        #        this.LastUpdDateExpected  = _inventSumDelta.LastUpdDateExpected;
        #}
      ENDSOURCE
      SOURCE #aDDInventTransOnSum
        #void addInventTransOnSum(InventTrans inventTrans, InventTransId InventTransId = "")
        #{
        #
        #    InventSum      inventSumIssue;
        #    InventDim      inventDimIssue;
        #
        #    IF (!InventTransId)
        #        InventTransId =inventTrans.InventTransId;
        #
        #    if (inventTrans.StatusReceipt== StatusReceipt::None)
        #    {
        #        switch(inventTrans.StatusIssue)
        #        {
        #            case StatusIssue::Sold:
        #                this.PostedQty    += inventTrans.Qty;
        #                this.KuszobarPostedQty += inventTrans.Qty;
        #                this.KuszobarPostedValue += inventTrans.qty*inventTrans.Kuszobar;
        #                break;
        #            case StatusIssue::Deducted:
        #                this.Deducted     -= inventTrans.Qty;
        #                this.KuszobarPostedQty += inventTrans.Qty;
        #                this.KuszobarPostedValue += inventTrans.qty*inventTrans.Kuszobar;
        #                break;
        #            case StatusIssue::Picked:
        #                this.Picked     -= inventTrans.Qty;
        #                break;
        #            case StatusIssue::ReservPhysical:
        #                this.ReservPhysical-= inventTrans.Qty;
        #                break;
        #            case StatusIssue::ReservOrdered:
        #                this.ReservOrdered-= inventTrans.Qty;
        #                //IT 20071025
        #                IF (inventTrans.TransType == InventTransType::InventTransfer)
        #                    this.TransferReservOrdered -= inventTrans.Qty;
        #                break;
        #            case StatusIssue::OnOrder:
        #                this.OnOrder      -= inventTrans.Qty;
        #                break;
        #            case StatusIssue::QuotationIssue:
        #                this.QuotationIssue-= inventTrans.Qty;
        #                break;
        #            default:
        #        }
        #    }
        #    else
        #    {
        #        switch(inventTrans.StatusReceipt)
        #        {
        #            case StatusReceipt::Purchased:
        #                this.PostedQty    += inventTrans.Qty;
        #                /*
        #                IF (inventTrans.PurchLineKuszobar(InventTransId))
        #                    {
        #                    this.KuszobarPostedQty += inventTrans.Qty;
        #                    this.KuszobarPostedValue += inventTrans.qty*inventTrans.PurchLineKuszobar(InventTransId);
        #                    }*/
        #                this.KuszobarPostedQty += inventTrans.Qty;
        #                this.KuszobarPostedValue += inventTrans.qty*inventTrans.Kuszobar;
        #                break;
        #            case StatusReceipt::Received:
        #                this.Received     += inventTrans.Qty;
        #                //IT 20071127
        #                /*
        #                IF (inventTrans.PurchLineKuszobar(InventTransId))
        #                    {
        #                    this.KuszobarPostedQty += inventTrans.Qty;
        #                    this.KuszobarPostedValue += inventTrans.qty*inventTrans.PurchLineKuszobar(InventTransId);
        #                    }*/
        #                this.KuszobarPostedQty += inventTrans.Qty;
        #                this.KuszobarPostedValue += inventTrans.qty*inventTrans.Kuszobar;
        #                break;
        #            case StatusReceipt::Registered:
        #                this.Registered   += inventTrans.Qty;
        #                break;
        #            case StatusReceipt::Arrived:
        #                this.Arrived      += inventTrans.Qty;
        #                break;
        #
        #            case StatusReceipt::Ordered:
        #                this.Ordered      += inventTrans.Qty;
        #                                //IT 20071025
        #                IF (inventTrans.TransType == InventTransType::InventTransfer)
        #                    this.Transferorder += inventTrans.Qty;
        #
        #                break;
        #            case StatusReceipt::QuotationReceipt:
        #                this.QuotationReceipt+= inventTrans.Qty;
        #                break;
        #            default:
        #        }
        #
        #        if ( ! inventTrans.isTransfer() )
        #        {
        #            if (inventTrans.DatePhysical)
        #                this.LastUpdDatePhysical = inventTrans.DatePhysical;
        #            else
        #            if (inventTrans.DateInvent)
        #                this.LastUpdDatePhysical = inventTrans.DateInvent;
        #            else
        #            if (inventTrans.DateExpected)
        #                this.LastUpdDateExpected = inventTrans.DateExpected;
        #        }
        #        else
        #        {
        #            inventDimIssue = this.inventDimTransferIssue(inventTrans);
        #            if (inventDimIssue && inventDimIssue.InventDimId != inventTrans.InventDimId)
        #            {
        #                inventSumIssue = InventSum::find(inventTrans.ItemId,inventDimIssue.InventDimId);
        #                if (inventSumIssue.RecId)
        #                {
        #                    this.LastUpdDateExpected = inventSumIssue.LastUpdDateExpected;
        #                    this.LastUpdDatePhysical = inventSumIssue.LastUpdDatePhysical;
        #                }
        #            }
        #        }
        #
        #    }
        #
        #    this.PostedValue += inventTrans.costValue();
        #
        #    if (inventTrans.isUpdatedPhysical())
        #        this.PhysicalValue += inventTrans.CostAmountPhysical;
        #}
      ENDSOURCE
      SOURCE #Amount2
        #display Amount Amount2()
        #{
        #    InventTable InventTable;
        #    ;
        #
        #    select Amount2 from InventTable where InventTable.ItemId == this.ItemId;
        #
        #    return InventTable.Amount2;
        #}
      ENDSOURCE
      SOURCE #constructStockSyncEntity
        #private StockSyncEntity constructStockSyncEntity(SyncOperation _syncOperation = SyncOperation::Set)
        #{
        #    StockSyncEntity entity;
        #    ;
        #    try
        #    {
        #        entity = new StockSyncEntity();
        #
        #        entity.setItemId( this.ItemId );
        #
        #        entity.setInventLocationId( this.inventLocationId() );
        #
        #        entity.setSyncOperation(_syncOperation);
        #
        #    }
        #    catch
        #    {
        #        return new StockSyncEntity();
        #    }
        #    return entity;
        #}
      ENDSOURCE
      SOURCE #constructWebSyncStockEntity
        #private WebSyncStockEntity constructWebSyncStockEntity( ConfigId _configId, InventLocationId _inventLocationId )
        #{
        #    WebSyncStockEntity entity;
        #    ;
        #    try
        #    {
        #        entity = new WebSyncStockEntity();
        #        entity.setItemId( this.ItemId );
        #        entity.setDataAreaId( curext() );
        #        entity.setConfigId( _configId );
        #        entity.setInventLocationId( _inventLocationId );
        #    }
        #    catch
        #    {
        #        return new WebSyncStockEntity();
        #    }
        #    return entity;
        #}
      ENDSOURCE
      SOURCE #getAtlagAr
        #real getAtlagAr()
        #{
        #    InventTableModule       inventTableModule;
        #    ;
        #    if (this.PostedQty)
        #        return this.PostedValue / this.PostedQty;
        #    else
        #        //return this.PostedValue;
        #    // Zs.E. 2007.09.19
        #    {
        #            inventTableModule = InventTableModule::find(this.ItemId, ModuleInventPurchSales::Invent);
        #            return inventTableModule.Price;
        #    }
        #}
      ENDSOURCE
      SOURCE #getDispAtlagAr
        #display real getDispAtlagAr()
        #{
        #    return this.getAtlagAr();
        #}
      ENDSOURCE
      SOURCE #getDispKuszobar
        #display real getDispKuszobar()
        #{
        #    return this.getKuszobar();
        #}
      ENDSOURCE
      SOURCE #getElerhetoKeszletErtek
        #display real getElerhetoKeszletErtek()
        #{
        #    return this.getAtlagAr() * this.availPhysical();
        #}
      ENDSOURCE
      SOURCE #getGyartoNev
        #Display GyartoNevArcsoport getGyartoNev()
        #{
        #    InventTable InventTable;
        #    ;
        #
        #    select GyartoNev from InventTable where InventTable.ItemId == this.ItemId;
        #
        #    return InventTable.GyartoNev;
        #}
      ENDSOURCE
      SOURCE #getItemGroupId
        #Display ItemGroupId getItemGroupId()
        #{
        #    InventTable InventTable;
        #    ;
        #
        #    select ItemGroupId from InventTable where InventTable.ItemId == this.ItemId;
        #
        #    return InventTable.ItemGroupId;
        #}
      ENDSOURCE
      SOURCE #getJellegNev1
        #Display JellegNevArcsoport getJellegNev1()
        #{
        #    InventTable InventTable;
        #    ;
        #
        #    select JellegNev1 from InventTable where InventTable.ItemId == this.ItemId;
        #
        #    return InventTable.JellegNev1;
        #}
      ENDSOURCE
      SOURCE #getJellegNev2
        #Display JellegNev2Arcsoport getJellegNev2()
        #{
        #    InventTable InventTable;
        #    ;
        #
        #    select JellegNev2 from InventTable where InventTable.ItemId == this.ItemId;
        #
        #    return InventTable.JellegNev2;
        #}
      ENDSOURCE
      SOURCE #getJellegNev3
        #Display JellegNev3Arcsoport getJellegNev3()
        #{
        #    InventTable InventTable;
        #    ;
        #
        #    select JellegNev3 from InventTable where InventTable.ItemId == this.ItemId;
        #
        #    return InventTable.JellegNev3;
        #}
      ENDSOURCE
      SOURCE #getKuszobar
        #real getKuszobar()
        #{
        #    InventTableModule       inventTableModule;
        #    ;
        #    if (this.KuszobarPostedQty)
        #        return this.KuszobarPostedValue / this.KuszobarPostedQty;
        #    else
        #        //return this.KuszobarPostedValue;
        #    // Zs.E. 2007.09.19
        #    {
        #            inventTableModule = InventTableModule::find(this.ItemId, ModuleInventPurchSales::Invent);
        #            return inventTableModule.Kuszobar;
        #    }
        #}
      ENDSOURCE
      SOURCE #getTenylegesKeszletErtek
        #display real getTenylegesKeszletErtek()
        #{
        #    return this.getAtlagAr() * this.physicalInvent();
        #}
      ENDSOURCE
      SOURCE #getutonlevo
        #display real getutonlevo()
        #{
        #    inventsum tinventsum;
        #    ;
        #
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #hasSyncCondition
        #private boolean hasSyncCondition()
        #{
        #    InventDim  idim;
        #    boolean ret = false;
        #    ;
        #
        #    try
        #    {
        #        idim = this.inventDim();
        #
        #        if ( ( idim.InventLocationId == inventparameters::find().InventLocationBelso ) ||
        #           ( idim.InventLocationId == inventparameters::find().InventLocationKulso ) )
        #        {
        #            if ( ( idim.configId == 'ALAP' ) || ( idim.configId == 'Spec ár' ) ||
        #               ( idim.configId == 'BL' ) || ( idim.configId == 'Bookline' ) )
        #            {
        #                ret = this.Closed == NoYes::No ? true : false;
        #            }
        #        }
        #    }
        #    catch
        #    {
        #        return ret;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #Insert
        #void insert()
        #{
        #    ;
        #
        #    this.ClosedQty = this.isAllQtyFieldsZero();
        #    this.Closed    = this.isAllValueFieldsZero() && this.ClosedQty;
        #    this.setAvailFields();
        #    // Added on 2008.05.09 at 09:10:07 by Doszpod Roland
        #    this.setSortOrderValue();
        #
        #    this.setSyncStock(SyncOperation::Insert);
        #
        #    super();
        #}
      ENDSOURCE
      SOURCE #merge
        #public void merge(InventSum _mergeInto)
        #{
        #    ;
        #    _mergeInto.PostedQty        += this.PostedQty;
        #    _mergeInto.PostedValue      += this.PostedValue;
        #    _mergeInto.Deducted         += this.Deducted;
        #    _mergeInto.Received         += this.Received;
        #    _mergeInto.ReservPhysical   += this.ReservPhysical;
        #    _mergeInto.ReservOrdered    += this.ReservOrdered;
        #    _mergeInto.OnOrder          += this.OnOrder;
        #    _mergeInto.Ordered          += this.Ordered;
        #    _mergeInto.QuotationIssue   += this.QuotationIssue;
        #    _mergeInto.QuotationReceipt += this.QuotationReceipt;
        #    _mergeInto.Registered       += this.Registered;
        #    _mergeInto.Picked           += this.Picked;
        #    _mergeInto.AvailOrdered     += this.AvailOrdered;
        #    _mergeInto.AvailPhysical    += this.AvailPhysical;
        #    _mergeInto.PhysicalValue    += this.PhysicalValue;
        #    _mergeInto.Arrived          += this.Arrived;
        #    _mergeInto.PhysicalInvent   += this.PhysicalInvent;
        #    _mergeInto.Transferorder    += this.Transferorder;
        #    _mergeInto.TransferReservordered    += this.Transferreservordered;
        #
        #    if (_mergeInto.LastUpdDatePhysical < this.LastUpdDatePhysical)
        #        _mergeInto.LastUpdDatePhysical  = this.LastUpdDatePhysical;
        #    if (_mergeInto.LastUpdDateExpected < this.LastUpdDateExpected)
        #        _mergeInto.LastUpdDateExpected  = this.LastUpdDateExpected;
        #
        #    _mergeInto.ClosedQty        = _mergeInto.isAllQtyFieldsZero();
        #    _mergeInto.Closed           = _mergeInto.isAllValueFieldsZero() && _mergeInto.ClosedQty;
        #
        #    super(_mergeInto);
        #}
      ENDSOURCE
      SOURCE #OrderedSum
        #//BP Deviation documented
        #display inventQtyOrderedSum orderedSum()
        #{
        #    return this.Ordered + this.Arrived-this.Transferorder; //IT;
        #}
        #
      ENDSOURCE
      SOURCE #RaktarBeerk
        #Qty  RaktarBeerk()
        #{
        #InventTrans InventTrans;
        #InventDim   InventDim;
        #Select sum(qty) from InventTrans
        #    where   InventTrans.StatusReceipt  == StatusReceipt::Ordered &&
        #            InventTrans.TransType      == Inventtranstype::InventTransfer
        #            Join InventDim where
        #                    InventDim.inventDimId == InventTrans.inventDimId &&
        #                    InventDim.InventLocationId == inventparameters::find().InventLocationBelso;
        #
        #
        #}
      ENDSOURCE
      SOURCE #setSortOrderValue
        #// Added on 2008.05.09 at 09:10:00 by Doszpod Roland
        #void setSortOrderValue()
        #{
        #    InventDim    InventDim;
        #    WMSLocation  WMSLocation;
        #    ;
        #
        #    select recid, wmslocationid, InventLocationId from InventDim where
        #        InventDim.inventDimId == this.InventDimId;
        #
        #    if (InventDim)
        #    {
        #        select PickingOrder from WMSLocation where
        #            WMSLocation.wMSLocationId == InventDim.wMSLocationId &&
        #            WMSLocation.inventLocationId ==InventDim.InventLocationId;
        #
        #        this.SortOrder = WMSLocation.PickingOrder;
        #    }
        #}
      ENDSOURCE
      SOURCE #setSyncStock
        #private boolean setSyncStock()
        #{
        #    InventDim  idim;
        #    boolean ret = false;
        #
        #    WebSync    webSync;
        #    ;
        #
        #    try
        #    {
        #        idim = this.inventDim();
        #
        #        webSync = new WebSync();
        #
        #        if ( ( ( idim.InventLocationId == inventparameters::find().InventLocationBelso ) ||
        #             ( idim.InventLocationId == inventparameters::find().InventLocationKulso ) ) &&
        #             ( ( idim.configId == 'BL' ) || ( idim.configId == 'BookLine' ) || ( idim.configId == 'ALAP' ) || ( idim.configId == 'Spec ár' ) )
        #             )
        #
        #        {
        #               webSync.setCatalogueStock( this.constructWebSyncStockEntity( idim.configId, idim.InventLocationId ) );
        #               ret = true;
        #        }
        #    }
        #    catch
        #    {
        #        return ret;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #sUBInventTransOnSum
        #void subInventTransOnSum( InventTrans inventTrans, InventTransId InventTransId = "")
        #{
        #    IF (!InventTransId)
        #        InventTransId =inventTrans.InventTransId;
        #
        #    if (inventTrans.StatusReceipt== StatusReceipt::None)
        #    {
        #        switch (inventTrans.StatusIssue)
        #        {
        #            case StatusIssue::Sold:
        #                this.PostedQty    -= inventTrans.Qty;
        #                this.KuszobarPostedQty -= inventTrans.Qty;
        #                this.KuszobarPostedValue -= inventTrans.qty*inventTrans.Kuszobar;
        #                break;
        #            case StatusIssue::Deducted:
        #                this.Deducted     += inventTrans.Qty;
        #                this.KuszobarPostedQty -= inventTrans.Qty;
        #                this.KuszobarPostedValue -= inventTrans.qty*inventTrans.Kuszobar;
        #                break;
        #            case StatusIssue::Picked:
        #                this.Picked     += inventTrans.Qty;
        #                break;
        #            case StatusIssue::ReservPhysical:
        #                this.ReservPhysical+= inventTrans.Qty;
        #                break;
        #            case StatusIssue::ReservOrdered:
        #                this.ReservOrdered+= inventTrans.Qty;
        #                //IT 20071025
        #                IF (inventTrans.TransType == InventTransType::InventTransfer)
        #                    this.TransferReservOrdered += inventTrans.Qty;
        #                break;
        #            case StatusIssue::OnOrder:
        #                this.OnOrder      += inventTrans.Qty;
        #                break;
        #            case StatusIssue::QuotationIssue:
        #                this.QuotationIssue+= inventTrans.Qty;
        #                break;
        #            default:
        #        }
        #    }
        #    else
        #    {
        #        switch(inventTrans.StatusReceipt)
        #        {
        #            case StatusReceipt::Purchased:
        #                this.PostedQty    -= inventTrans.Qty;
        #                /*
        #                IF (inventTrans.PurchLineKuszobar(InventTransId))
        #                    {
        #                    this.KuszobarPostedQty -= inventTrans.Qty;
        #                    this.KuszobarPostedValue -= inventTrans.qty*inventTrans.PurchLineKuszobar(InventTransId);
        #                    }*/
        #                this.KuszobarPostedQty -= inventTrans.Qty;
        #                this.KuszobarPostedValue -= inventTrans.qty*inventTrans.Kuszobar;
        #                break;
        #            case StatusReceipt::Received:
        #                this.Received     -= inventTrans.Qty;
        #                //IT 20071127
        #                /*
        #                IF (inventTrans.PurchLineKuszobar(InventTransId))
        #                    {
        #                    this.KuszobarPostedQty -= inventTrans.Qty;
        #                    this.KuszobarPostedValue -= inventTrans.qty*inventTrans.PurchLineKuszobar(InventTransId);
        #                    }*/
        #                this.KuszobarPostedQty -= inventTrans.Qty;
        #                this.KuszobarPostedValue -= inventTrans.qty*inventTrans.Kuszobar;
        #                break;
        #            case StatusReceipt::Registered:
        #                this.Registered   -= inventTrans.Qty;
        #                break;
        #            case StatusReceipt::Arrived:
        #                this.Arrived      -= inventTrans.Qty;
        #                break;
        #            case StatusReceipt::Ordered:
        #                this.Ordered      -= inventTrans.Qty;
        #                //IT 20071025
        #                IF (inventTrans.TransType == InventTransType::InventTransfer)
        #                    this.Transferorder -= inventTrans.Qty;
        #                break;
        #            case StatusReceipt::QuotationReceipt:
        #                this.QuotationReceipt-= inventTrans.Qty;
        #                break;
        #            default:
        #        }
        #    }
        #
        #    this.PostedValue -= inventTrans.costValue();
        #
        #    if (inventTrans.isUpdatedPhysical())
        #        this.PhysicalValue -= inventTrans.CostAmountPhysical;
        #
        #
        #}
      ENDSOURCE
      SOURCE #Update
        #void update()
        #{
        #//    WebSync    webSync;
        #    ;
        #    this.ClosedQty = this.isAllQtyFieldsZero();
        #    this.Closed    = this.isAllValueFieldsZero() && this.ClosedQty;
        #    this.setAvailFields();
        #
        #//    if ( this.hasSyncCondition() )
        #//    {
        #//        webSync = new WebSync();
        #//        webSync.setCatalogueStock( this.constructWebSyncStockEntity() );
        #//    }
        #    this.setSyncStock(SyncOperation::Update);
        #
        #    super();
        #
        #}
      ENDSOURCE
      SOURCE #findSum
        #static InventSum findSum(
        #    ItemId              _itemId,
        #    InventDim           _inventDimCriteria,
        #    InventDimParm       _inventDimParm,
        #    InventSumFields     _sumFields  = InventSumFields::All
        #    )
        #{
        #    InventSum   inventSum;
        #    InventDim   inventDim;
        #    ;
        #    inventSum.selectLocked(false);
        #
        #    if (_inventDimParm.InventSerialIdFlag && _inventDimCriteria.InventSerialId)
        #    {
        #        switch (_sumFields)
        #        {
        #            case InventSumFields::Financial:
        #                #inventDimSelect(inventDim,_inventDimCriteria,_inventDimParm,forcePlaceholders tableId from,serialIdIdx)
        #                join sum(PostedQty),sum(PostedValue) from inventSum
        #                    index hint ItemDimIdx
        #                    where inventSum.InventDimId == inventDim.InventDimId     &&
        #                          inventSum.ItemId      == _itemId                   &&
        #                          inventSum.Closed      == NoYes::No;
        #                break;
        #
        #            case InventSumFields::Physical:
        #                #inventDimSelect(inventDim,_inventDimCriteria,_inventDimParm,forcePlaceholders tableId from,serialIdIdx)
        #                join sum(PostedQty),sum(PostedValue),sum(Received),sum(Deducted),sum(Picked),sum(Registered) from inventSum
        #                    index hint ItemDimIdx
        #                    where inventSum.InventDimId == inventDim.InventDimId     &&
        #                          inventSum.ItemId      == _itemId                   &&
        #                          inventSum.Closed      == NoYes::No;
        #                break;
        #
        #
        #            default:
        #                #inventDimSelect(inventDim,_inventDimCriteria,_inventDimParm,forcePlaceholders tableId from,serialIdIdx)
        #                join #inventSumFields from inventSum
        #                    index hint ItemDimIdx
        #                    where inventSum.InventDimId == inventDim.InventDimId     &&
        #                          inventSum.ItemId      == _itemId                   &&
        #                          inventSum.Closed      == NoYes::No;
        #        }
        #    }
        #    else
        #    {
        #        switch (_sumFields)
        #        {
        #            case InventSumFields::Financial:
        #                select sum(PostedQty),sum(PostedValue) from inventSum
        #                    where inventSum.ItemId      == _itemId   &&
        #                          inventSum.Closed      == NoYes::No
        #                #inventDimExistsJoin(inventSum.InventDimId,inventDim,_InventDimCriteria,_InventDimParm);
        #                break;
        #
        #            case InventSumFields::Physical:
        #                select sum(PostedQty),sum(PostedValue),sum(Received),sum(Deducted),sum(Picked),sum(Registered) from inventSum
        #                    where inventSum.ItemId      == _itemId   &&
        #                          inventSum.Closed      == NoYes::No
        #                #inventDimExistsJoin(inventSum.InventDimId,inventDim,_InventDimCriteria,_InventDimParm);
        #                break;
        #
        #            default:
        #                select #inventSumFields from inventSum
        #                    where inventSum.ItemId      == _itemId   &&
        #                          inventSum.Closed      == NoYes::No
        #                #inventDimExistsJoin(inventSum.InventDimId,inventDim,_InventDimCriteria,_InventDimParm);
        #        }
        #    }
        #
        #    return inventSum;
        #
        #}
        #
        #
      ENDSOURCE
      SOURCE #InventQtyUtonlevo
        #Server Static Qty InventQtyUtonlevo(ItemId ItemId, Inventdim inventDimCriteria, InventDimParm InventDimParm)
        #{
        #InventTrans InventTrans;
        #InventTrans InventTransIssue;
        #InventDim   InventDim;
        #;
        #
        # #inventDimSelect(inventDim,inventDimCriteria,inventDimParm)
        #    Join sum(qty) from  InventTrans where
        #        InventTrans.ItemId == ItemId &&
        #        InventTrans.inventDimId == Inventdim.inventDimId &&
        #        InventTrans.TransType == InventTransType::InventTransfer &&
        #        InventTrans.StatusReceipt == StatusReceipt::Ordered
        #    Join sum(qty) from  InventTransIssue Where
        #        InventTransIssue.InventTransId == InventTrans.InventTransId &&
        #        InventTransIssue.StatusIssue  == StatusIssue::Picked;
        #
        #/* #inventDimSelect(inventDim,inventDimCriteria,inventDimParm)
        #    Join sum(qty) from  InventTrans where
        #        InventTrans.ItemId == ItemId &&
        #        InventTrans.inventDimId == Inventdim.inventDimId &&
        #        InventTrans.TransType == InventTransType::InventTransfer &&
        #        InventTrans.StatusIssue == StatusIssue::ReservOrdered;
        #Return InventTrans.Qty;
        #*/
        #Return -InventTransIssue.Qty;
        #
        #}
      ENDSOURCE
      SOURCE #mustInventTransBeUpdated
        #static boolean mustInventTransBeUpdated(InventTrans inventTrans,InventTrans inventTrans_Orig= null)
        #{
        #    if (inventTrans_Orig.Qty                == inventTrans.Qty                  &&
        #        inventTrans_Orig.CostAmountPhysical == inventTrans.CostAmountPhysical   &&
        #        inventTrans_Orig.StatusIssue        == inventTrans.StatusIssue          &&
        #        inventTrans_Orig.StatusReceipt      == inventTrans.StatusReceipt        &&
        #        inventTrans_Orig.InventDimId        == inventTrans.InventDimId          &&
        #        inventTrans_Orig.ItemId             == inventTrans.ItemId               &&
        #        inventTrans_Orig.DatePhysical       == inventTrans.DatePhysical         &&
        #        inventTrans_Orig.DateInvent         == inventTrans.DateInvent           &&
        #        inventTrans_Orig.DateExpected       == inventTrans.DateExpected         &&
        #        inventTrans_Orig.costValue()        == inventTrans.costValue()          &&
        #        InventTrans_Orig.Kuszobar           == inventTrans.Kuszobar //CsGy 08.01.06.
        #       )
        #    {
        #        return false;
        #    }
        #
        #    return true;
        #}
        #
      ENDSOURCE
      SOURCE #queryAddSumFields
        #static void queryAddSumFields(
        #    QueryBuildDataSource    qBS,
        #    boolean                 onlyAvail = false
        #    )
        #{
        #    QueryBuildFieldList qbfl = qBS.fields();
        #    container   c;
        #    Counter     i;
        #
        #    void addField(fieldId fieldId)
        #    {
        #        if (! confind(c,fieldId))
        #            qbfl.addField(fieldId,SelectionField::Sum);
        #    }
        #
        #    for (i=1;i<=qbfl.fieldCount();i++)
        #    {
        #        if (qbfl.fieldKind(i) == SelectionField::Sum)
        #            c+=qbfl.field(i);
        #    }
        #
        #    if (! onlyAvail)
        #    {
        #        addField(fieldnum(InventSum,PostedQty));
        #        addField(fieldnum(InventSum,PostedValue));
        #        addField(fieldnum(InventSum,PhysicalValue));
        #        addField(fieldnum(InventSum,Deducted));
        #        addField(fieldnum(InventSum,Registered));
        #        addField(fieldnum(InventSum,Received));
        #        addField(fieldnum(InventSum,Picked));
        #        addField(fieldnum(InventSum,ReservPhysical));
        #        addField(fieldnum(InventSum,ReservOrdered));
        #        addField(fieldnum(InventSum,OnOrder));
        #        addField(fieldnum(InventSum,Ordered));
        #        addField(fieldnum(InventSum,Arrived));
        #        addField(fieldnum(InventSum,QuotationReceipt));
        #        addField(fieldnum(InventSum,QuotationIssue));
        #        addField(fieldnum(InventSum,PhysicalInvent));
        #        addField(fieldnum(InventSum,KuszobarPostedValue));
        #        addField(fieldnum(InventSum,KuszobarPostedQty));
        #        addfield(fieldnum(inventsum,transferOrder));
        #        addField(fieldnum(InventSum,TransferReservOrdered));//IT
        #
        #    }
        #
        #    addField(fieldnum(InventSum,AvailPhysical));
        #    addField(fieldnum(InventSum,AvailOrdered));
        #}
      ENDSOURCE
      SOURCE #Raktarkozi
        #Server Static InventQtyRaktarkozi Raktarkozi(ItemId ItemId, Inventdim inventDimCriteria, InventDimParm InventDimParm)
        #{
        #InventTrans InventTrans;
        #InventTrans InventTransIssue;
        #InventDim   InventDim;
        #;
        #
        # #inventDimSelect(inventDim,inventDimCriteria,inventDimParm)
        #    Join sum(qty) from  InventTrans where
        #        InventTrans.ItemId == ItemId &&
        #        InventTrans.inventDimId == Inventdim.inventDimId &&
        #        InventTrans.TransType == InventTransType::InventTransfer &&
        #        InventTrans.StatusReceipt == StatusReceipt::Ordered
        #    Join sum(qty) from  InventTransIssue Where
        #        InventTransIssue.InventTransId == InventTrans.InventTransId &&
        #        InventTransIssue.StatusIssue  == StatusIssue::ReservPhysical;
        #
        #/* #inventDimSelect(inventDim,inventDimCriteria,inventDimParm)
        #    Join sum(qty) from  InventTrans where
        #        InventTrans.ItemId == ItemId &&
        #        InventTrans.inventDimId == Inventdim.inventDimId &&
        #        InventTrans.TransType == InventTransType::InventTransfer &&
        #        InventTrans.StatusIssue == StatusIssue::ReservOrdered;
        #Return InventTrans.Qty;
        #*/
        #Return -InventTransIssue.Qty;
        #
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: PRN

; Microsoft Dynamics Project : WebSync unloaded
; --------------------------------------------------------------------------------
  PROJECTVERSION 2
  
  PROJECT #WebSync
   PRIVATE
  PROPERTIES
    Name                #WebSync
  ENDPROPERTIES
  
    GROUP #Jobs
      PROPERTIES
        Name                #Jobs
        ProjectGroupType    #Jobs
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 5
        UTILOBJECTID 0
        NODETYPE 215
        NAME #TestDataAreaIdJob
      ENDNODE
      ENDGROUP
      
    GROUP #Classes
      PROPERTIES
        Name                #Classes
        ProjectGroupType    #Classes
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 50287
        NODETYPE 329
        NAME #WebSyncBarCodeEntity
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 50286
        NODETYPE 329
        NAME #WebSyncStockEntity
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 50285
        NODETYPE 329
        NAME #WebSyncPriceEntity
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 50284
        NODETYPE 329
        NAME #WebSyncPictureEntity
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 50283
        NODETYPE 329
        NAME #WebSyncInventTxtEntity
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 50282
        NODETYPE 329
        NAME #WebSyncInventEntity
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 50281
        NODETYPE 329
        NAME #WebSyncGarantyEntity
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 50280
        NODETYPE 329
        NAME #WebSyncBaseEntity
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 50279
        NODETYPE 329
        NAME #WebSync
      ENDNODE
      ENDGROUP
      
    GROUP #Tables
      PROPERTIES
        Name                #Tables
        ProjectGroupType    #Tables
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 50193
        NODETYPE 204
        NAME #updKepek
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 179
        NODETYPE 204
        NAME #InventTxt
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 175
        NODETYPE 204
        NAME #InventTable
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 1213
        NODETYPE 204
        NAME #InventItemBarcode
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 174
        NODETYPE 204
        NAME #InventSum
      ENDNODE
      ENDGROUP
      
  ENDPROJECT
  

***Element: END
